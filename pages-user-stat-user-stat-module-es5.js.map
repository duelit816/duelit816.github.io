{"version":3,"sources":["webpack:///src/app/features/admin/pages/user-stat/user-stat-routing.module.ts","webpack:///src/app/features/admin/pages/user-stat/user-stat.component.ts","webpack:///src/app/features/admin/pages/user-stat/user-stat.component.html","webpack:///src/app/features/admin/pages/user-stat/user-stat.module.ts"],"names":["routes","path","component","UserStatRoutingModule","forChild","imports","exports","UserStatComponent","api","route","toast","numberPipe","createdChallengeStats$","title","classSelector","viewType","xAxisLabel","yAxisLabel","playedChallengeStats$","userId","snapshot","params","userStatsPath","buildPath","UserStats","stats$","get","pipe","err","error","statusText","message","games","completed","wins","lost","win_percentage","redeemed","count","coins","dollar","average","getChallengeStats","subTitle","data","isAverage","dollarFormat","transform","getMetric","subscribe","userStats","createdChallengeVsHours","createdData","i","push","type","playedChallengeVsHours","playedData","selector","templateUrl","styleUrls","UserStatModule","declarations","providers"],"mappings":"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","file":"pages-user-stat-user-stat-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserStatComponent } from './user-stat.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UserStatComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserStatRoutingModule { }\r\n","import { DecimalPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { UsersApi } from '@shared/constants/api';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { MetricInputModel } from '../../components/metric/metric.model';\r\nimport { UserStatsModel } from './models/user-stats.model';\r\n\r\n@Component({\r\n  selector: 'duelit-user-stat',\r\n  templateUrl: './user-stat.component.html',\r\n  styleUrls: ['./user-stat.component.scss']\r\n})\r\nexport class UserStatComponent implements OnInit {\r\n  stats$: Observable<UserStatsModel>;\r\n  createdChallengeStats$: any = {\r\n    title: \"Challenge Sent\",\r\n    classSelector: \"challenge-sent\",\r\n    viewType: \"line\",\r\n    xAxisLabel: \"Hour of day (in UTC)\",\r\n    yAxisLabel: \"Count\",\r\n  };\r\n  playedChallengeStats$: any = {\r\n    title: \"Challenge Played\",\r\n    classSelector: \"challenge-played\",\r\n    viewType: \"line\",\r\n    xAxisLabel: \"Hour of day (in UTC)\",\r\n    yAxisLabel: \"Count\",\r\n  };\r\n  constructor(\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private toast: ToastService,\r\n    private numberPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const userId = this.route.snapshot.params.userId;\r\n\r\n    const userStatsPath = this.api.buildPath(UsersApi.UserStats, [userId]);\r\n    this.stats$ = this.api.get(userStatsPath).pipe(\r\n      catchError(err => {\r\n        this.toast.error(err.error || err.statusText || err.message);\r\n\r\n        return of({\r\n          games: {\r\n            completed: 0,\r\n            wins: 0,\r\n            lost: 0,\r\n            win_percentage: 0\r\n          },\r\n          redeemed: {\r\n            count: 0,\r\n            coins: 0,\r\n            dollar: 0,\r\n            average: {\r\n              coins: 0,\r\n              dollar: 0\r\n            }\r\n          }\r\n        });\r\n      })\r\n    ) as Observable<UserStatsModel>;\r\n    this.getChallengeStats();\r\n  }\r\n\r\n  getMetric(title, subTitle, data): MetricInputModel {\r\n    return {\r\n      title,\r\n      subTitle,\r\n      data\r\n    };\r\n  }\r\n\r\n  getCoinDollarMetric(title, subTitle, coins, dollar, isAverage = false): MetricInputModel {\r\n    const dollarFormat = isAverage ? '.3-3' : '0.0';\r\n    const data = `$${this.numberPipe.transform(dollar, dollarFormat)}<br>${this.numberPipe.transform(coins, '.2-2')} coins`;\r\n    return this.getMetric(title, subTitle, data);\r\n  }\r\n\r\n\r\n  getChallengeStats() {\r\n    this.stats$.subscribe(userStats => {\r\n      const createdChallengeVsHours = userStats[\"createdChallengeVsHours\"];\r\n      const createdData = [];\r\n      if (createdChallengeVsHours) {\r\n        for(let i=0; i<24; i++) {\r\n          createdData.push({type: i, count: createdChallengeVsHours[i] || 0});\r\n        }\r\n      }\r\n      this.createdChallengeStats$.data = createdData;\r\n\r\n      const playedChallengeVsHours = userStats[\"playedChallengeVsHours\"];\r\n      const playedData = [];\r\n      if (playedChallengeVsHours) {\r\n        for(let i=0; i<24; i++) {\r\n          playedData.push({type: i, count: playedChallengeVsHours[i] || 0});\r\n        }\r\n      }\r\n      this.playedChallengeStats$.data = playedData;\r\n    });\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"stats$ | async; else loading; let stats\">\r\n  <h5 class=\"pointer\" onclick=\"window.history.back()\">&lt; back to users</h5>\r\n  <h4>Game Stat</h4>\r\n  <div class=\"row container\">\r\n    <duelit-metric [metric]=\"getMetric('Wins', 'Count - Games Won', stats.games.wins)\" class=\"col-3\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getMetric('Losts', 'Count - Games Losts', stats.games.lost)\" class=\"col-3\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getMetric('Played', 'Count - Games Played', stats.games.completed)\" class=\"col-3\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getMetric('Win Rate', 'Win Percentage', ((stats.games.win_percentage * 100) | number: '.0-2'))\" class=\"col-3\"></duelit-metric>\r\n  </div>\r\n\r\n  <h4>Challenge Stats</h4>\r\n  <div class=\"row container\">\r\n    <duelit-keen-api [keenApiInput]=\"createdChallengeStats$\" class=\"col-12\"></duelit-keen-api>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <duelit-keen-api [keenApiInput]=\"playedChallengeStats$\" class=\"col-12\"></duelit-keen-api>\r\n  </div>\r\n\r\n  <h4>Redeem Stat</h4>\r\n  <div class=\"row container\">\r\n    <duelit-metric [metric]=\"getMetric('Redeems', 'Count - Redeems', stats.redeemed.count)\" class=\"col-4\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Total', 'Total - Redeems', stats.redeemed.coins, stats.redeemed.dollar)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Average', 'Average - Redeems', stats.redeemed.average.coins, stats.redeemed.average.dollar, true)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n  </div>\r\n\r\n  <h4>Purchase Stat</h4>\r\n  <div class=\"row container\">\r\n    <duelit-metric [metric]=\"getMetric('Purchases', 'Count - Purchases', stats.topup.count)\" class=\"col-4\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Total', 'Total - Purchases', stats.topup.coins, stats.topup.dollar)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Average', 'Average - Purchases', stats.topup.average.coins, stats.topup.average.dollar, true)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n","import { CommonModule, DecimalPipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MetricModule } from '../../components/metric/metric.module';\r\nimport { UserStatRoutingModule } from './user-stat-routing.module';\r\nimport { KeenApiModule } from '../../components/keen-api/keen-api.module';\r\nimport { UserStatComponent } from './user-stat.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserStatComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserStatRoutingModule,\r\n    MetricModule,\r\n    KeenApiModule\r\n  ],\r\n  providers: [\r\n    DecimalPipe\r\n  ]\r\n})\r\nexport class UserStatModule { }\r\n"]}