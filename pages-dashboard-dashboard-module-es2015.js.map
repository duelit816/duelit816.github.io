{"version":3,"sources":["./src/app/features/admin/components/keen/keen.component.ts","./src/app/features/admin/components/keen/keen.component.html","./src/app/features/admin/components/keen/keen.module.ts","./src/app/features/admin/directives/keen-data/keen-data.directive.ts","./src/app/features/admin/directives/keen-data/keen-data.module.ts","./src/app/features/admin/pages/dashboard/app-data/app-data.component.ts","./src/app/features/admin/pages/dashboard/app-data/app-data.component.html","./src/app/features/admin/pages/dashboard/dashboard-routing.module.ts","./src/app/features/admin/pages/dashboard/dashboard.component.ts","./src/app/features/admin/pages/dashboard/dashboard.component.html","./src/app/features/admin/pages/dashboard/dashboard.module.ts","./src/app/features/admin/pages/dashboard/finance/finance.component.ts","./src/app/features/admin/pages/dashboard/finance/finance.component.html","./src/app/features/admin/pages/dashboard/realtime/realtime.component.ts","./src/app/features/admin/pages/dashboard/realtime/realtime.component.html","./src/app/shared/components/table/table.component.ts","./src/app/shared/components/table/table.component.html","./src/app/shared/components/table/table.module.ts","./src/app/shared/directives/ngbd-sortable-header/ngbd-sortable-header.directive.ts","./src/app/shared/directives/ngbd-sortable-header/ngbd-sortable-header.module.ts"],"names":[],"mappings":"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","file":"pages-dashboard-dashboard-module-es2015.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-keen',\r\n  templateUrl: './keen.component.html',\r\n  styleUrls: ['./keen.component.scss']\r\n})\r\nexport class KeenComponent implements OnInit  {\r\n  loading = true;\r\n  viewInit = false;\r\n  @Input() title: string;\r\n  @Input() keenName: string;\r\n  @Input() viewType: string;\r\n  @Input() queryType: string;\r\n  @Input() query: any;\r\n  @Input() subTitle?: string;\r\n  @Input() isCombined?: boolean;\r\n  @Input() apiResult?: any;\r\n\r\n  constructor(\r\n    // private el: ElementRef,\r\n    // private renderer: Renderer2,\r\n    // private keen: KeenIoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<h6>{{title}}</h6>\r\n<!-- <ng-container *ngIf=\"keenName\"> -->\r\n<div duelitKeenData\r\n  [duelitkeenname]=\"keenName\"\r\n  [viewType]=\"viewType\"\r\n  [queryType]=\"queryType\"\r\n  [query]=\"query\"\r\n  [title]=\"subTitle\"\r\n  class=\"duelit-keen-data\"\r\n  [ngClass]=\"keenName\"\r\n  [isCombined]=\"isCombined\"\r\n  [apiResult]=\"apiResult\"\r\n  [class.metric]=\"viewType === 'metric'\"></div>\r\n<!-- </ng-container> -->\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { KeenDataModule } from '../../directives/keen-data/keen-data.module';\r\nimport { KeenComponent } from './keen.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [KeenComponent],\r\n  imports: [\r\n    CommonModule,\r\n    KeenDataModule\r\n  ],\r\n  exports: [\r\n    KeenComponent\r\n  ]\r\n})\r\nexport class KeenModule { }\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnInit, Renderer2 } from '@angular/core';\r\nimport { Dataviz } from 'keen-dataviz';\r\n\r\nimport { KeenIoService } from '../../services/keen-io.service';\r\n\r\n@Directive({\r\n  selector: '[duelitKeenData]'\r\n})\r\nexport class KeenDataDirective implements OnChanges, OnInit, AfterViewInit {\r\n  viewInit = false;\r\n  loading = true;\r\n  @Input() duelitkeenname: string;\r\n  @Input() viewType: string;\r\n  @Input() queryType: string;\r\n  @Input() query: any;\r\n  @Input() title?: string;\r\n  @Input() isCombined?: any;\r\n  @Input() apiResult?: any;\r\n  chart;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private keen: KeenIoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.renderer.addClass(this.el.nativeElement, 'duelit-keen-data');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.query && this.viewInit) {\r\n      this.el.nativeElement.innerHTML = `<span class=\"duelit-keen-data loading\"></span>`;\r\n      this.doQuery();\r\n    }\r\n  }\r\n\r\n  doQuery() {\r\n    this.el.nativeElement.innerHTML = `<span class=\"duelit-keen-data loading\"></span>`;\r\n\r\n    this.chart = new Dataviz({\r\n      container: `.${this.duelitkeenname}`,\r\n      title: this.viewType === 'metric' ? this.title : false,\r\n      type: this.viewType,\r\n      legend: {\r\n        pagination: {\r\n          limit: 10\r\n        }\r\n      },\r\n      labelMapping: {\r\n        \"Regular\": \"Challenge\",\r\n        \"Open\": \"Tournament\",\r\n        \"Practice game\": \"Practice\",\r\n      }\r\n    });\r\n\r\n    if (!(this.query.eventCollection instanceof Array)) {\r\n      this.loading = true;\r\n      this.keen.query(this.queryType, this.query)\r\n        .then((keenResult) => {\r\n          setTimeout(() => {\r\n            if (this.isCombined && this.apiResult) {\r\n              keenResult[\"result\"] = [(keenResult as any).result.find((x) => x[\"Game.type\"] === \"Practice game\")];\r\n              this.apiResult.subscribe(apiResult => {\r\n                apiResult.forEach((x) => {\r\n                  keenResult[\"result\"].push({\"Game.type\": x.type, result: x.count})\r\n                });\r\n                this.chart.render(keenResult);\r\n              });\r\n            } else {\r\n              this.chart.render(keenResult);\r\n            }\r\n          });\r\n          this.loading = false;\r\n        })\r\n        .catch((error) => {\r\n          setTimeout(() => {\r\n            this.chart.message(error.message);\r\n          });\r\n          this.loading = false;\r\n        });\r\n    } else {\r\n      const queries = [];\r\n      this.query.eventCollection.forEach((eventCollection) => {\r\n        queries.push(this.keen.query(this.queryType, {\r\n          eventCollection,\r\n          timeframe: this.query.timeframe,\r\n          timezone: 'UTC',\r\n        }));\r\n      });\r\n      this.keen.run(queries).then((response) => {\r\n        const chartData = [];\r\n        chartData.push({\r\n          type: \"Accepted\",\r\n          result: response[1].result\r\n        }, {\r\n          type: \"Rejected\",\r\n          result: response[0].result - response[1].result\r\n        })\r\n        this.chart.render({\r\n          query: {\r\n            timeframe: this.query.timeframe,\r\n            timezone: 'UTC',\r\n          },\r\n          result: chartData\r\n        });\r\n      })\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.viewInit = true;\r\n    this.doQuery();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { KeenDataDirective } from './keen-data.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [KeenDataDirective],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [KeenDataDirective]\r\n})\r\nexport class KeenDataModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { DatePickerRangeModel } from '@shared/components/date-picker-range/date-picker-range.model';\r\nimport { UsersApi, AdminFunctionsApi } from '@shared/constants/api';\r\nimport * as moment from 'moment';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, takeUntil, mergeMap } from 'rxjs/operators';\r\n\r\nimport { KeenInput } from '../../../components/keen/keen-input.model';\r\nimport { MetricInputModel } from '../../../components/metric/metric.model';\r\nimport { DashboardDateService } from '../../../services/dashboard-date.service';\r\nimport { UserStatus, TransactionType, DATE_FORMAT, ChartName } from '@core/constants';\r\nimport { ngbDateToMoment } from '@shared/functions/date.util';\r\nimport { TournamentsApi } from '../../../../../shared/constants/api/index';\r\n\r\nconst START_DATE = moment().subtract(6, 'days').format(DATE_FORMAT);\r\nconst END_DATE = moment().format(DATE_FORMAT);\r\n\r\n@Component({\r\n  selector: 'duelit-app-data',\r\n  templateUrl: './app-data.component.html',\r\n  styleUrls: ['./app-data.component.scss']\r\n})\r\nexport class AppDataComponent implements OnInit, OnDestroy {\r\n  gamesQueries: KeenInput[] = [{\r\n    title: 'Daily Games',\r\n    keenname: 'daily-games',\r\n    viewType: 'line',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Game played',\r\n      groupBy: 'Game.name',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n      interval: 'daily',\r\n      filters: [{\r\n        property_name: 'Game.name',\r\n        operator: 'ne',\r\n        property_value: null,\r\n      }]\r\n    }\r\n  }, {\r\n    title: 'Games Per Type',\r\n    keenname: 'games-per-type',\r\n    viewType: 'pie',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Game played',\r\n      groupBy: 'Game.type',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    },\r\n    isCombined: true\r\n  }];\r\n\r\n  engagement1Queries: KeenInput[] = [{\r\n    title: 'Total Challenges',\r\n    keenname: 'challenges-total',\r\n    viewType: 'metric',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Challenge created',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }, {\r\n    title: 'Accepted Challenges',\r\n    keenname: 'challenges-accepted',\r\n    viewType: 'metric',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Challenge accepted',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }, {\r\n    title: 'Challenge Ratio',\r\n    keenname: 'challenge-ratio',\r\n    viewType: 'pie',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: ['Challenge created', 'Challenge accepted'],\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }];\r\n\r\n  engagement3Queries: KeenInput[] = [{\r\n    title: 'Total App Launched',\r\n    keenname: 'app-launced-total',\r\n    viewType: 'metric',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'App launched',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }];\r\n\r\n  engagement4Queries: KeenInput[] = [{\r\n    title: 'Games Per OS',\r\n    keenname: 'games-per-os',\r\n    viewType: 'pie',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Game played',\r\n      groupBy: 'Device.OS',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n      filters: [{\r\n        property_name: 'Device.OS',\r\n        operator: 'exists',\r\n        property_value: true,\r\n      }]\r\n    }\r\n  }];\r\n\r\n  revenueStats$: Observable<any>;\r\n  signupTypeStats$: Observable<any>;\r\n  signupCountStats$: Observable<any>;\r\n  signupRatioStats$: any = {\r\n    title: \"Signup Ratio\",\r\n    classSelector: \"signup-ratio\",\r\n    viewType: \"pie\"\r\n  };\r\n  activeUsersStats$: Observable<any>;\r\n  challengeStats$: Observable<any>;\r\n  txnOnInsufficientFunds$: Observable<any>;\r\n  createdChallengePerHrStats$: Observable<any>;\r\n  completedChallengePerHrStats$: Observable<any>;\r\n  completedTournamentPerHrStats$: Observable<any>;\r\n  tournamentCountPerType$: Observable<any>;\r\n  challengeRatioStats$: any = {\r\n    title: \"Challenge Ratio\",\r\n    classSelector: \"challenge-ratio\",\r\n    viewType: \"pie\"\r\n  };\r\n  txnOnInsufficientFundsRatio$: any = {\r\n    title: \"Transaction on Insufficient Funds\",\r\n    classSelector: \"txn-on-insufficient-funds-ratio\",\r\n    viewType: \"pie\"\r\n  };\r\n  userStats$: Observable<MetricInputModel[]>;\r\n  rangeDate: FormControl;\r\n  date$: BehaviorSubject<DatePickerRangeModel>;\r\n  ngUnsubscribe = new Subject();\r\n  readonly FAILED_TO_RETRIEVE = '-';\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private dashboardDate: DashboardDateService,\r\n    private router: Router,\r\n    private numberPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rangeDate = new FormControl(this.dashboardDate.range);\r\n    this.rangeDate.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe((value) => {\r\n      this.dashboardDate.range = value;\r\n    });\r\n    this.date$ = new BehaviorSubject<DatePickerRangeModel>(this.dashboardDate.range);\r\n\r\n    this.date$.pipe(takeUntil(this.ngUnsubscribe)).subscribe(({ from, to }) => {\r\n      const startDate = moment().year(from.year).month(from.month - 1).date(from.day).format(DATE_FORMAT);\r\n      const endDate = moment().year(to.year).month(to.month - 1).date(to.day).format(DATE_FORMAT);\r\n\r\n      this.getRevenueStats(startDate, endDate);\r\n      this.getSignupTypeStats(startDate, endDate);\r\n      this.getSignupCountStats(startDate, endDate);\r\n      this.getSignupRatioStats();\r\n      this.getActiveUsersStats(startDate, endDate);\r\n      this.getChallengeStats(startDate, endDate);\r\n      this.getTxnOnInsufficientFunds(startDate, endDate);\r\n      this.getCreatedChallengePerHrStats(startDate, endDate);\r\n      this.getCompletedChallengePerHrStats(startDate, endDate);\r\n      this.getCompletedTournamentPerHrStats(startDate, endDate);\r\n      this.getTournamentCountPerType(startDate, endDate);\r\n      this.getChallengeRatioStats();\r\n      this.getTxnOnInsufficientFundsRatio();\r\n      this.getUserStats(startDate, endDate);\r\n      this.updateQueries(this.engagement1Queries, startDate, endDate);\r\n      this.updateQueries(this.engagement3Queries, startDate, endDate);\r\n      this.updateQueries(this.engagement4Queries, startDate, endDate);\r\n      this.updateQueries(this.gamesQueries, startDate, endDate);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n    this.date$.complete();\r\n  }\r\n\r\n  getRevenueStats(startDate, endDate) {\r\n    this.revenueStats$ = this.api.get(AdminFunctionsApi.RevenueStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: [{\r\n        game: string;\r\n        duelit_revenue: number;\r\n        player_revenue: number;\r\n      }]) => {\r\n        const revenueData = [];\r\n        let data = [];\r\n        if (result.length) {\r\n          const duelitRevenue = result.reduce((r, i) => {\r\n            r += i.duelit_revenue;\r\n            return r;\r\n          }, 0);\r\n          const playerRevenue = result.reduce((r, i) => {\r\n            r += i.player_revenue;\r\n            return r;\r\n          }, 0)\r\n          data = [\r\n            {\r\n              type: \"Duelit\",\r\n              result: duelitRevenue\r\n            }, {\r\n              type: \"Player\",\r\n              result: playerRevenue\r\n            }\r\n          ]\r\n        }\r\n        const revenueByUserType = {\r\n          title: \"Revenue Generated\",\r\n          classSelector: \"revenue1\",\r\n          viewType: \"bar\",\r\n          data\r\n        };\r\n        revenueData.push(revenueByUserType);\r\n\r\n        const revenueByUserTypePercentage = {\r\n          title: \"Revenue Generated (Percentage)\",\r\n          classSelector: \"revenue2\",\r\n          viewType: \"pie\",\r\n          data\r\n        };\r\n        revenueData.push(revenueByUserTypePercentage);\r\n\r\n        const revenueByGame = {\r\n          title: \"Revenue by Game (Duelit)\",\r\n          classSelector: \"revenue3\",\r\n          viewType: \"pie\",\r\n          data: result.map((i) => {\r\n            return { type: i.game, result: i.duelit_revenue };\r\n          })\r\n        };\r\n        revenueData.push(revenueByGame);\r\n        return revenueData;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSignupTypeStats(startDate, endDate) {\r\n    this.signupTypeStats$ = this.api.get(UsersApi.SignupType, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        facebook: string;\r\n        apple: string;\r\n        email: string;\r\n      }) => {\r\n        const data = [];\r\n        if (!(result.facebook === \"0\" && result.apple === \"0\" && result.email === \"0\")) {\r\n          Object.keys(result).forEach((key) => {\r\n            data.push({ type: key.charAt(0).toUpperCase() + key.slice(1), result: result[key] });\r\n          });\r\n        }\r\n        const signupType = {\r\n          title: \"Signup Type\",\r\n          classSelector: \"signup-type\",\r\n          viewType: \"pie\",\r\n          data\r\n        };\r\n        return [signupType];\r\n      })\r\n    );\r\n  }\r\n\r\n  getSignupCountStats(startDate, endDate) {\r\n    this.signupCountStats$ = this.api.get(UsersApi.SignupCount, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        signups: string;\r\n        activated: string;\r\n      }) => {\r\n        return [{\r\n          name: ChartName.SignupCount,\r\n          title: \"Total Sign Ups\",\r\n          subTitle: 'Count - Sign up',\r\n          data: this.numberPipe.transform(result.signups)\r\n        }, {\r\n          name: ChartName.ActivatedSignupCount,\r\n          title: \"Total Activated Sign Ups\",\r\n          subTitle: 'Count - Sign up activated',\r\n          data: this.numberPipe.transform(result.activated)\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getSignupRatioStats() {\r\n    this.signupCountStats$.subscribe(signupStats => {\r\n      let pendingCount = 0;\r\n      if (signupStats[0].data && signupStats[1].data) {\r\n        pendingCount = signupStats[0].data.replace(/,/g, \"\") - signupStats[1].data.replace(/,/g, \"\");\r\n      }\r\n      const data = [\r\n        {\r\n          type: \"Activated\",\r\n          result: signupStats[1].data ? signupStats[1].data.replace(/,/g, \"\") : 0\r\n        }, {\r\n          type: \"Pending\",\r\n          result: pendingCount\r\n        }\r\n      ]\r\n      this.signupRatioStats$ = {\r\n        title: \"Signup Ratio\",\r\n        classSelector: \"signup-ratio\",\r\n        viewType: \"pie\",\r\n        data\r\n      };\r\n    });\r\n  }\r\n\r\n  getActiveUsersStats(startDate, endDate) {\r\n    this.activeUsersStats$ = this.api.get(UsersApi.ActiveUsersStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        active_users_count: string;\r\n      }) => {\r\n        return [{\r\n          title: \"Active Users\",\r\n          subTitle: 'Count - Active Users',\r\n          data: result.active_users_count\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getChallengeStats(startDate, endDate) {\r\n    this.challengeStats$ = this.api.get(TournamentsApi.ChallengeStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        cancelled: string;\r\n        completed: string;\r\n      }) => {\r\n        return [{\r\n          title: \"Cancelled\",\r\n          subTitle: 'Cancelled Challenges',\r\n          data: result.cancelled ? this.numberPipe.transform(result.cancelled) : 0\r\n        }, {\r\n          title: \"Completed\",\r\n          subTitle: 'Completed Challenges',\r\n          data: result.completed ? this.numberPipe.transform(result.completed) : 0\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getTxnOnInsufficientFunds(startDate, endDate) {\r\n    const convertedUrl = this.api.buildPath(UsersApi.UsersByConverted, ['converted'])\r\n    this.txnOnInsufficientFunds$ = this.api.get(convertedUrl, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      mergeMap((convertedResult: {\r\n        totalCount: number;\r\n      }) => {\r\n        const churnedUrl = this.api.buildPath(UsersApi.UsersByConverted, ['churned'])\r\n        return this.api.get(churnedUrl, {\r\n          query: {\r\n            start_date: moment(startDate).format(DATE_FORMAT),\r\n            end_date: moment(endDate).format(DATE_FORMAT)\r\n          }\r\n        }).pipe(\r\n          catchError(err => {\r\n            return of([]);\r\n          }),\r\n          map((churnedResult: {\r\n            totalCount: number;\r\n          }) => {\r\n            return [{\r\n              title: \"Users Converted when Coins Ran Out\",\r\n              subTitle: 'Count',\r\n              type: \"converted\",\r\n              data: convertedResult.totalCount ? this.numberPipe.transform(convertedResult.totalCount) : 0\r\n            }, {\r\n              title: \"Users Churned when Coins Ran Out\",\r\n              subTitle: 'Count',\r\n              type: \"churned\",\r\n              data: churnedResult.totalCount ? this.numberPipe.transform(churnedResult.totalCount) : 0\r\n            }];\r\n          })\r\n        )\r\n      })\r\n    );\r\n  }\r\n\r\n  getCreatedChallengePerHrStats(startDate, endDate) {\r\n    this.createdChallengePerHrStats$ = this.api.get(TournamentsApi.TournamentPerHrStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result) => {\r\n        const challengePerHr = [];\r\n        if (result && Object.keys(result) && Object.keys(result).length) {\r\n          for(let i=0; i<24; i++) {\r\n            challengePerHr.push({type: i, count: result[i] || 0});\r\n          }\r\n        }\r\n        return [{\r\n          title: \"Created Challenge\",\r\n          classSelector: \"total-challenge-sent\",\r\n          viewType: \"line\",\r\n          xAxisLabel: \"Hour of day (in UTC)\",\r\n          yAxisLabel: \"Count\",\r\n          data: challengePerHr\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getCompletedChallengePerHrStats(startDate, endDate) {\r\n    this.completedChallengePerHrStats$ = this.api.get(TournamentsApi.TournamentPerHrStats, {\r\n      query: {\r\n        status: \"Ended\",\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result) => {\r\n        const challengePerHr = [];\r\n        if (result && Object.keys(result) && Object.keys(result).length) {\r\n          for(let i=0; i<24; i++) {\r\n            challengePerHr.push({type: i, count: result[i] || 0});\r\n          }\r\n        }\r\n        return [{\r\n          title: \"Completed Challenge\",\r\n          classSelector: \"total-challenge-Completed\",\r\n          viewType: \"line\",\r\n          xAxisLabel: \"Hour of day (in UTC)\",\r\n          yAxisLabel: \"Count\",\r\n          data: challengePerHr\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getCompletedTournamentPerHrStats(startDate, endDate) {\r\n    this.completedTournamentPerHrStats$ = this.api.get(TournamentsApi.TournamentPerHrStats, {\r\n      query: {\r\n        type: \"open\",\r\n        status: \"Ended\",\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result) => {\r\n        const tournamentPerHr = [];\r\n        if (result && Object.keys(result) && Object.keys(result).length) {\r\n          for(let i=0; i<24; i++) {\r\n            tournamentPerHr.push({type: i, count: result[i] || 0});\r\n          }\r\n        }\r\n        return [{\r\n          title: \"Completed Tournament\",\r\n          classSelector: \"total-tournament-completed\",\r\n          viewType: \"line\",\r\n          xAxisLabel: \"Hour of day (in UTC)\",\r\n          yAxisLabel: \"Count\",\r\n          data: tournamentPerHr\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getTournamentCountPerType(startDate, endDate) {\r\n    this.tournamentCountPerType$ = this.api.get(TournamentsApi.TournamentCountPerType, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  getChallengeRatioStats() {\r\n    this.challengeStats$.subscribe(challengeStats => {\r\n      const data = [\r\n        {\r\n          type: \"Cancelled\",\r\n          result: challengeStats[0].data ? challengeStats[0].data.replace(/,/g, \"\") : 0\r\n        }, {\r\n          type: \"Completed\",\r\n          result: challengeStats[1].data ? challengeStats[1].data.replace(/,/g, \"\") : 0\r\n        }\r\n      ]\r\n      this.challengeRatioStats$ = {\r\n        title: \"Challenge Ratio\",\r\n        classSelector: \"challenge-ratio\",\r\n        viewType: \"pie\",\r\n        data\r\n      };\r\n    });\r\n  }\r\n\r\n  getTxnOnInsufficientFundsRatio() {\r\n    this.txnOnInsufficientFunds$.subscribe(txnOnInsufficientFunds => {\r\n      const data = [\r\n        {\r\n          type: \"Converted\",\r\n          result: txnOnInsufficientFunds[0].data ? txnOnInsufficientFunds[0].data.replace(/,/g, \"\") : 0\r\n        }, {\r\n          type: \"Churned\",\r\n          result: txnOnInsufficientFunds[1].data ? txnOnInsufficientFunds[1].data.replace(/,/g, \"\") : 0\r\n        }\r\n      ]\r\n      this.txnOnInsufficientFundsRatio$ = {\r\n        title: \"Total User that Ran Out of Coins\",\r\n        classSelector: \"transaction-ratio\",\r\n        viewType: \"pie\",\r\n        data\r\n      };\r\n    });\r\n  }\r\n\r\n  getUserStats(startDate, endDate) {\r\n    const bannedUsersCountApi = this.api.buildPath(UsersApi.UsersCountByStatus, ['banned']);\r\n    this.userStats$ = this.api.get(bannedUsersCountApi, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      },\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of(err.error.text || this.FAILED_TO_RETRIEVE);\r\n      }),\r\n      map((result) => {\r\n        return [{\r\n          title: 'Total Banned Users',\r\n          subTitle: 'Count - Banned Users',\r\n          data: result\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  updateQueries(queries, startDate, endDate) {\r\n    let timeframe;\r\n    if (startDate === endDate && startDate === moment().format(DATE_FORMAT)) {\r\n      timeframe = \"this_1_days\"\r\n    } else {\r\n      timeframe = {\r\n      start: startDate,\r\n      end: endDate\r\n    };\r\n    }\r\n    queries.forEach(q => {\r\n      if (typeof q.query.timeframe !== 'string') {\r\n        q.query = {\r\n          ...q.query,\r\n          timeframe\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDate() {\r\n    this.date$.next({ ...this.dashboardDate.range });\r\n  }\r\n\r\n  isDateRangeValid() {\r\n    const rangeDate = this.rangeDate.value;\r\n\r\n    return rangeDate.from && rangeDate.to;\r\n  }\r\n\r\n  openUsersSignup(details) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        created_start_date: startDate,\r\n        created_end_date: endDate,\r\n        not_status: details.name === ChartName.ActivatedSignupCount ? \"pending\" : \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  openUsersByBanned() {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        status: UserStatus.Banned,\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      }\r\n    });\r\n  }\r\n\r\n  openUsersByTransaction(details?) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        transaction: TransactionType.RedeemCoinsRequest,\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      }\r\n    });\r\n  }\r\n\r\n  openActiveUsers() {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        last_active_start_date: startDate,\r\n        last_active_end_date: endDate,\r\n      }\r\n    });\r\n  }\r\n\r\n  openConvertedUsers(convertedType) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        convertedType,\r\n        start_date: startDate,\r\n        end_date: endDate,\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"date-filter\">\r\n  <duelit-date-picker-range [formControl]=\"rangeDate\"></duelit-date-picker-range>\r\n  <button class=\"btn custom primary\" (click)=\"updateDate()\" [disabled]=\"!isDateRangeValid()\">Filter</button>\r\n</div>\r\n\r\n<div>\r\n  <h4>Revenue</h4>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"revenueStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <h4>Games</h4>\r\n  <div class=\"row container\">\r\n    <duelit-keen *ngFor=\"let item of gamesQueries\"\r\n      [title]=\"item.title\" [keenName]=\"item.keenname\"\r\n      [viewType]=\"item.viewType\" [queryType]=\"item.queryType\" [query]=\"item.query\"\r\n      [isCombined]=\"item.isCombined\" [apiResult]=\"tournamentCountPerType$\"\r\n      class=\"col-6\"></duelit-keen>\r\n  </div>\r\n\r\n  <h4>Engagement</h4>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"createdChallengePerHrStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-12\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"completedChallengePerHrStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-12\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"completedTournamentPerHrStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-12\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"challengeStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"challengeStats$ | async; else loading; let items\">\r\n      <duelit-keen-api [keenApiInput]=\"challengeRatioStats$\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"signupCountStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openUsersSignup(item)\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"signupCountStats$ | async; else loading;\">\r\n      <duelit-keen-api [keenApiInput]=\"signupRatioStats$\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <duelit-keen *ngFor=\"let item of engagement3Queries\"\r\n      [title]=\"item.title\" [keenName]=\"item.keenname\"\r\n      [viewType]=\"item.viewType\" [queryType]=\"item.queryType\" [query]=\"item.query\"\r\n      class=\"col metric\"></duelit-keen>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <duelit-keen *ngFor=\"let item of engagement4Queries\"\r\n      [title]=\"item.title\" [keenName]=\"item.keenname\"\r\n      [viewType]=\"item.viewType\" [queryType]=\"item.queryType\" [query]=\"item.query\"\r\n      class=\"col-6 metric\"></duelit-keen>\r\n  </div>\r\n\r\n  <h4>User Statistics</h4>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"signupTypeStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"activeUsersStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openActiveUsers()\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"userStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openUsersByBanned()\"></duelit-metric>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"txnOnInsufficientFunds$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openConvertedUsers(item.type)\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"txnOnInsufficientFunds$ | async; else loading; let items\">\r\n      <duelit-keen-api [keenApiInput]=\"txnOnInsufficientFundsRatio$\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DashboardComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n  activeTab = 'Application Data';\r\n\r\n  constructor() { }\r\n}\r\n","<ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"activeTab\" class=\"nav-tabs\">\r\n  <li ngbNavItem=\"Application Data\">\r\n    <a ngbNavLink>App</a>\r\n    <ng-template ngbNavContent>\r\n      <duelit-app-data></duelit-app-data>\r\n    </ng-template>\r\n  </li>\r\n  <li ngbNavItem=\"Finance\">\r\n    <a ngbNavLink>Finance</a>\r\n    <ng-template ngbNavContent>\r\n      <duelit-finance></duelit-finance>\r\n    </ng-template>\r\n  </li>\r\n  <li ngbNavItem=\"Realtime Data\">\r\n    <a ngbNavLink>Realtime</a>\r\n    <ng-template ngbNavContent>\r\n      <duelit-realtime></duelit-realtime>\r\n    </ng-template>\r\n  </li>\r\n  <li class=\"timezone\">\r\n    <span>Timezone: UTC</span>\r\n  </li>\r\n</ul>\r\n\r\n<div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n","import { CommonModule, DecimalPipe, CurrencyPipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePickerRangeModule } from '@shared/components/date-picker-range/date-picker-range.module';\r\nimport { TableModule } from '@shared/components/table/table.module';\r\n\r\nimport { KeenModule } from '../../components/keen/keen.module';\r\nimport { MetricModule } from '../../components/metric/metric.module';\r\nimport { KeenApiModule } from '../../components/keen-api/keen-api.module';\r\nimport { KeenDataModule } from '../../directives/keen-data/keen-data.module';\r\nimport { AppDataComponent } from './app-data/app-data.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { FinanceComponent } from './finance/finance.component';\r\nimport { RealtimeComponent } from './realtime/realtime.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent, AppDataComponent, FinanceComponent, RealtimeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    NgbNavModule,\r\n    // NgbDatepickerModule\r\n    DatePickerRangeModule,\r\n    ReactiveFormsModule,\r\n    KeenDataModule,\r\n    KeenModule,\r\n    MetricModule,\r\n    KeenApiModule,\r\n    TableModule\r\n  ],\r\n  providers: [\r\n    DecimalPipe,\r\n    CurrencyPipe\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DecimalPipe, CurrencyPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { DatePickerRangeModel } from '@shared/components/date-picker-range/date-picker-range.model';\r\nimport { CreditsApi } from '@shared/constants/api';\r\nimport { TransactionType, DATE_FORMAT, FAILED_TO_RETRIEVE, ChartName } from '@core/constants';\r\nimport { ngbDateToMoment } from '@shared/functions/date.util';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, takeUntil, flatMap } from 'rxjs/operators';\r\n\r\nimport { MetricInputModel } from '../../../components/metric/metric.model';\r\nimport { DashboardDateService } from '../../../services/dashboard-date.service';\r\n\r\n@Component({\r\n  selector: 'duelit-finance',\r\n  templateUrl: './finance.component.html',\r\n  styleUrls: ['../app-data/app-data.component.scss', './finance.component.scss']\r\n})\r\nexport class FinanceComponent implements OnInit {\r\n  rangeDate: FormControl;\r\n  totalCredits$: Observable<MetricInputModel[]>;\r\n  productsSold$: Observable<MetricInputModel[]>;\r\n  redeemedStats$: Observable<MetricInputModel[]>;\r\n  totalProfitStats$: MetricInputModel;\r\n  date$: BehaviorSubject<DatePickerRangeModel>;\r\n  ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private dashboardDate: DashboardDateService,\r\n    private toast: ToastService,\r\n    private router: Router,\r\n    private numberPipe: DecimalPipe,\r\n    private currencyPipe: CurrencyPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rangeDate = new FormControl(this.dashboardDate.range);\r\n    this.rangeDate.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe((value) => {\r\n      this.dashboardDate.range = value;\r\n    });\r\n    this.date$ = new BehaviorSubject(this.dashboardDate.range);\r\n\r\n    this.totalCredits$ = this.api.get(CreditsApi.TotalCredits).pipe(\r\n      catchError(err => {\r\n        return of({\r\n          totalCoins: 0,\r\n          giftedCoins: 0\r\n        });\r\n      }),\r\n      map((result: { totalCoins: string; giftedCoins: string; }) => {\r\n        return [{\r\n          title: 'Total Coins',\r\n          subTitle: 'Count - Total In-game Coins',\r\n          data: result.totalCoins ? this.numberPipe.transform(result.totalCoins) : '0'\r\n        }, {\r\n          title: 'Total Gifted Coins',\r\n          subTitle: 'Count - Total Gifted Coins',\r\n          data: result.giftedCoins ? this.numberPipe.transform(result.giftedCoins) : '0'\r\n        }];\r\n      })\r\n    );\r\n\r\n    this.date$.subscribe(({ from, to }) => {\r\n      const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n      const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n      this.getRedeemedStats(startDate, endDate);\r\n      this.getTotalProfitStats();\r\n      this.productsSold$ = this.api.get(CreditsApi.PurchasedCoins, { query: { start_date: startDate, end_date: endDate } })\r\n        .pipe(\r\n          catchError(err => {\r\n            this.toast.error(err.error || err.statusText || err.message);\r\n\r\n            return of([{\r\n              amount: '4.99',\r\n              count: 0\r\n            }, {\r\n              amount: '9.99',\r\n              count: 0\r\n            }, {\r\n              amount: '25.99',\r\n              count: 0\r\n            }, {\r\n              amount: '49.99',\r\n              count: 0\r\n            }]);\r\n          }),\r\n          map((result: { amount: string; count: number }[]) => {\r\n            return result.map(res => {\r\n              return {\r\n                name: ChartName.PurchasedCount,\r\n                title: null,\r\n                subTitle: `Count - Total Purchased $${res.amount}`,\r\n                data: res.count,\r\n                amount: Number(res.amount)\r\n              };\r\n            });\r\n          })\r\n        );\r\n    });\r\n  }\r\n\r\n  updateDate() {\r\n    this.date$.next({ ...this.dashboardDate.range });\r\n  }\r\n\r\n  isDateRangeValid() {\r\n    const rangeDate = this.rangeDate.value;\r\n\r\n    return rangeDate.from && rangeDate.to;\r\n  }\r\n\r\n  getRedeemedStats(startDate, endDate) {\r\n    this.redeemedStats$ = this.api.get(CreditsApi.RedeemedCoins, {\r\n      query: {\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of({\r\n          totalAmount: FAILED_TO_RETRIEVE,\r\n          playerCount: FAILED_TO_RETRIEVE\r\n        });\r\n      }),\r\n      map((result: {\r\n        totalAmount: string;\r\n        playerCount: string;\r\n      }) => {\r\n        const dollarFormat = '0.0';\r\n        let coins;\r\n        let dollar;\r\n        try {\r\n          coins = parseInt(result.totalAmount);\r\n          dollar = Math.floor(coins * 0.00825 * 100) / 100;\r\n        } catch(e) {\r\n          console.log(\"Invalid coin amount\", e);\r\n        }\r\n        let data = \"$0<br>0 coins\";\r\n        if (dollar && coins) {\r\n          data = `${this.currencyPipe.transform(dollar)}<br>${this.numberPipe.transform(coins)} coins`;\r\n        }\r\n        return [{\r\n          name: ChartName.RedeemCount,\r\n          title: 'Total Redeems',\r\n          subTitle: 'Redeem Stats',\r\n          data: data,\r\n          class: 'coin-dollar-metric',\r\n          amount: dollar\r\n        }, {\r\n          name: ChartName.RedeemCount,\r\n          title: 'Redeemed Players Count',\r\n          subTitle: 'Count - Players Count',\r\n          data: result.playerCount\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getTotalProfitStats() {\r\n    let redeemDollar;\r\n    this.redeemedStats$.pipe(\r\n      flatMap(redeemStats => {\r\n        redeemDollar = redeemStats[0].amount;\r\n        return this.productsSold$\r\n      })\r\n    ).subscribe(productSold => {\r\n      const totalDollarPurchase = productSold.reduce((accumulator, p) => {\r\n        accumulator += p.amount * Number(p.data);\r\n        return accumulator;\r\n      }, 0);\r\n      const totalProfit = totalDollarPurchase - redeemDollar;\r\n      let data = \"$0<br>0 coins\";\r\n      if (totalProfit) {\r\n        data = `${this.currencyPipe.transform(totalProfit)}<br>${this.numberPipe.transform(Math.floor(totalProfit / 0.00825))} coins`;\r\n      }\r\n      this.totalProfitStats$ = {\r\n        title: 'Total Profit',\r\n        subTitle: 'Total Profit Stats',\r\n        data,\r\n        class: 'coin-dollar-metric'\r\n      };\r\n    });\r\n  }\r\n\r\n  openUsersByTransaction(details?) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n    const queryParams = {\r\n      transaction: TransactionType.RedeemCoinsRequest,\r\n      start_date: startDate,\r\n      end_date: endDate\r\n    };\r\n    if (details.name === ChartName.PurchasedCount) {\r\n      queryParams[\"transaction\"] = TransactionType.Transaction;\r\n      queryParams[\"amount\"] = details.amount;\r\n    }\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams,\r\n    });\r\n  }\r\n}\r\n","<h4>Coins</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"totalCredits$ | async; else loading; let items\">\r\n    <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-6\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"divider\"></div>\r\n\r\n<div class=\"date-filter\">\r\n  <duelit-date-picker-range [formControl]=\"rangeDate\"></duelit-date-picker-range>\r\n  <button class=\"btn custom primary\" (click)=\"updateDate()\" [disabled]=\"!isDateRangeValid()\">Filter</button>\r\n</div>\r\n\r\n\r\n<h4>Purchased Product</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"productsSold$ | async; else loading; let items\">\r\n    <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-3 pointer\" (click)=\"openUsersByTransaction(item)\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n<h4>Redeemed Coins</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"redeemedStats$ | async; else loading; let items\">\r\n    <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-6 pointer\" (click)=\"openUsersByTransaction(item)\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n\r\n<h4>Total Profit</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"redeemedStats$ | async; else loading;\">\r\n    <duelit-metric [metric]=\"totalProfitStats$\" class=\"col-12\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { TableHeaderMapping } from '@shared/components/table/table.component';\r\nimport { TournamentsApi } from '@shared/constants/api';\r\nimport { Observable, of, Subject, timer, BehaviorSubject } from 'rxjs';\r\nimport { catchError, concatMap, map, takeUntil, repeatWhen } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'duelit-realtime',\r\n  templateUrl: './realtime.component.html',\r\n  styleUrls: ['./realtime.component.scss']\r\n})\r\nexport class RealtimeComponent implements OnInit, OnDestroy {\r\n  openTournaments$: Observable<Tournament[]>;\r\n  private ngUnsubscribe = new Subject();\r\n  private readonly POLL_INTERVAL = 10000;\r\n  timer$ = new BehaviorSubject(this.POLL_INTERVAL/1000);\r\n  private readonly _stop = new Subject<void>();\r\n  private readonly _start = new Subject<void>();\r\n\r\n  readonly tableHeadersMapping: TableHeaderMapping[] = [{\r\n    name: 'ID',\r\n    path: 'tournament_id'\r\n  }, {\r\n    name: 'Game Name',\r\n    path: 'game_name'\r\n  }, {\r\n    name: 'Joined Players',\r\n    path: 'total_players'\r\n  }, {\r\n    name: 'Real Players',\r\n    path: 'total_real_players'\r\n  }, {\r\n    name: 'Minimum Players',\r\n    path: 'minimum_players'\r\n  }, {\r\n    name: 'Status',\r\n    path: 'status'\r\n  }, {\r\n    name: 'Total Payout',\r\n    path: 'total_payout'\r\n  }, {\r\n    name: 'Level',\r\n    path: 'level'\r\n  }, {\r\n    name: 'Time Left',\r\n    path: 'time_left'\r\n  }];\r\n  constructor(\r\n    private api: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    timer(0, 1000).pipe(\r\n      map(t => this.POLL_INTERVAL/1000 - t),\r\n      takeUntil(this._stop),\r\n      repeatWhen(() => this._start)\r\n    ).subscribe((t) => {\r\n      this.timer$.next(t);\r\n    });\r\n\r\n    this.openTournaments$ = timer(0, this.POLL_INTERVAL).pipe(\r\n      concatMap(() => this.api.get(TournamentsApi.GetOccupiedOpenTournaments).pipe(\r\n        catchError(err => of({}))\r\n      )),\r\n      map((result: TournamentList = {}) => {\r\n        if (result === null) {\r\n          result = {};\r\n        }\r\n        this.restartTimer();\r\n        let tournaments = this.getTournamentListByStatus(result, 'Started');\r\n        tournaments = this.mapTimeLeft(tournaments);\r\n        return tournaments;\r\n      }),\r\n      takeUntil(this.ngUnsubscribe)\r\n    );\r\n  }\r\n\r\n  private getTournamentListByStatus(list: TournamentList, status: string): Tournament[] {\r\n    return Object.keys(list).filter(tournamentId => {\r\n      return list[tournamentId].status === status;\r\n    }).map(startedTournamentId => {\r\n      return list[startedTournamentId];\r\n    });\r\n  }\r\n\r\n  private mapTimeLeft(tournamentList: Tournament[]): Tournament[] {\r\n    const now  = moment();\r\n    const tournaments = tournamentList.filter((t) => {\r\n      const startTime = moment.utc(t.timer.startAt, \"DD/MM/YYYY h:mm:ss\");\r\n      return now.diff(startTime, \"hours\") === 0;\r\n    }).map((t) => {\r\n      const startTime = moment.utc(t.timer.startAt, \"DD/MM/YYYY h:mm:ss\");\r\n      const diff = moment.duration(now.diff(startTime));//.format(\"mm [mins] ss [seconds]\");\r\n      const minLeft = 10 - diff.minutes();\r\n      const secLeft = 60 - diff.seconds();\r\n      const totalSecs = minLeft * 60 + secLeft;\r\n      t.time_left = \"\";\r\n      if (minLeft > 0) {\r\n        t.time_left += `${minLeft} mins `;\r\n      }\r\n      t.time_left += `${secLeft} secs`;\r\n      return t;\r\n    })\r\n    return tournaments;\r\n  }\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  restartTimer(): void {\r\n    this._stop.next();\r\n    this._start.next();\r\n  }\r\n}\r\n\r\ninterface Tournament {\r\n  entry_fee: number;\r\n  game_id: number;\r\n  game_name: string;\r\n  instance_id: string;\r\n  minimum_players: number;\r\n  status: string;\r\n  timer: {\r\n    interval: number;\r\n    startAt: string;\r\n  };\r\n  total_payout: number;\r\n  total_players: number;\r\n  tournament_id: number;\r\n  time_left?: string;\r\n  winners: {\r\n    [player: string]: {\r\n      prize: number;\r\n      rank: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface TournamentList {\r\n  [tournamentId: string]: Tournament;\r\n}\r\n\r\n","<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n<h4 class=\"d-inline pr-1\">Active Tournaments</h4><span>(Refreshing in {{timer$ | async}} seconds)</span>\r\n<ng-container *ngIf=\"openTournaments$ | async; else loading; let tournaments\">\r\n  <duelit-table [data]=\"tournaments\" [headerMapping]=\"tableHeadersMapping\"></duelit-table>\r\n</ng-container>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport {\r\n  NgbdSortableHeaderDirective,\r\n  SortDirection,\r\n  SortEvent,\r\n} from '@shared/directives/ngbd-sortable-header/ngbd-sortable-header.directive';\r\n\r\nexport interface TableHeaderMapping {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface TableData {\r\n  [path: string]: any;\r\n}\r\n\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\n@Component({\r\n  selector: 'duelit-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Input() headerMapping: TableHeaderMapping[] = [];\r\n  @Input() data: TableData[] = [];\r\n  @Input() tableName?: string;\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  sortDirection: SortDirection = '';\r\n  sortColumn: TableHeaderMapping;\r\n\r\n  @ViewChildren(NgbdSortableHeaderDirective) headers: QueryList<NgbdSortableHeaderDirective>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tableName) {}\r\n  }\r\n\r\n  getData(path: string, data: TableData): string {\r\n    let temp = data;\r\n\r\n    path.split('.').forEach(p => temp = temp[p]);\r\n\r\n    return String(temp);\r\n  }\r\n\r\n  get tableData() {\r\n    return this.data.map(row => {\r\n      return this.headerMapping.map(header => {\r\n        return this.getData(header.path, row);\r\n      });\r\n    }).sort((a, b) => {\r\n      let indexOfSortedCol = this.headerMapping.indexOf(this.sortColumn);\r\n\r\n      if (indexOfSortedCol < 0) {\r\n        indexOfSortedCol = 0;\r\n      }\r\n      const result = compare(a[indexOfSortedCol], b[indexOfSortedCol]);\r\n      return this.sortDirection === 'desc' ? result * -1 : result;\r\n    });\r\n  }\r\n\r\n  onSort({column, direction}: SortEvent) {\r\n    // resetting other headers\r\n    this.headers.forEach(header => {\r\n      if (header.duelitSortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n\r\n    this.sortColumn = column;\r\n    this.sortDirection = direction;\r\n  }\r\n}\r\n","<table class=\"table table-striped\" *ngIf=\"data.length; else noData\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\" *ngFor=\"let item of headerMapping\" [duelitSortable]=\"item\" (sort)=\"onSort($event)\">{{ item.name }}</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let rowData of tableData\">\r\n    <ng-container *ngFor=\"let data of rowData; let i = index\">\r\n      <th scope=\"row\" *ngIf=\"i === 0; else td\">{{ data }}</th>\r\n      <ng-template #td>\r\n        <td>{{ data }}</td>\r\n      </ng-template>\r\n    </ng-container>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<ng-template #noData>\r\n  No data to show.\r\n</ng-template>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbdSortableHeaderModule } from '@shared/directives/ngbd-sortable-header/ngbd-sortable-header.module';\r\n\r\nimport { TableComponent } from './table.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgbdSortableHeaderModule\r\n  ],\r\n  exports: [TableComponent]\r\n})\r\nexport class TableModule { }\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nexport interface SortEvent {\r\n  column: any;\r\n  direction: SortDirection;\r\n}\r\nconst rotate: {[key: string]: SortDirection} = { asc: 'desc', desc: '', '': 'asc' };\r\n\r\n@Directive({\r\n  selector: 'th[duelitSortable]'\r\n})\r\nexport class NgbdSortableHeaderDirective {\r\n\r\n  @Input() duelitSortable: any = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Input() tableName = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  @HostBinding('class.pointer') get _t() { return true; }\r\n  @HostBinding('class.asc') get isAscending() {\r\n    return this.direction === 'asc';\r\n  }\r\n  @HostBinding('class.desc') get isDescending() {\r\n    return this.direction === 'desc';\r\n  }\r\n  @HostListener('click', ['$event']) rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.duelitSortable, direction: this.direction});\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NgbdSortableHeaderDirective } from './ngbd-sortable-header.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgbdSortableHeaderDirective],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [NgbdSortableHeaderDirective]\r\n})\r\nexport class NgbdSortableHeaderModule { }\r\n"],"sourceRoot":"webpack:///"}