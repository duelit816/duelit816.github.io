{"version":3,"sources":["./src/app/features/admin/pages/user-stat/user-stat-routing.module.ts","./src/app/features/admin/pages/user-stat/user-stat.component.ts","./src/app/features/admin/pages/user-stat/user-stat.component.html","./src/app/features/admin/pages/user-stat/user-stat.module.ts"],"names":[],"mappings":"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","file":"pages-user-stat-user-stat-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserStatComponent } from './user-stat.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UserStatComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserStatRoutingModule { }\r\n","import { DecimalPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { UsersApi } from '@shared/constants/api';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { MetricInputModel } from '../../components/metric/metric.model';\r\nimport { UserStatsModel } from './models/user-stats.model';\r\n\r\n@Component({\r\n  selector: 'duelit-user-stat',\r\n  templateUrl: './user-stat.component.html',\r\n  styleUrls: ['./user-stat.component.scss']\r\n})\r\nexport class UserStatComponent implements OnInit {\r\n  stats$: Observable<UserStatsModel>;\r\n  createdChallengeStats$: any = {\r\n    title: \"Challenge Sent\",\r\n    classSelector: \"challenge-sent\",\r\n    viewType: \"line\",\r\n    xAxisLabel: \"Hour of day (in UTC)\",\r\n    yAxisLabel: \"Count\",\r\n  };\r\n  playedChallengeStats$: any = {\r\n    title: \"Challenge Played\",\r\n    classSelector: \"challenge-played\",\r\n    viewType: \"line\",\r\n    xAxisLabel: \"Hour of day (in UTC)\",\r\n    yAxisLabel: \"Count\",\r\n  };\r\n  constructor(\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private toast: ToastService,\r\n    private numberPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const userId = this.route.snapshot.params.userId;\r\n\r\n    const userStatsPath = this.api.buildPath(UsersApi.UserStats, [userId]);\r\n    this.stats$ = this.api.get(userStatsPath).pipe(\r\n      catchError(err => {\r\n        this.toast.error(err.error || err.statusText || err.message);\r\n\r\n        return of({\r\n          games: {\r\n            completed: 0,\r\n            wins: 0,\r\n            lost: 0,\r\n            win_percentage: 0\r\n          },\r\n          redeemed: {\r\n            count: 0,\r\n            coins: 0,\r\n            dollar: 0,\r\n            average: {\r\n              coins: 0,\r\n              dollar: 0\r\n            }\r\n          }\r\n        });\r\n      })\r\n    ) as Observable<UserStatsModel>;\r\n    this.getChallengeStats();\r\n  }\r\n\r\n  getMetric(title, subTitle, data): MetricInputModel {\r\n    return {\r\n      title,\r\n      subTitle,\r\n      data\r\n    };\r\n  }\r\n\r\n  getCoinDollarMetric(title, subTitle, coins, dollar, isAverage = false): MetricInputModel {\r\n    const dollarFormat = isAverage ? '.3-3' : '0.0';\r\n    const data = `$${this.numberPipe.transform(dollar, dollarFormat)}<br>${this.numberPipe.transform(coins, '.2-2')} coins`;\r\n    return this.getMetric(title, subTitle, data);\r\n  }\r\n\r\n\r\n  getChallengeStats() {\r\n    this.stats$.subscribe(userStats => {\r\n      const createdChallengeVsHours = userStats[\"createdChallengeVsHours\"];\r\n      const createdData = [];\r\n      if (createdChallengeVsHours) {\r\n        for(let i=0; i<24; i++) {\r\n          createdData.push({type: i, count: createdChallengeVsHours[i] || 0});\r\n        }\r\n      }\r\n      this.createdChallengeStats$.data = createdData;\r\n\r\n      const playedChallengeVsHours = userStats[\"playedChallengeVsHours\"];\r\n      const playedData = [];\r\n      if (playedChallengeVsHours) {\r\n        for(let i=0; i<24; i++) {\r\n          playedData.push({type: i, count: playedChallengeVsHours[i] || 0});\r\n        }\r\n      }\r\n      this.playedChallengeStats$.data = playedData;\r\n    });\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"stats$ | async; else loading; let stats\">\r\n  <h5 class=\"pointer\" onclick=\"window.history.back()\">&lt; back to users</h5>\r\n  <h4>Game Stat</h4>\r\n  <div class=\"row container\">\r\n    <duelit-metric [metric]=\"getMetric('Wins', 'Count - Games Won', stats.games.wins)\" class=\"col-3\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getMetric('Losts', 'Count - Games Losts', stats.games.lost)\" class=\"col-3\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getMetric('Played', 'Count - Games Played', stats.games.completed)\" class=\"col-3\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getMetric('Win Rate', 'Win Percentage', ((stats.games.win_percentage * 100) | number: '.0-2'))\" class=\"col-3\"></duelit-metric>\r\n  </div>\r\n\r\n  <h4>Challenge Stats</h4>\r\n  <div class=\"row container\">\r\n    <duelit-keen-api [keenApiInput]=\"createdChallengeStats$\" class=\"col-12\"></duelit-keen-api>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <duelit-keen-api [keenApiInput]=\"playedChallengeStats$\" class=\"col-12\"></duelit-keen-api>\r\n  </div>\r\n\r\n  <h4>Redeem Stat</h4>\r\n  <div class=\"row container\">\r\n    <duelit-metric [metric]=\"getMetric('Redeems', 'Count - Redeems', stats.redeemed.count)\" class=\"col-4\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Total', 'Total - Redeems', stats.redeemed.coins, stats.redeemed.dollar)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Average', 'Average - Redeems', stats.redeemed.average.coins, stats.redeemed.average.dollar, true)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n  </div>\r\n\r\n  <h4>Purchase Stat</h4>\r\n  <div class=\"row container\">\r\n    <duelit-metric [metric]=\"getMetric('Purchases', 'Count - Purchases', stats.topup.count)\" class=\"col-4\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Total', 'Total - Purchases', stats.topup.coins, stats.topup.dollar)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n    <duelit-metric [metric]=\"getCoinDollarMetric('Average', 'Average - Purchases', stats.topup.average.coins, stats.topup.average.dollar, true)\" class=\"col-4 coin-dollar-metric\"></duelit-metric>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n","import { CommonModule, DecimalPipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MetricModule } from '../../components/metric/metric.module';\r\nimport { UserStatRoutingModule } from './user-stat-routing.module';\r\nimport { KeenApiModule } from '../../components/keen-api/keen-api.module';\r\nimport { UserStatComponent } from './user-stat.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserStatComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserStatRoutingModule,\r\n    MetricModule,\r\n    KeenApiModule\r\n  ],\r\n  providers: [\r\n    DecimalPipe\r\n  ]\r\n})\r\nexport class UserStatModule { }\r\n"],"sourceRoot":"webpack:///"}