{"version":3,"sources":["webpack:///src/app/core/constants/chart-name.enum.ts","webpack:///src/app/core/constants/converted-type.enum.ts","webpack:///src/app/core/constants/index.ts","webpack:///src/app/core/constants/transaction-type.enum.ts","webpack:///src/app/core/constants/user-role.enum.ts","webpack:///src/app/core/constants/user-status.enum.ts","webpack:///src/app/core/services/credits.service.ts","webpack:///src/app/features/redeem/directives/paypal.directive.ts","webpack:///src/app/features/redeem/redeem-routing.module.ts","webpack:///src/app/features/redeem/redeem.component.ts","webpack:///src/app/features/redeem/redeem.component.html","webpack:///src/app/features/redeem/redeem.module.ts"],"names":["ChartName","ConvertedType","isConvertedTypeValid","type","Object","keys","findIndex","key","CASHOUT_REQUEST_AMOUNT","DATE_FORMAT","FAILED_TO_RETRIEVE","TransactionType","isTransactionTypeValid","UserRole","UserStatus","CreditsService","api","get","Credits","providedIn","PaypalDirective","el","opened","nativeElement","id","use","e","emit","window","login","render","appid","paypal","apiId","authend","environment","scopes","containerid","locale","theme","text","fullPage","returnurl","returnUrl","err","console","error","selector","routes","path","component","canActivate","RedeemRoutingModule","forChild","imports","exports","RedeemComponent","creditsService","fb","credits$","getCredits","pipe","credits","cashOutForm","group","cashOutAmount","max","maxReemableDollars","virtualAmount","coinsRateConversion","pattern","valueChanges","subscribe","value","localStorage","setItem","coins","Math","floor","cashout","round","transactionFee","ceil","templateUrl","styleUrls","changeDetection","OnPush","RedeemModule","declarations"],"mappings":"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","file":"features-redeem-redeem-module-es5.js","sourcesContent":["export enum ChartName {\r\n  SignupCount = 'signupCount',\r\n  ActivatedSignupCount = 'activatedSignupCount',\r\n  PurchasedCount = 'purchasedCount',\r\n  RedeemCount = 'redeemCount'\r\n}\r\n","export enum ConvertedType {\r\n  Converted = 'converted',\r\n  Churned = 'churned',\r\n}\r\n\r\nexport function isConvertedTypeValid(type: string) {\r\n  return Object.keys(ConvertedType).findIndex(key => {\r\n    return ConvertedType[key] === type;\r\n  }) >= 0;\r\n}\r\n","export * from './user-role.enum';\r\nexport * from './user-status.enum';\r\nexport * from './transaction-type.enum';\r\nexport * from './chart-name.enum';\r\nexport * from './converted-type.enum';\r\n\r\nexport const CASHOUT_REQUEST_AMOUNT = 'cashout-request-amount';\r\nexport const DATE_FORMAT = 'YYYY-MM-DD';\r\nexport const FAILED_TO_RETRIEVE = '-';\r\n","export enum TransactionType {\r\n  Add = 'add',\r\n  AdminCredits = 'adminCredits',\r\n  Transaction = 'transaction',\r\n  RedeemCoinsRequest = 'redeemCoinsRequest'\r\n}\r\n\r\nexport function isTransactionTypeValid(type: string) {\r\n  return Object.keys(TransactionType).findIndex(key => {\r\n    return TransactionType[key] === type;\r\n  }) >= 0;\r\n}\r\n","export enum UserRole {\r\n  Admin = 'admin',\r\n  Developer = 'dev',\r\n  Player = 'player'\r\n}\r\n","export enum UserStatus {\r\n  Active = 'active',\r\n  Inactive = 'inactive',\r\n  Banned = 'banned',\r\n  Deactived = 'deactivated',\r\n  Pending = 'pending'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { CreditsApi } from 'src/app/shared/constants/api';\r\nimport { CreditsModel } from '../models/credits.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditsService {\r\n\r\n  constructor(private api: ApiService) { }\r\n\r\n  getCredits(): Observable<CreditsModel> {\r\n    return this.api.get(CreditsApi.Credits) as Observable<CreditsModel>;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Directive({\r\n  selector: '[duelitPaypal]'\r\n})\r\nexport class PaypalDirective {\r\n  @Output()\r\n  readonly opened = new EventEmitter();\r\n\r\n  @HostListener('click', ['$event']) onClicked(e) {\r\n    this.opened.emit();\r\n  }\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n  ) {\r\n    el.nativeElement.id = 'duelit-paypal';\r\n    this.use();\r\n  }\r\n\r\n  use() {\r\n    // tslint:disable-next-line: no-string-literal\r\n    if (window['paypal']) {\r\n      try {\r\n        // tslint:disable-next-line: no-string-literal\r\n        window['paypal'].use(['login'], (login) => {\r\n          login.render({\r\n            appid: environment.paypal.apiId,\r\n            authend: environment.paypal.environment,\r\n            scopes: 'email',\r\n            containerid: 'duelit-paypal',\r\n            locale: 'es-es',\r\n            theme: 'neutral',\r\n            text: 'Send Cash Out Request',\r\n            fullPage: 'true',\r\n            returnurl: environment.paypal.returnUrl\r\n          });\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n        // todo: toastr\r\n      }\r\n    } else {\r\n      console.error('Paypal not found');\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RedeemGuard } from '@guards/redeem.guard';\r\n\r\nimport { RedeemComponent } from './redeem.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RedeemComponent, canActivate: [ RedeemGuard ] }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RedeemRoutingModule { }\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CASHOUT_REQUEST_AMOUNT } from '@core/constants';\r\nimport { Observable } from 'rxjs';\r\nimport { shareReplay, take, tap } from 'rxjs/operators';\r\nimport { CreditsModel } from 'src/app/core/models/credits.model';\r\nimport { CreditsService } from 'src/app/core/services/credits.service';\r\n\r\n@Component({\r\n  selector: 'duelit-redeem',\r\n  templateUrl: './redeem.component.html',\r\n  styleUrls: ['./redeem.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RedeemComponent implements OnInit {\r\n  credits$: Observable<CreditsModel>;\r\n  private credits: CreditsModel;\r\n  cashOutForm: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private creditsService: CreditsService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.credits$ = this.creditsService.getCredits().pipe(tap(credits => {\r\n      this.credits = credits;\r\n\r\n      this.cashOutForm = this.fb.group({\r\n        cashOutAmount: new FormControl(0, [\r\n          Validators.max(this.maxReemableDollars(credits.virtualAmount, credits.coinsRateConversion)),\r\n          Validators.pattern(/^[0-9]*$/)\r\n        ])\r\n      });\r\n\r\n      this.cashOutForm.get('cashOutAmount').valueChanges.subscribe(value => localStorage.setItem(CASHOUT_REQUEST_AMOUNT, value));\r\n    }), shareReplay(1), take(1));\r\n  }\r\n\r\n  maxReemableDollars(coins: number, coinsRateConversion: number) {\r\n    return Math.floor(coins * coinsRateConversion);\r\n  }\r\n\r\n  transactionFee(): number {\r\n    const cashout = this.cashOutForm.get('cashOutAmount').value;\r\n\r\n    if (cashout < 35) {\r\n      return 1;\r\n    } else if (cashout >= 35) {\r\n      return Math.round(2.9 * cashout) / 100;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  reedemableValue(): number {\r\n    const cashout = this.cashOutForm.get('cashOutAmount').value;\r\n\r\n    return cashout - this.transactionFee();\r\n  }\r\n\r\n  coinsToDeduct(): number {\r\n    const cashout = this.cashOutForm.get('cashOutAmount').value;\r\n\r\n    return Math.ceil(cashout / this.credits.coinsRateConversion);\r\n  }\r\n}\r\n","\r\n<div class=\"flex-grow\"></div>\r\n<div class=\"flex-align-center\">\r\n  <ng-container *ngIf=\"credits$ | async; let credits; else loading\">\r\n    <duelit-panel head=\"Cash Out Request\">\r\n      <div>\r\n        {{ credits.virtualAmount }} coins = $ {{ maxReemableDollars(credits.virtualAmount, credits.coinsRateConversion) | number: '0.2-2' }} USD\r\n      </div>\r\n      <div class=\"form-group\" [formGroup]=\"cashOutForm\">\r\n        <input type=\"number\"\r\n          class=\"form-control custom\"\r\n          formControlName=\"cashOutAmount\"\r\n          [max]=\"maxReemableDollars(credits.virtualAmount, credits.coinsRateConversion)\"\r\n          step=\"1\"\r\n          min=\"0\">\r\n      </div>\r\n\r\n      <div>\r\n        Paypals transaction fee $ {{ transactionFee() | number: '0.2-2' }} USD\r\n      </div>\r\n\r\n      <div>\r\n        <span *ngIf=\"reedemableValue() > 0 && cashOutForm.get('cashOutAmount').value <= maxReemableDollars(credits.virtualAmount, credits.coinsRateConversion)\">\r\n          You will be credited a total of <span class=\"cash\">$ {{ reedemableValue() | number: '0.2-2' }}</span> USD\r\n        </span>\r\n        <span class=\"cash\">\r\n          ${{ cashOutForm.get('cashOutAmount').value | number: '0.2-2' }} - ${{ transactionFee() | number: '0.2-2' }} = ${{ reedemableValue() | number: '0.2-2' }}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span>\r\n          Redeemable for <span class=\"cash\">{{ coinsToDeduct() | number: '0.0-0' }} coins</span>\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"error flex-align-center\" *ngIf=\"cashOutForm.get('cashOutAmount').value > maxReemableDollars(credits.virtualAmount, credits.coinsRateConversion); else paypal\">\r\n        <span>Insufficient Funds.</span>\r\n        <span>You can only redeem {{ maxReemableDollars(credits.virtualAmount, credits.coinsRateConversion) }} or less</span>\r\n      </div>\r\n      <ng-template #paypal>\r\n        <div *ngIf=\"cashOutForm.get('cashOutAmount').value > 0 && reedemableValue() > 0\" duelitPaypal>\r\n\r\n        </div>\r\n      </ng-template>\r\n    </duelit-panel>\r\n  </ng-container>\r\n  <ng-template #loading>\r\n    <duelit-panel>\r\n      Getting coins data...\r\n    </duelit-panel>\r\n  </ng-template>\r\n</div>\r\n<div class=\"flex-grow\"></div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PanelModule } from '@shared/components/panel';\r\n\r\nimport { RedeemRoutingModule } from './redeem-routing.module';\r\nimport { RedeemComponent } from './redeem.component';\r\nimport { PaypalDirective } from './directives/paypal.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RedeemComponent, PaypalDirective],\r\n  imports: [\r\n    CommonModule,\r\n    RedeemRoutingModule,\r\n    PanelModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RedeemModule { }\r\n"]}