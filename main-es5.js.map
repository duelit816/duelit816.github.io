{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.init.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/toast-container/toast-container.component.ts","webpack:///src/app/core/components/toast-container/toast-container.component.html","webpack:///src/app/core/core-routing.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/pages/login/login-page.guard.ts","webpack:///src/app/core/pages/login/login-routing.module.ts","webpack:///src/app/core/pages/login/login.component.ts","webpack:///src/app/core/pages/login/login.component.html","webpack:///src/app/core/pages/login/login.module.ts","webpack:///src/app/core/services/api.service.ts","webpack:///src/app/core/services/login.service.ts","webpack:///src/app/core/services/toast.service.ts","webpack:///src/app/guards/admin.guard.ts","webpack:///src/app/guards/index.ts","webpack:///src/app/guards/redeem.guard.ts","webpack:///src/app/interceptors/token.interceptor.ts","webpack:///src/app/shared/components/core-container/change-env-modal/change-env-modal.component.ts","webpack:///src/app/shared/components/core-container/change-env-modal/change-env-modal.component.html","webpack:///src/app/shared/components/core-container/core-container.component.ts","webpack:///src/app/shared/components/core-container/core-container.component.html","webpack:///src/app/shared/components/core-container/core-container.module.ts","webpack:///src/app/shared/components/core-container/footer/footer.component.ts","webpack:///src/app/shared/components/core-container/footer/footer.component.html","webpack:///src/app/shared/components/core-container/header/header.component.ts","webpack:///src/app/shared/components/core-container/header/header.component.html","webpack:///src/app/shared/components/core-container/index.ts","webpack:///src/app/shared/components/panel/index.ts","webpack:///src/app/shared/components/panel/panel.component.ts","webpack:///src/app/shared/components/panel/panel.component.html","webpack:///src/app/shared/components/panel/panel.module.ts","webpack:///src/app/shared/constants/api/index.ts","webpack:///src/app/shared/constants/environment-api.enum.ts","webpack:///src/app/shared/constants/environment-application.enum.ts","webpack:///src/app/shared/constants/index.ts","webpack:///src/app/shared/validators/email.validator.ts","webpack:///src/app/shared/validators/index.ts","webpack:///src/environments/environment.default.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","RedeemModule","canActivate","PaypalModule","AdminModule","CoreModule","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","initSelectedEnvironment","api","preSelected","localStorage","getItem","defaultApiEnv","find","apiEnv","default","env","findIndex","environment","Local","selectedEnvApi","initUser","loginService","Init","INIT_API_CONFIG","provide","useFactory","deps","multi","INIT_USER","AppModule","declarations","providers","bootstrap","toastService","ToastContainerComponent","close","toast","textOrTpl","LoginModule","ResetPasswordModule","ForgotPasswordModule","CoreRoutingModule","forChild","ngModule","LoginPageGuard","login","next","state","isAuthenticated","urlTreeForLoggedUser","providedIn","component","LoginRoutingModule","LoginComponent","fb","router","isLoginInProgress","loginForm","group","email","required","password","maxLength","minLength","value","subscribe","user","success","error","doLogin","DEFAULT_API_DETAILS","query","opts","addSecurity","SELECTED_ENV","ApiService","http","details","get","buildRequestUrl","delete","body","security","custom_uid","device_type","device_token","post","put","queries","Object","map","key","baseuri","length","join","params","_path","Array","isArray","forEach","param","replace","entries","_selectedEnvApi","setItem","selectedApiConfig","config","host","LoginService","zone","DUELIT_TOKEN","DUELIT_ROLE","token","MyProfile","pipe","result","role","err","navigate","toPromise","Login","country","getUrlForLoggedUser","application","Redeem","createUrlTree","Logout","removeItem","ToastService","toasts","push","filter","t","msg","class","AdminGuard","isAdmin","logout","Guards","RedeemGuard","TokenInterceptor","request","modifiedReq","exemptedApis","isExempted","regex","test","url","clone","headers","set","handle","INTERCEPTOR_TOKEN","useClass","ChangeEnvModalComponent","modal","selected","getSelectedEnvironment","CoreContainerComponent","navigateToHomePage","doLogout","onLogoClick","CoreContainerModule","FooterComponent","icons","facebook","twitter","instagram","HeaderComponent","modalService","authenticated","logoClicked","menu","WIDE_SCREEN_LIMIT","_navList","name","Admin","isMenuOpened","$event","innerWidth","window","emit","Dev","open","action","catch","console","log","Prod","nav","_innerWidth","width","openChangeEnv","PanelComponent","PanelModule","UsersApi","CreditsApi","TournamentsApi","ValuesApi","CountriesApi","AdminFunctionsApi","EnviromentApi","isEvironmentApiValid","EnvironmentApplication","emailRegex","EmailValidator","control","DEFAULT_SECURITY","environmentDefault","production","paypal","returnUrl","apiId","keenio","projectId","readKey","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '@guards/admin.guard';\r\n\r\nimport { RedeemGuard } from './guards/redeem.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'redeem', loadChildren: () => import('./features/redeem/redeem.module').then(m => m.RedeemModule),\r\n    canActivate: [ RedeemGuard ],\r\n  },\r\n  {\r\n    path: 'paypal/user-data',\r\n    loadChildren: () => import('./features/paypal/paypal.module').then(m => m.PaypalModule),\r\n    canActivate: [ RedeemGuard ]\r\n  },\r\n  { path: 'admin', loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\r\n    canActivate: [ AdminGuard ],\r\n  },\r\n  { path: '', loadChildren: () => import('./core/core.module').then(m => m.CoreModule) },\r\n  { path: '**', pathMatch: 'full', redirectTo: '/login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'admin-redeem-dashboard';\r\n}\r\n","<duelit-core-container>\r\n  <router-outlet></router-outlet>\r\n  <!-- <duelit-panel head=\"boom\">test</duelit-panel> -->\r\n</duelit-core-container>\r\n<duelit-toast-container></duelit-toast-container>\r\n","import { ApiService, SELECTED_ENV } from './core/services/api.service';\r\nimport { EnviromentApi, isEvironmentApiValid } from '@shared/constants';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Provider, APP_INITIALIZER } from '@angular/core';\r\nimport { LoginService } from '@core/services/login.service';\r\n\r\nfunction initSelectedEnvironment(api: ApiService) {\r\n  return () => {\r\n    const preSelected = localStorage.getItem(SELECTED_ENV);\r\n    const defaultApiEnv = environment.api.find(apiEnv => apiEnv.default);\r\n    const env: EnviromentApi = isEvironmentApiValid(preSelected) &&\r\n      environment.api.findIndex(apiEnv => apiEnv.environment === preSelected) >= 0 ? preSelected as EnviromentApi :\r\n      defaultApiEnv ? defaultApiEnv.environment : EnviromentApi.Local;\r\n\r\n    api.selectedEnvApi = env;\r\n  };\r\n}\r\n\r\nconst initUser = (loginService: LoginService) => {\r\n  return () => loginService.Init();\r\n};\r\n\r\nexport const INIT_API_CONFIG: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  useFactory: initSelectedEnvironment,\r\n  deps: [ApiService],\r\n  multi: true\r\n};\r\n\r\nexport const INIT_USER: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  useFactory: initUser,\r\n  multi: true,\r\n  deps: [LoginService]\r\n};\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { INIT_API_CONFIG, INIT_USER } from './app.init';\r\nimport { Guards } from './guards';\r\nimport { INTERCEPTOR_TOKEN } from './interceptors/token.interceptor';\r\nimport { CoreContainerModule } from './shared/components/core-container';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    CoreModule.forRoot(),\r\n    CoreContainerModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    ...Guards,\r\n    CookieService,\r\n    LoginService,\r\n    INIT_API_CONFIG,\r\n    INIT_USER,\r\n    INTERCEPTOR_TOKEN,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport { ToastModel } from '@core/models/toast.model';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'duelit-toast-container',\r\n  templateUrl: './toast-container.component.html',\r\n  styleUrls: ['./toast-container.component.scss']\r\n})\r\nexport class ToastContainerComponent {\r\n  constructor(public toastService: ToastService) {}\r\n  close = faTimes;\r\n\r\n  isTemplate(toast: ToastModel) { return toast.textOrTpl instanceof TemplateRef; }\r\n}\r\n","<ngb-toast\r\n  *ngFor=\"let toast of toastService.toasts\"\r\n  [class]=\"toast.class\"\r\n  [header]=\"toast.header\"\r\n  [autohide]=\"true\"\r\n  [delay]=\"toast.delay || 5000\"\r\n  (hide)=\"toastService.remove(toast)\"\r\n>\r\n  <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n    <button (click)=\"toastService.remove(toast)\" *ngIf=\"toast.dismissible\" [ngClass]=\"toast.class\">\r\n      <fa-icon [icon]=\"close\" class=\"fa-lg\"></fa-icon>\r\n    </button>\r\n    <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n  </ng-template>\r\n\r\n  <ng-template #text>{{ toast.textOrTpl }}\r\n    <button (click)=\"toastService.remove(toast)\" *ngIf=\"toast.dismissible\" [ngClass]=\"toast.class\">\r\n      <fa-icon [icon]=\"close\" class=\"fa-lg\"></fa-icon>\r\n    </button>\r\n  </ng-template>\r\n</ngb-toast>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginPageGuard } from './pages/login/login-page.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', loadChildren: () => import('./pages/login/login.module').then(m => m.LoginModule), canActivate: [LoginPageGuard] },\r\n  {\r\n    path: 'reset-password/:token',\r\n    loadChildren: () => import('./pages/reset-password/reset-password.module').then(m => m.ResetPasswordModule)\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    loadChildren: () => import('./pages/forgot-password/forgot-password.module').then(m => m.ForgotPasswordModule)\r\n  },\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CoreRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbToastModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ToastContainerComponent } from './components/toast-container/toast-container.component';\r\nimport { CoreRoutingModule } from './core-routing.module';\r\nimport { LoginModule } from './pages/login/login.module';\r\nimport { LoginService } from './services/login.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ToastContainerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CoreRoutingModule,\r\n    LoginModule,\r\n    NgbToastModule,\r\n    RouterModule,\r\n    FontAwesomeModule\r\n  ],\r\n  exports: [\r\n    ToastContainerComponent\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        LoginService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoginService } from '../../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginPageGuard implements CanActivate {\r\n  constructor(private login: LoginService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.login.isAuthenticated ? this.login.urlTreeForLoggedUser() : true;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { EmailValidator } from 'src/app/shared/validators';\r\n\r\nimport { LoginService } from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'duelit-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  isLoginInProgress = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginService: LoginService,\r\n    private toast: ToastService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.loginService.isAuthenticated) {\r\n    //   this.loginService.navigateAuthenticatedUser();\r\n    // }\r\n\r\n    this.loginForm = this.fb.group({\r\n      email: new FormControl('', [EmailValidator, Validators.required]),\r\n      password: new FormControl('', [Validators.required, Validators.maxLength(24), Validators.minLength(8)])\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n    const { email, password } = this.loginForm.value;\r\n    if (!this.isLoginInProgress) {\r\n      this.isLoginInProgress = true;\r\n\r\n      this.loginService.login(email, password).subscribe((user) => {\r\n        this.isLoginInProgress = false;\r\n        if (user) {\r\n          // this.loginService.navigateAuthenticatedUser();\r\n          this.toast.success('Successfully logged in.');\r\n          // this.router.navigate(this.loginService.getUrlForLoggedUser());\r\n        } else {\r\n          this.toast.error('Provided credentials are not correct.');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","<duelit-panel head=\"Login\">\r\n  <div class=\"form-group\" [formGroup]=\"loginForm\">\r\n    <input type=\"email\" placeholder=\"Email\" autocomplete=\"off\" class=\"form-control custom\" formControlName=\"email\">\r\n    <ng-container *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\r\n      <span class=\"error\" *ngIf=\"loginForm.get('email').errors.required\">This field is required.</span>\r\n      <span class=\"error\" *ngIf=\"loginForm.get('email').errors.email\">This field must be a valid email address.</span>\r\n    </ng-container>\r\n\r\n\r\n    <input type=\"password\" placeholder=\"Password\" autocomplete=\"off\" class=\"form-control custom\" formControlName=\"password\">\r\n    <ng-container *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\r\n      <span class=\"error\" *ngIf=\"loginForm.get('password').errors.required\">This field is required.</span>\r\n      <span class=\"error\" *ngIf=\"loginForm.get('password').errors.minlength\">This field can not be less than {{loginForm.get('password').errors.minlength.requiredLength}} characters.</span>\r\n      <span class=\"error\" *ngIf=\"loginForm.get('password').errors.maxlength\">This field can be at most {{loginForm.get('password').errors.maxlength.requiredLength}} characters long.</span>\r\n    </ng-container>\r\n\r\n    <button class=\"btn custom primary\" [disabled]=\"loginForm.invalid || isLoginInProgress\" (click)=\"doLogin()\">\r\n      <span *ngIf=\"isLoginInProgress; else login\" class=\"loading\"></span>\r\n      <ng-template #login>Login</ng-template>\r\n    </button>\r\n    <span [routerLink]=\"['/forgot-password']\">Forgot your Password?</span>\r\n  </div>\r\n</duelit-panel>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PanelModule } from 'src/app/shared/components/panel';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    PanelModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EnviromentApi } from '@shared/constants';\r\nimport { ApiSecurity, ApiConfig } from 'src/environments/environment.interface';\r\n\r\nconst DEFAULT_API_DETAILS = {\r\n  query: {},\r\n  opts: {\r\n    addSecurity: true\r\n  }\r\n};\r\n\r\nexport const SELECTED_ENV = 'selectedEnvironment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private _selectedEnvApi: EnviromentApi;\r\n  selectedApiConfig: ApiConfig;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  set selectedEnvApi(value: EnviromentApi) {\r\n    this._selectedEnvApi = value;\r\n    localStorage.setItem(SELECTED_ENV, value);\r\n    this.selectedApiConfig = environment.api.find(config => config.environment === value);\r\n  }\r\n  get selectedEnvApi(): EnviromentApi {\r\n    return this._selectedEnvApi;\r\n  }\r\n\r\n  get baseuri(): string {\r\n    return this.selectedApiConfig.host;\r\n  }\r\n\r\n  get security(): ApiSecurity {\r\n    return this.selectedApiConfig.security;\r\n  }\r\n\r\n  get(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n\r\n    return this.http.get(this.buildRequestUrl(path, details.query));\r\n  }\r\n\r\n  delete(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n\r\n    return this.http.delete(this.buildRequestUrl(path, details.query));\r\n  }\r\n\r\n  post(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n    const opts = {\r\n      ...DEFAULT_API_DETAILS.opts,\r\n      ...details.opts\r\n    };\r\n\r\n    const body = {\r\n      ...details.body\r\n    };\r\n\r\n    if (opts.addSecurity) {\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['custom_uid'] = this.security.custom_uid;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_type'] = this.security.device_type;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_token'] = this.security.device_token;\r\n    }\r\n\r\n\r\n    return this.http.post(this.buildRequestUrl(path, details.query), body);\r\n  }\r\n\r\n  put(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n    const opts = {\r\n      ...DEFAULT_API_DETAILS.opts,\r\n      ...details.opts\r\n    };\r\n\r\n    const body = {\r\n      ...details.body\r\n    };\r\n\r\n    if (opts.addSecurity) {\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['custom_uid'] = this.security.custom_uid;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_type'] = this.security.device_type;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_token'] = this.security.device_token;\r\n    }\r\n\r\n    return this.http.put(this.buildRequestUrl(path, details.query), body);\r\n  }\r\n\r\n  private buildRequestUrl (path: string, query: HttpQuery = {}): string {\r\n    const queries = Object.keys(query).map(key => {\r\n      return `${key}=${query[key]}`;\r\n    });\r\n\r\n    return `${this.baseuri}${path}${queries.length > 0 ? '?' : ''}${queries.join('&')}`;\r\n  }\r\n\r\n  buildPath(path: string, params: (string|number)[] | { [param: string]: string|number } = []): string {\r\n    let _path = path;\r\n\r\n    if (Array.isArray(params)) {\r\n      params.forEach(param => _path = _path.replace(/:.*?:/, `${param}`));\r\n    } else {\r\n      Object.entries(params).forEach(([param, value]) => {\r\n        _path = _path.replace(`:${param}:`, `${value}`);\r\n      });\r\n    }\r\n\r\n    return _path;\r\n  }\r\n}\r\n\r\nexport interface ApiDetails {\r\n  query?: HttpQuery;\r\n  body?: object | Array<any>;\r\n  opts?: {\r\n    addSecurity: boolean;\r\n  };\r\n}\r\n\r\nexport interface HttpQuery { [ key: string ]: string | number; }\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Router, UrlTree } from '@angular/router';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { EnvironmentApplication } from 'src/app/shared/constants';\r\nimport { UsersApi } from 'src/app/shared/constants/api';\r\nimport { UserRole } from 'src/app/core/constants/user-role.enum';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { UserProfileModel } from '../models/user-profile.model';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  isAuthenticated = false;\r\n  // _token: string;\r\n  readonly DUELIT_TOKEN = 'duelitToken';\r\n  readonly DUELIT_ROLE = 'duelitRole';\r\n  user: UserProfileModel;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private zone: NgZone\r\n  ) { }\r\n\r\n  get token(): string {\r\n    return localStorage.getItem(this.DUELIT_TOKEN);\r\n  }\r\n\r\n  set token(token: string) {\r\n    if (token) {\r\n      localStorage.setItem(this.DUELIT_TOKEN, token);\r\n    } else {\r\n      localStorage.removeItem(this.DUELIT_TOKEN);\r\n      localStorage.removeItem(this.DUELIT_ROLE);\r\n    }\r\n  }\r\n\r\n  Init(): Promise<boolean> {\r\n    if (!this.token) {\r\n      this.isAuthenticated = false;\r\n      return Promise.resolve(false);\r\n    }\r\n    return this.api.get(UsersApi.MyProfile).pipe(\r\n      map((result: UserProfileModel) => {\r\n        this.isAuthenticated = !!result.email;\r\n        this.user = {\r\n          ...result,\r\n          role: localStorage.getItem(this.DUELIT_ROLE) as UserRole,\r\n          token: this.token\r\n        };\r\n        return !!result.email;\r\n      }),\r\n      catchError(err => {\r\n        this.isAuthenticated = false;\r\n        return of(false);\r\n      }),\r\n      tap(isAuthenticated => {\r\n        if (!isAuthenticated) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      })\r\n    ).toPromise();\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.api.post(UsersApi.Login, { body: { email, password , country: 'United States' } }).pipe(\r\n      map((user: UserProfileModel) => {\r\n        if (!user) {\r\n          this.isAuthenticated = false;\r\n          return false;\r\n        }\r\n        this.user = user;\r\n        this.token = user.token;\r\n        localStorage.setItem(this.DUELIT_ROLE, user.role);\r\n        this.isAuthenticated = true;\r\n        this.router.navigate(this.getUrlForLoggedUser());\r\n        return user;\r\n      }),\r\n      catchError(err => of(false)),\r\n    );\r\n  }\r\n\r\n  getUrlForLoggedUser() {\r\n    return environment.application === EnvironmentApplication.Redeem ? ['/redeem'] : ['/admin'];\r\n  }\r\n\r\n  urlTreeForLoggedUser(): UrlTree {\r\n    return this.router.createUrlTree(this.getUrlForLoggedUser());\r\n  }\r\n\r\n  navigateToHomePage() {\r\n    this.router.navigate(this.getUrlForLoggedUser());\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(this.DUELIT_TOKEN, token);\r\n  }\r\n\r\n  logout() {\r\n    return this.api.post(UsersApi.Logout, {\r\n      body: { device_token: 'none' },\r\n      opts: { addSecurity: false }\r\n    }).pipe(\r\n      map(() => {\r\n        localStorage.removeItem(this.DUELIT_TOKEN);\r\n        localStorage.removeItem(this.DUELIT_ROLE);\r\n        this.router.navigate(['/login']);\r\n        this.isAuthenticated = false;\r\n        this.user = null;\r\n        this.token = null;\r\n        return of({ });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastModel } from '@core/models/toast.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  constructor() { }\r\n\r\n  toasts: ToastModel[] = [];\r\n\r\n  show(toast: ToastModel) {\r\n    this.toasts.push(toast);\r\n  }\r\n\r\n  remove(toast: ToastModel) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n\r\n  success(msg: string) {\r\n    this.toasts.push({\r\n      class: 'success',\r\n      textOrTpl: msg\r\n    });\r\n  }\r\n\r\n  error(msg: string) {\r\n    this.toasts.push({\r\n      class: 'danger',\r\n      textOrTpl: msg\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private toast: ToastService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      const isAdmin = this.loginService.user.role === 'admin';\r\n\r\n      if (!isAdmin) {\r\n        this.toast.error('You have been logged out. You must be an admin to access this page.');\r\n        this.loginService.logout().subscribe(() => { });\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n  }\r\n}\r\n","import { RedeemGuard } from './redeem.guard';\r\n\r\nexport const Guards = [\r\n  RedeemGuard\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../core/services/login.service';\r\n\r\n@Injectable()\r\nexport class RedeemGuard implements CanActivate {\r\n  constructor (\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      // return true;\r\n      if (this.loginService.isAuthenticated) {\r\n        return true;\r\n      }\r\n      return this.router.createUrlTree(['login']);\r\n  }\r\n\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable, Provider } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoginService } from '../core/services/login.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let modifiedReq = request;\r\n    const exemptedApis = [/reset-password-request/, /api\\.keen\\.io/];\r\n    const isExempted = exemptedApis.findIndex((regex) => regex.test(request.url)) >= 0;\r\n\r\n    if (this.loginService.token && !isExempted) {\r\n      modifiedReq = request.clone({\r\n        headers: request.headers.set('token', this.loginService.token),\r\n      });\r\n    }\r\n\r\n    return next.handle(modifiedReq);\r\n  }\r\n}\r\n\r\nexport const INTERCEPTOR_TOKEN: Provider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: TokenInterceptor,\r\n  multi: true,\r\n  deps: [LoginService]\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { EnviromentApi } from '@shared/constants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'duelit-change-env-modal',\r\n  templateUrl: './change-env-modal.component.html',\r\n  styleUrls: ['./change-env-modal.component.scss']\r\n})\r\nexport class ChangeEnvModalComponent implements OnInit {\r\n  selected: EnviromentApi;\r\n  constructor(\r\n    public modal: NgbActiveModal,\r\n    private api: ApiService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.selected = this.api.selectedEnvApi;\r\n  }\r\n\r\n  getEnvironments(): EnviromentApi[] {\r\n    return environment.api\r\n      .filter(config => config.environment !== this.api.selectedEnvApi)\r\n      .map(config => config.environment);\r\n  }\r\n\r\n  getSelectedEnvironment(): EnviromentApi {\r\n    return this.api.selectedEnvApi;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Change Environment</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss({ action: 'cancel' })\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>You will be logged out when you change the environment.</p>\r\n  <div class=\"flex flex--space-between choice-container\">\r\n    <div class=\"choice\">\r\n      <strong>From</strong>\r\n      {{ this.getSelectedEnvironment() }}\r\n    </div>\r\n    <div class=\"choice\">\r\n      <strong>To</strong>\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button class=\"btn btn-outline-primary\" ngbDropdownToggle>{{ selected === getSelectedEnvironment() ? 'No Change' : selected }}</button>\r\n        <div ngbDropdownMenu>\r\n          <button ngbDropdownItem (click)=\"selected = getSelectedEnvironment()\">{{ this.getSelectedEnvironment() }}</button>\r\n          <button ngbDropdownItem *ngFor=\"let env of getEnvironments()\" (click)=\"selected = env\">{{env}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss({ action: 'cancel' })\">Cancel</button>\r\n  <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close({\r\n    action: 'ok',\r\n    environment: this.selected\r\n  })\">Ok</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EnvironmentApplication } from '@shared/constants';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'duelit-core-container',\r\n  templateUrl: './core-container.component.html',\r\n  styleUrls: ['./core-container.component.scss']\r\n})\r\nexport class CoreContainerComponent implements OnInit {\r\n\r\n  constructor(\r\n    public loginService: LoginService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    return this.loginService.isAuthenticated;\r\n  }\r\n\r\n  doLogout() {\r\n    this.loginService.logout().subscribe(() => { });\r\n  }\r\n\r\n  onLogoClick() {\r\n    this.loginService.navigateToHomePage();\r\n  }\r\n\r\n  isRedeem() {\r\n    return environment.application === EnvironmentApplication.Redeem;\r\n  }\r\n}\r\n","<duelit-header [authenticated]=\"isAuthenticated\" [firstName]=\"loginService.user?.firstName\"\r\n  (logout)=\"doLogout()\" (logoClicked)=\"onLogoClick()\"></duelit-header>\r\n<div class=\"container\">\r\n  <div class=\"center-container\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n<duelit-footer *ngIf=\"isRedeem()\"></duelit-footer>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { CoreContainerComponent } from './core-container.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ChangeEnvModalComponent } from './change-env-modal/change-env-modal.component';\r\nimport { NgbModalModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CoreContainerComponent, HeaderComponent, FooterComponent, ChangeEnvModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    FontAwesomeModule,\r\n    RouterModule,\r\n    NgbModalModule,\r\n    NgbDropdownModule,\r\n  ],\r\n  exports: [CoreContainerComponent]\r\n})\r\nexport class CoreContainerModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { faFacebookF, faInstagram, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'duelit-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  icons = {\r\n    facebook: faFacebookF,\r\n    twitter: faTwitter,\r\n    instagram: faInstagram,\r\n    email: faEnvelope\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n  <div class=\"duelit-links\">\r\n    <span><a href=\"https://duelit.com/terms-and-conditions/\">TERMS &amp; CONDITIONS</a></span>\r\n    <span><a href=\"https://duelit.com/privacy-policy/\">PRIVACY POLICY</a></span>\r\n    <span><a href=\"https://duelit.com/faq/\">FAQ</a></span>\r\n  </div>\r\n\r\n  <div class=\"social-medias\">\r\n    <a href=\"https://bit.ly/2wPRRat\" target=\"_blank\"><fa-icon class=\"fa-lg\" [icon]=\"icons.facebook\"></fa-icon></a>\r\n    <a href=\"https://bit.ly/2iDzlvr\" target=\"_blank\"><fa-icon class=\"fa-lg\" [icon]=\"icons.twitter\"></fa-icon></a>\r\n    <a href=\"https://bit.ly/2vHjLjJ\" target=\"_blank\"><fa-icon class=\"fa-lg\" [icon]=\"icons.instagram\"></fa-icon></a>\r\n    <a href=\"mailto:contact@duelit.com?Subject=Website%20Feedback\" rel=\"nofollow\"><fa-icon class=\"fa-lg\" [icon]=\"icons.email\"></fa-icon></a>\r\n  </div>\r\n\r\n  <div class=\"copyright\">\r\n    © 2020 Play & Earn Inc. All rights reserved.\r\n  </div>\r\n</footer>\r\n","import { Component, EventEmitter, HostBinding, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { EnvironmentApplication, EnviromentApi } from '@shared/constants';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChangeEnvModalComponent } from '../change-env-modal/change-env-modal.component';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { ApiService } from '@core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'duelit-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() authenticated = false;\r\n  @Input() firstName: string;\r\n  @Output() readonly logout = new EventEmitter();\r\n  @Output() readonly logoClicked = new EventEmitter();\r\n  private _innerWidth: number;\r\n  menu = faBars;\r\n  // isMenuOpened = false;\r\n  readonly WIDE_SCREEN_LIMIT = 768;\r\n\r\n  _navList = [{\r\n    name: 'Redeem',\r\n    path: ['/redeem'],\r\n    env: EnvironmentApplication.Redeem\r\n  }, {\r\n    name: 'Dashboard',\r\n    path: ['/admin/dashboard'],\r\n    env: EnvironmentApplication.Admin\r\n  }, {\r\n    name: 'Users',\r\n    path: ['/admin/users'],\r\n    env: EnvironmentApplication.Admin\r\n  }, {\r\n    name: 'Tournaments',\r\n    path: ['/admin/tournaments'],\r\n    env: EnvironmentApplication.Admin\r\n  }, {\r\n    name: 'Countries',\r\n    path: ['/admin/countries'],\r\n    env: EnvironmentApplication.Admin\r\n  }];\r\n\r\n  get navList() {\r\n    if (environment.application === EnvironmentApplication.Dev) {\r\n      return this._navList;\r\n    }\r\n    return this._navList.filter(nav => nav.env === environment.application);\r\n  }\r\n\r\n  get innerWidth(): number {\r\n    return this._innerWidth;\r\n  }\r\n  set innerWidth(width) {\r\n    if (width >= this.WIDE_SCREEN_LIMIT) {\r\n      this.isMenuOpened = false;\r\n    }\r\n    this._innerWidth = width;\r\n  }\r\n  @HostBinding('class.opened-menu') isMenuOpened: boolean;\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize($event: number) {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private loginService: LoginService,\r\n    private api: ApiService\r\n  ) {\r\n    this.isMenuOpened = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  doLogout() {\r\n    this.logout.emit();\r\n  }\r\n\r\n  isEnvironmentAdmin(): boolean {\r\n    return environment.application === EnvironmentApplication.Admin || environment.application === EnvironmentApplication.Dev;\r\n  }\r\n\r\n  openChangeEnv() {\r\n    const modal = this.modalService.open(ChangeEnvModalComponent);\r\n\r\n    modal.result.then(({ action, environment: env }) => {\r\n      if (action === 'ok' && env !== this.api.selectedEnvApi) {\r\n        if (this.loginService.isAuthenticated) {\r\n          this.loginService.logout().subscribe(() => {\r\n            this.api.selectedEnvApi = env;\r\n          });\r\n        } else {\r\n          this.api.selectedEnvApi = env;\r\n        }\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      return;\r\n    });\r\n  }\r\n\r\n  isEnvirontmentApiProd(): boolean {\r\n    return this.api.selectedEnvApi === EnviromentApi.Prod;\r\n  }\r\n\r\n  getSelectedEnv(): EnviromentApi {\r\n    return this.api.selectedEnvApi;\r\n  }\r\n}\r\n","<header class=\"container\" [class.opened]=\"isMenuOpened\">\r\n  <div class=\"center-container flex-align-center\">\r\n    <div class=\"title-logo-container\">\r\n      <img src=\"assets/img/dingding-logo.png\" class=\"logo\" (click)=\"logoClicked.emit()\"/>\r\n      <span class=\"title\">Duelit</span>\r\n      <span class=\"title\" *ngIf=\"!isEnvirontmentApiProd()\" style=\"font-size: 1em;\">[{{getSelectedEnv()}}]</span>\r\n      <span class=\"title\" (click)=\"openChangeEnv()\" style=\"font-size: 1em; cursor: pointer\">Change Env</span>\r\n    </div>\r\n\r\n    <div class=\"flex-align-center\">\r\n      <ng-container *ngIf=\"innerWidth < WIDE_SCREEN_LIMIT; else wideScreen\">\r\n        <ng-container *ngIf=\"authenticated\">\r\n          <button class=\"welcome\" (click)=\"isMenuOpened = !isMenuOpened;\"><fa-icon class=\"fa-lg\" [icon]=\"menu\"></fa-icon></button>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-template #wideScreen>\r\n        <ng-container *ngIf=\"authenticated; else login\">\r\n          <button class=\"welcome\" *ngFor=\"let navItem of navList\" [routerLink]=\"navItem.path\" routerLinkActive=\"active-route\">{{navItem.name}}</button>\r\n\r\n          <button class=\"welcome\" [matMenuTriggerFor]=\"menu\">\r\n            Welcome {{firstName}}\r\n            <span class=\"caret\"></span>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n            <!-- <button mat-menu-item>Profile</button> -->\r\n            <button mat-menu-item [routerLink]=\"['/admin/profile']\" *ngIf=\"isEnvironmentAdmin()\">Profile</button>\r\n            <button mat-menu-item [routerLink]=\"['/admin/users/create']\" *ngIf=\"isEnvironmentAdmin()\">Create User</button>\r\n            <button mat-menu-item [routerLink]=\"['/admin/app-control']\" *ngIf=\"isEnvironmentAdmin()\">Application Control</button>\r\n            <button mat-menu-item (click)=\"openChangeEnv()\" *ngIf=\"isEnvironmentAdmin()\">Change Env</button>\r\n            <button mat-menu-item (click)=\"doLogout()\">Logout</button>\r\n          </mat-menu>\r\n\r\n        </ng-container>\r\n        <ng-template #login>\r\n          <button class=\"welcome\" [routerLink]=\"['/login']\">Login</button>\r\n        </ng-template>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</header>\r\n<div *ngIf=\"innerWidth < WIDE_SCREEN_LIMIT && isMenuOpened\" class=\"menu-container\" (blur)=\"isMenuOpened=false\" tabindex=\"-1\" #menuContainer autofocus>\r\n  <ng-container *ngIf=\"authenticated; else mobileLogin\">\r\n    <div *ngFor=\"let navItem of navList\" class=\"menu-item\" [class.opened]=\"!isMenuOpened\" (click)=\"isMenuOpened = false\" [routerLink]=\"navItem.path\" routerLinkActive=\"active-route\">\r\n      {{navItem.name}}\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" [routerLink]=\"['/admin/profile']\" (click)=\"isMenuOpened = false\">\r\n      Profile\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" [routerLink]=\"['/admin/users/create']\" (click)=\"isMenuOpened = false\">\r\n      Create User\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" [routerLink]=\"['/admin/app-control']\" (click)=\"isMenuOpened = false\">\r\n      Application Control\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" (click)=\"isMenuOpened = false; openChangeEnv()\">\r\n      Change Env\r\n    </div>\r\n    <div class=\"menu-item logout\" [class.opened]=\"!isMenuOpened\" (click)=\"doLogout(); isMenuOpened = false\">\r\n      Logout\r\n    </div>\r\n    <div class=\"menu-hidden\" (click)=\"isMenuOpened = false\"></div>\r\n  </ng-container>\r\n  <ng-template #mobileLogin>\r\n    <div class=\"menu-item logout\" [class.opened]=\"!isMenuOpened\" (click)=\"isMenuOpened = false\" [routerLink]=\"['/login']\">\r\n      Login\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n","export * from './core-container.component';\r\nexport * from './core-container.module';\r\n","export * from './panel.component';\r\nexport * from './panel.module';\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.scss']\r\n})\r\nexport class PanelComponent implements OnInit {\r\n  @Input() head?: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"head\">\r\n  <div class=\"panel-heading\">\r\n    {{head}}\r\n  </div>\r\n  <div class=\"divider\"></div>\r\n</ng-container>\r\n<div class=\"panel-body\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PanelComponent } from './panel.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PanelComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    PanelComponent\r\n  ]\r\n})\r\nexport class PanelModule { }\r\n","export enum UsersApi {\r\n  ValidateToken = '/api/v1/users/validate-token/:token:',\r\n  MyProfile = '/api/v1/users/me',\r\n  Login = '/api/v1/users/login',\r\n  Logout = '/api/v1/users/logout',\r\n  GetPaypalUserInfo = '/api/v1/users/login/paypal',\r\n  ResetPasswordRequest = '/api/v1/users/reset-password-request',\r\n  ResetPassword = '/api/v1/users/reset-password',\r\n  UsersCountByStatus = '/api/v1/admin/users-by-status/:userStatus:/count',\r\n  UsersByStatus = '/api/v1/admin/users-by-status/:userStatus:',\r\n  UsersByTransaction = '/api/v1/admin/users-by-transaction/:transactionType:',\r\n  UsersByConverted = '/api/v1/admin/users-by-converted/:convertedType:',\r\n  GetUserById = '/api/v1/users/:userId:',\r\n  UpdateUser = '/api/v1/users/update-user',\r\n  DeleteUserById = '/api/v1/admin/users/:userId:',\r\n  UserStats = '/api/v1/users/stats/:userId:',\r\n  SignupType = '/api/v1/users/stats/signup-type',\r\n  SignupCount = '/api/v1/users/stats/signup-count',\r\n  ActiveUsersStats = '/api/v1/users/stats/active-users',\r\n  CreateUser = '/api/v1/users/create-by-admin',\r\n  UnregisterDevice = '/api/v1/users/unregister-apple-device',\r\n}\r\n\r\nexport enum CreditsApi {\r\n  Credits = '/api/v1/credits',\r\n  CreditsByUser = '/api/v1/credits/:userId:',\r\n  CreditsHistoryByUser = '/api/v1/credits/history/:userId:',\r\n  CashoutRequest = '/api/v1/transactions/redeem-coins',\r\n  RedeemedCoins = '/api/v1/transactions/redeemedCoinsData',\r\n  TotalCredits = '/api/v1/credits/total',\r\n  PurchasedCoins = '/api/v1/credits/purchasedCoinsData',\r\n}\r\n\r\nexport enum TournamentsApi {\r\n  GetOccupiedOpenTournaments = '/api/v1/tournament/open/occupied',\r\n  GetOccupiedPublicTournaments = '/api/v1/tournament/public/occupied',\r\n  CreateTournament = '/api/v1/tournament/create',\r\n  ChallengeStats = '/api/v1/tournament/stats/challenge-stats',\r\n  TournamentPerHrStats = '/api/v1/tournament/stats/tournament-per-hour',\r\n  TournamentCountPerType = '/api/v1/tournament/stats/count-per-type',\r\n}\r\n\r\nexport enum ValuesApi {\r\n  Countries = '/api/v1/countries',\r\n  States = '/api/v1/states',\r\n  Games = '/api/v1/games',\r\n}\r\n\r\nexport enum CountriesApi {\r\n  CountriesPaginated = '/api/v1/countries/:page:/:limit:/:order:',\r\n  UpdateCountry = '/api/v1/country/update',\r\n}\r\n\r\nexport enum AdminFunctionsApi {\r\n  MaintenanceStatus = '/api/v1/maintenance',\r\n  RevenueStats = '/api/v1/revenueStats'\r\n}\r\n","export enum EnviromentApi {\r\n  Dev = 'Development',\r\n  Prod = 'Production',\r\n  Local = 'Local'\r\n}\r\n\r\nexport function isEvironmentApiValid(env: string | EnviromentApi): boolean {\r\n  return Object.keys(EnviromentApi).findIndex(key => EnviromentApi[key] === env) >= 0;\r\n}\r\n","export enum EnvironmentApplication {\r\n  Redeem = 'redeem',\r\n  Admin = 'admin',\r\n  Dev = 'local'\r\n}\r\n","export * from './environment-application.enum';\r\nexport * from './environment-api.enum';\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\r\n\r\nexport function EmailValidator(control: AbstractControl) {\r\n  if (control.value.length === 0) {\r\n    return null;\r\n  }\r\n  if (!emailRegex.test(control.value)) {\r\n    return {\r\n      email: true\r\n    };\r\n  }\r\n  return null;\r\n}\r\n","export * from './email.validator';\r\n","import { EnvironmentApplication, EnviromentApi } from 'src/app/shared/constants';\r\n\r\nimport { Environment } from './environment.interface';\r\n\r\n// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const DEFAULT_SECURITY = {\r\n  custom_uid: 'f6d28b7a-407f-4c11-aca4-56e6a2b72900',\r\n  device_type: 'site',\r\n  device_token: 'none'\r\n};\r\n\r\nexport const environmentDefault: Environment = {\r\n  production: false,\r\n  application: EnvironmentApplication.Dev,\r\n  api: [{\r\n    environment: EnviromentApi.Local,\r\n    host: 'http://localhost:3000',\r\n    security: DEFAULT_SECURITY\r\n  }, {\r\n    default: true,\r\n    environment: EnviromentApi.Dev,\r\n    host: 'https://dev.api.duelit.com',\r\n    security: DEFAULT_SECURITY\r\n  }, {\r\n    environment: EnviromentApi.Prod,\r\n    host: 'https://api-dot-duelit-1288.appspot.com',\r\n    // host: 'https://api.duelit.com'\r\n    security: DEFAULT_SECURITY\r\n  }],\r\n  paypal: {\r\n    returnUrl: 'http://127.0.0.1:4200/paypal/user-data',\r\n    apiId: 'Ac-2xq8OnqwFgZ4wJp7BUOADkOTCwHItSeJ4iTfZep7O8PHfiDFj4eW587SgxCpoGbsGi7dA0QXsuYHb', // JP Alvaro - Sandbox\r\n    environment: 'sandbox'\r\n  },\r\n  keenio: {\r\n    projectId: '576d9e9c07271955aad3c825',\r\n    // tslint:disable-next-line: max-line-length\r\n    readKey: '4801d9d377f9ea0aa63b7a72639c2a08aee27a5bf8a068bcc2c8df3b5538fcfac6b27f05709930eab29d2985336214f436548b58c538cfaa493fe2def65a56dc71771cce0ceaa5ab8f2a171337a8b9a4e702325afcec519b2bfbe6330c7f82bc',\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { EnvironmentApplication } from 'src/app/shared/constants';\r\n\r\nimport { environmentDefault } from './environment.default';\r\nimport { Environment } from './environment.interface';\r\n\r\n// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: Environment = {\r\n  ...environmentDefault,\r\n  production: false,\r\n  application: EnvironmentApplication.Admin,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}