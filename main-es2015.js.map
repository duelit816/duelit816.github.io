{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.init.ts","./src/app/app.module.ts","./src/app/core/components/toast-container/toast-container.component.ts","./src/app/core/components/toast-container/toast-container.component.html","./src/app/core/core-routing.module.ts","./src/app/core/core.module.ts","./src/app/core/pages/login/login-page.guard.ts","./src/app/core/pages/login/login-routing.module.ts","./src/app/core/pages/login/login.component.ts","./src/app/core/pages/login/login.component.html","./src/app/core/pages/login/login.module.ts","./src/app/core/services/api.service.ts","./src/app/core/services/login.service.ts","./src/app/core/services/toast.service.ts","./src/app/guards/admin.guard.ts","./src/app/guards/index.ts","./src/app/guards/redeem.guard.ts","./src/app/interceptors/token.interceptor.ts","./src/app/shared/components/core-container/change-env-modal/change-env-modal.component.ts","./src/app/shared/components/core-container/change-env-modal/change-env-modal.component.html","./src/app/shared/components/core-container/core-container.component.ts","./src/app/shared/components/core-container/core-container.component.html","./src/app/shared/components/core-container/core-container.module.ts","./src/app/shared/components/core-container/footer/footer.component.ts","./src/app/shared/components/core-container/footer/footer.component.html","./src/app/shared/components/core-container/header/header.component.ts","./src/app/shared/components/core-container/header/header.component.html","./src/app/shared/components/core-container/index.ts","./src/app/shared/components/panel/index.ts","./src/app/shared/components/panel/panel.component.ts","./src/app/shared/components/panel/panel.component.html","./src/app/shared/components/panel/panel.module.ts","./src/app/shared/constants/api/index.ts","./src/app/shared/constants/environment-api.enum.ts","./src/app/shared/constants/environment-application.enum.ts","./src/app/shared/constants/index.ts","./src/app/shared/validators/email.validator.ts","./src/app/shared/validators/index.ts","./src/environments/environment.default.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '@guards/admin.guard';\r\n\r\nimport { RedeemGuard } from './guards/redeem.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'redeem', loadChildren: () => import('./features/redeem/redeem.module').then(m => m.RedeemModule),\r\n    canActivate: [ RedeemGuard ],\r\n  },\r\n  {\r\n    path: 'paypal/user-data',\r\n    loadChildren: () => import('./features/paypal/paypal.module').then(m => m.PaypalModule),\r\n    canActivate: [ RedeemGuard ]\r\n  },\r\n  { path: 'admin', loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\r\n    canActivate: [ AdminGuard ],\r\n  },\r\n  { path: '', loadChildren: () => import('./core/core.module').then(m => m.CoreModule) },\r\n  { path: '**', pathMatch: 'full', redirectTo: '/login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'admin-redeem-dashboard';\r\n}\r\n","<duelit-core-container>\r\n  <router-outlet></router-outlet>\r\n  <!-- <duelit-panel head=\"boom\">test</duelit-panel> -->\r\n</duelit-core-container>\r\n<duelit-toast-container></duelit-toast-container>\r\n","import { ApiService, SELECTED_ENV } from './core/services/api.service';\r\nimport { EnviromentApi, isEvironmentApiValid } from '@shared/constants';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Provider, APP_INITIALIZER } from '@angular/core';\r\nimport { LoginService } from '@core/services/login.service';\r\n\r\nfunction initSelectedEnvironment(api: ApiService) {\r\n  return () => {\r\n    const preSelected = localStorage.getItem(SELECTED_ENV);\r\n    const defaultApiEnv = environment.api.find(apiEnv => apiEnv.default);\r\n    const env: EnviromentApi = isEvironmentApiValid(preSelected) &&\r\n      environment.api.findIndex(apiEnv => apiEnv.environment === preSelected) >= 0 ? preSelected as EnviromentApi :\r\n      defaultApiEnv ? defaultApiEnv.environment : EnviromentApi.Local;\r\n\r\n    api.selectedEnvApi = env;\r\n  };\r\n}\r\n\r\nconst initUser = (loginService: LoginService) => {\r\n  return () => loginService.Init();\r\n};\r\n\r\nexport const INIT_API_CONFIG: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  useFactory: initSelectedEnvironment,\r\n  deps: [ApiService],\r\n  multi: true\r\n};\r\n\r\nexport const INIT_USER: Provider = {\r\n  provide: APP_INITIALIZER,\r\n  useFactory: initUser,\r\n  multi: true,\r\n  deps: [LoginService]\r\n};\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { INIT_API_CONFIG, INIT_USER } from './app.init';\r\nimport { Guards } from './guards';\r\nimport { INTERCEPTOR_TOKEN } from './interceptors/token.interceptor';\r\nimport { CoreContainerModule } from './shared/components/core-container';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    CoreModule.forRoot(),\r\n    CoreContainerModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    ...Guards,\r\n    CookieService,\r\n    LoginService,\r\n    INIT_API_CONFIG,\r\n    INIT_USER,\r\n    INTERCEPTOR_TOKEN,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport { ToastModel } from '@core/models/toast.model';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'duelit-toast-container',\r\n  templateUrl: './toast-container.component.html',\r\n  styleUrls: ['./toast-container.component.scss']\r\n})\r\nexport class ToastContainerComponent {\r\n  constructor(public toastService: ToastService) {}\r\n  close = faTimes;\r\n\r\n  isTemplate(toast: ToastModel) { return toast.textOrTpl instanceof TemplateRef; }\r\n}\r\n","<ngb-toast\r\n  *ngFor=\"let toast of toastService.toasts\"\r\n  [class]=\"toast.class\"\r\n  [header]=\"toast.header\"\r\n  [autohide]=\"true\"\r\n  [delay]=\"toast.delay || 5000\"\r\n  (hide)=\"toastService.remove(toast)\"\r\n>\r\n  <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n    <button (click)=\"toastService.remove(toast)\" *ngIf=\"toast.dismissible\" [ngClass]=\"toast.class\">\r\n      <fa-icon [icon]=\"close\" class=\"fa-lg\"></fa-icon>\r\n    </button>\r\n    <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n  </ng-template>\r\n\r\n  <ng-template #text>{{ toast.textOrTpl }}\r\n    <button (click)=\"toastService.remove(toast)\" *ngIf=\"toast.dismissible\" [ngClass]=\"toast.class\">\r\n      <fa-icon [icon]=\"close\" class=\"fa-lg\"></fa-icon>\r\n    </button>\r\n  </ng-template>\r\n</ngb-toast>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginPageGuard } from './pages/login/login-page.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', loadChildren: () => import('./pages/login/login.module').then(m => m.LoginModule), canActivate: [LoginPageGuard] },\r\n  {\r\n    path: 'reset-password/:token',\r\n    loadChildren: () => import('./pages/reset-password/reset-password.module').then(m => m.ResetPasswordModule)\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    loadChildren: () => import('./pages/forgot-password/forgot-password.module').then(m => m.ForgotPasswordModule)\r\n  },\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CoreRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbToastModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ToastContainerComponent } from './components/toast-container/toast-container.component';\r\nimport { CoreRoutingModule } from './core-routing.module';\r\nimport { LoginModule } from './pages/login/login.module';\r\nimport { LoginService } from './services/login.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ToastContainerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CoreRoutingModule,\r\n    LoginModule,\r\n    NgbToastModule,\r\n    RouterModule,\r\n    FontAwesomeModule\r\n  ],\r\n  exports: [\r\n    ToastContainerComponent\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        LoginService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoginService } from '../../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginPageGuard implements CanActivate {\r\n  constructor(private login: LoginService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.login.isAuthenticated ? this.login.urlTreeForLoggedUser() : true;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { EmailValidator } from 'src/app/shared/validators';\r\n\r\nimport { LoginService } from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'duelit-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  isLoginInProgress = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginService: LoginService,\r\n    private toast: ToastService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.loginService.isAuthenticated) {\r\n    //   this.loginService.navigateAuthenticatedUser();\r\n    // }\r\n\r\n    this.loginForm = this.fb.group({\r\n      email: new FormControl('', [EmailValidator, Validators.required]),\r\n      password: new FormControl('', [Validators.required, Validators.maxLength(24), Validators.minLength(8)])\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n    const { email, password } = this.loginForm.value;\r\n    if (!this.isLoginInProgress) {\r\n      this.isLoginInProgress = true;\r\n\r\n      this.loginService.login(email, password).subscribe((user) => {\r\n        this.isLoginInProgress = false;\r\n        if (user) {\r\n          // this.loginService.navigateAuthenticatedUser();\r\n          this.toast.success('Successfully logged in.');\r\n          // this.router.navigate(this.loginService.getUrlForLoggedUser());\r\n        } else {\r\n          this.toast.error('Provided credentials are not correct.');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","<duelit-panel head=\"Login\">\r\n  <div class=\"form-group\" [formGroup]=\"loginForm\">\r\n    <input type=\"email\" placeholder=\"Email\" autocomplete=\"off\" class=\"form-control custom\" formControlName=\"email\">\r\n    <ng-container *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\r\n      <span class=\"error\" *ngIf=\"loginForm.get('email').errors.required\">This field is required.</span>\r\n      <span class=\"error\" *ngIf=\"loginForm.get('email').errors.email\">This field must be a valid email address.</span>\r\n    </ng-container>\r\n\r\n\r\n    <input type=\"password\" placeholder=\"Password\" autocomplete=\"off\" class=\"form-control custom\" formControlName=\"password\">\r\n    <ng-container *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\r\n      <span class=\"error\" *ngIf=\"loginForm.get('password').errors.required\">This field is required.</span>\r\n      <span class=\"error\" *ngIf=\"loginForm.get('password').errors.minlength\">This field can not be less than {{loginForm.get('password').errors.minlength.requiredLength}} characters.</span>\r\n      <span class=\"error\" *ngIf=\"loginForm.get('password').errors.maxlength\">This field can be at most {{loginForm.get('password').errors.maxlength.requiredLength}} characters long.</span>\r\n    </ng-container>\r\n\r\n    <button class=\"btn custom primary\" [disabled]=\"loginForm.invalid || isLoginInProgress\" (click)=\"doLogin()\">\r\n      <span *ngIf=\"isLoginInProgress; else login\" class=\"loading\"></span>\r\n      <ng-template #login>Login</ng-template>\r\n    </button>\r\n    <span [routerLink]=\"['/forgot-password']\">Forgot your Password?</span>\r\n  </div>\r\n</duelit-panel>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PanelModule } from 'src/app/shared/components/panel';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    PanelModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EnviromentApi } from '@shared/constants';\r\nimport { ApiSecurity, ApiConfig } from 'src/environments/environment.interface';\r\n\r\nconst DEFAULT_API_DETAILS = {\r\n  query: {},\r\n  opts: {\r\n    addSecurity: true\r\n  }\r\n};\r\n\r\nexport const SELECTED_ENV = 'selectedEnvironment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private _selectedEnvApi: EnviromentApi;\r\n  selectedApiConfig: ApiConfig;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  set selectedEnvApi(value: EnviromentApi) {\r\n    this._selectedEnvApi = value;\r\n    localStorage.setItem(SELECTED_ENV, value);\r\n    this.selectedApiConfig = environment.api.find(config => config.environment === value);\r\n  }\r\n  get selectedEnvApi(): EnviromentApi {\r\n    return this._selectedEnvApi;\r\n  }\r\n\r\n  get baseuri(): string {\r\n    return this.selectedApiConfig.host;\r\n  }\r\n\r\n  get security(): ApiSecurity {\r\n    return this.selectedApiConfig.security;\r\n  }\r\n\r\n  get(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n\r\n    return this.http.get(this.buildRequestUrl(path, details.query));\r\n  }\r\n\r\n  delete(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n\r\n    return this.http.delete(this.buildRequestUrl(path, details.query));\r\n  }\r\n\r\n  post(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n    const opts = {\r\n      ...DEFAULT_API_DETAILS.opts,\r\n      ...details.opts\r\n    };\r\n\r\n    const body = {\r\n      ...details.body\r\n    };\r\n\r\n    if (opts.addSecurity) {\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['custom_uid'] = this.security.custom_uid;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_type'] = this.security.device_type;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_token'] = this.security.device_token;\r\n    }\r\n\r\n\r\n    return this.http.post(this.buildRequestUrl(path, details.query), body);\r\n  }\r\n\r\n  put(path: string, details: ApiDetails = {\r\n    query: {}\r\n  }) {\r\n    const opts = {\r\n      ...DEFAULT_API_DETAILS.opts,\r\n      ...details.opts\r\n    };\r\n\r\n    const body = {\r\n      ...details.body\r\n    };\r\n\r\n    if (opts.addSecurity) {\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['custom_uid'] = this.security.custom_uid;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_type'] = this.security.device_type;\r\n      // tslint:disable-next-line: no-string-literal\r\n      body['device_token'] = this.security.device_token;\r\n    }\r\n\r\n    return this.http.put(this.buildRequestUrl(path, details.query), body);\r\n  }\r\n\r\n  private buildRequestUrl (path: string, query: HttpQuery = {}): string {\r\n    const queries = Object.keys(query).map(key => {\r\n      return `${key}=${query[key]}`;\r\n    });\r\n\r\n    return `${this.baseuri}${path}${queries.length > 0 ? '?' : ''}${queries.join('&')}`;\r\n  }\r\n\r\n  buildPath(path: string, params: (string|number)[] | { [param: string]: string|number } = []): string {\r\n    let _path = path;\r\n\r\n    if (Array.isArray(params)) {\r\n      params.forEach(param => _path = _path.replace(/:.*?:/, `${param}`));\r\n    } else {\r\n      Object.entries(params).forEach(([param, value]) => {\r\n        _path = _path.replace(`:${param}:`, `${value}`);\r\n      });\r\n    }\r\n\r\n    return _path;\r\n  }\r\n}\r\n\r\nexport interface ApiDetails {\r\n  query?: HttpQuery;\r\n  body?: object | Array<any>;\r\n  opts?: {\r\n    addSecurity: boolean;\r\n  };\r\n}\r\n\r\nexport interface HttpQuery { [ key: string ]: string | number; }\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Router, UrlTree } from '@angular/router';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { EnvironmentApplication } from 'src/app/shared/constants';\r\nimport { UsersApi } from 'src/app/shared/constants/api';\r\nimport { UserRole } from 'src/app/core/constants/user-role.enum';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { UserProfileModel } from '../models/user-profile.model';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  isAuthenticated = false;\r\n  // _token: string;\r\n  readonly DUELIT_TOKEN = 'duelitToken';\r\n  readonly DUELIT_ROLE = 'duelitRole';\r\n  user: UserProfileModel;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private zone: NgZone\r\n  ) { }\r\n\r\n  get token(): string {\r\n    return localStorage.getItem(this.DUELIT_TOKEN);\r\n  }\r\n\r\n  set token(token: string) {\r\n    if (token) {\r\n      localStorage.setItem(this.DUELIT_TOKEN, token);\r\n    } else {\r\n      localStorage.removeItem(this.DUELIT_TOKEN);\r\n      localStorage.removeItem(this.DUELIT_ROLE);\r\n    }\r\n  }\r\n\r\n  Init(): Promise<boolean> {\r\n    if (!this.token) {\r\n      this.isAuthenticated = false;\r\n      return Promise.resolve(false);\r\n    }\r\n    return this.api.get(UsersApi.MyProfile).pipe(\r\n      map((result: UserProfileModel) => {\r\n        this.isAuthenticated = !!result.email;\r\n        this.user = {\r\n          ...result,\r\n          role: localStorage.getItem(this.DUELIT_ROLE) as UserRole,\r\n          token: this.token\r\n        };\r\n        return !!result.email;\r\n      }),\r\n      catchError(err => {\r\n        this.isAuthenticated = false;\r\n        return of(false);\r\n      }),\r\n      tap(isAuthenticated => {\r\n        if (!isAuthenticated) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      })\r\n    ).toPromise();\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return this.api.post(UsersApi.Login, { body: { email, password , country: 'United States' } }).pipe(\r\n      map((user: UserProfileModel) => {\r\n        if (!user) {\r\n          this.isAuthenticated = false;\r\n          return false;\r\n        }\r\n        this.user = user;\r\n        this.token = user.token;\r\n        localStorage.setItem(this.DUELIT_ROLE, user.role);\r\n        this.isAuthenticated = true;\r\n        this.router.navigate(this.getUrlForLoggedUser());\r\n        return user;\r\n      }),\r\n      catchError(err => of(false)),\r\n    );\r\n  }\r\n\r\n  getUrlForLoggedUser() {\r\n    return environment.application === EnvironmentApplication.Redeem ? ['/redeem'] : ['/admin'];\r\n  }\r\n\r\n  urlTreeForLoggedUser(): UrlTree {\r\n    return this.router.createUrlTree(this.getUrlForLoggedUser());\r\n  }\r\n\r\n  navigateToHomePage() {\r\n    this.router.navigate(this.getUrlForLoggedUser());\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(this.DUELIT_TOKEN, token);\r\n  }\r\n\r\n  logout() {\r\n    return this.api.post(UsersApi.Logout, {\r\n      body: { device_token: 'none' },\r\n      opts: { addSecurity: false }\r\n    }).pipe(\r\n      map(() => {\r\n        localStorage.removeItem(this.DUELIT_TOKEN);\r\n        localStorage.removeItem(this.DUELIT_ROLE);\r\n        this.router.navigate(['/login']);\r\n        this.isAuthenticated = false;\r\n        this.user = null;\r\n        this.token = null;\r\n        return of({ });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastModel } from '@core/models/toast.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  constructor() { }\r\n\r\n  toasts: ToastModel[] = [];\r\n\r\n  show(toast: ToastModel) {\r\n    this.toasts.push(toast);\r\n  }\r\n\r\n  remove(toast: ToastModel) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n\r\n  success(msg: string) {\r\n    this.toasts.push({\r\n      class: 'success',\r\n      textOrTpl: msg\r\n    });\r\n  }\r\n\r\n  error(msg: string) {\r\n    this.toasts.push({\r\n      class: 'danger',\r\n      textOrTpl: msg\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private toast: ToastService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      const isAdmin = this.loginService.user.role === 'admin';\r\n\r\n      if (!isAdmin) {\r\n        this.toast.error('You have been logged out. You must be an admin to access this page.');\r\n        this.loginService.logout().subscribe(() => { });\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n  }\r\n}\r\n","import { RedeemGuard } from './redeem.guard';\r\n\r\nexport const Guards = [\r\n  RedeemGuard\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../core/services/login.service';\r\n\r\n@Injectable()\r\nexport class RedeemGuard implements CanActivate {\r\n  constructor (\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      // return true;\r\n      if (this.loginService.isAuthenticated) {\r\n        return true;\r\n      }\r\n      return this.router.createUrlTree(['login']);\r\n  }\r\n\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable, Provider } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoginService } from '../core/services/login.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let modifiedReq = request;\r\n    const exemptedApis = [/reset-password-request/, /api\\.keen\\.io/];\r\n    const isExempted = exemptedApis.findIndex((regex) => regex.test(request.url)) >= 0;\r\n\r\n    if (this.loginService.token && !isExempted) {\r\n      modifiedReq = request.clone({\r\n        headers: request.headers.set('token', this.loginService.token),\r\n      });\r\n    }\r\n\r\n    return next.handle(modifiedReq);\r\n  }\r\n}\r\n\r\nexport const INTERCEPTOR_TOKEN: Provider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: TokenInterceptor,\r\n  multi: true,\r\n  deps: [LoginService]\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { EnviromentApi } from '@shared/constants';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'duelit-change-env-modal',\r\n  templateUrl: './change-env-modal.component.html',\r\n  styleUrls: ['./change-env-modal.component.scss']\r\n})\r\nexport class ChangeEnvModalComponent implements OnInit {\r\n  selected: EnviromentApi;\r\n  constructor(\r\n    public modal: NgbActiveModal,\r\n    private api: ApiService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.selected = this.api.selectedEnvApi;\r\n  }\r\n\r\n  getEnvironments(): EnviromentApi[] {\r\n    return environment.api\r\n      .filter(config => config.environment !== this.api.selectedEnvApi)\r\n      .map(config => config.environment);\r\n  }\r\n\r\n  getSelectedEnvironment(): EnviromentApi {\r\n    return this.api.selectedEnvApi;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Change Environment</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss({ action: 'cancel' })\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>You will be logged out when you change the environment.</p>\r\n  <div class=\"flex flex--space-between choice-container\">\r\n    <div class=\"choice\">\r\n      <strong>From</strong>\r\n      {{ this.getSelectedEnvironment() }}\r\n    </div>\r\n    <div class=\"choice\">\r\n      <strong>To</strong>\r\n      <div ngbDropdown class=\"d-inline-block\">\r\n        <button class=\"btn btn-outline-primary\" ngbDropdownToggle>{{ selected === getSelectedEnvironment() ? 'No Change' : selected }}</button>\r\n        <div ngbDropdownMenu>\r\n          <button ngbDropdownItem (click)=\"selected = getSelectedEnvironment()\">{{ this.getSelectedEnvironment() }}</button>\r\n          <button ngbDropdownItem *ngFor=\"let env of getEnvironments()\" (click)=\"selected = env\">{{env}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss({ action: 'cancel' })\">Cancel</button>\r\n  <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close({\r\n    action: 'ok',\r\n    environment: this.selected\r\n  })\">Ok</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EnvironmentApplication } from '@shared/constants';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'duelit-core-container',\r\n  templateUrl: './core-container.component.html',\r\n  styleUrls: ['./core-container.component.scss']\r\n})\r\nexport class CoreContainerComponent implements OnInit {\r\n\r\n  constructor(\r\n    public loginService: LoginService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    return this.loginService.isAuthenticated;\r\n  }\r\n\r\n  doLogout() {\r\n    this.loginService.logout().subscribe(() => { });\r\n  }\r\n\r\n  onLogoClick() {\r\n    this.loginService.navigateToHomePage();\r\n  }\r\n\r\n  isRedeem() {\r\n    return environment.application === EnvironmentApplication.Redeem;\r\n  }\r\n}\r\n","<duelit-header [authenticated]=\"isAuthenticated\" [firstName]=\"loginService.user?.firstName\"\r\n  (logout)=\"doLogout()\" (logoClicked)=\"onLogoClick()\"></duelit-header>\r\n<div class=\"container\">\r\n  <div class=\"center-container\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n<duelit-footer *ngIf=\"isRedeem()\"></duelit-footer>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { CoreContainerComponent } from './core-container.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ChangeEnvModalComponent } from './change-env-modal/change-env-modal.component';\r\nimport { NgbModalModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CoreContainerComponent, HeaderComponent, FooterComponent, ChangeEnvModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    FontAwesomeModule,\r\n    RouterModule,\r\n    NgbModalModule,\r\n    NgbDropdownModule,\r\n  ],\r\n  exports: [CoreContainerComponent]\r\n})\r\nexport class CoreContainerModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { faFacebookF, faInstagram, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'duelit-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  icons = {\r\n    facebook: faFacebookF,\r\n    twitter: faTwitter,\r\n    instagram: faInstagram,\r\n    email: faEnvelope\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n  <div class=\"duelit-links\">\r\n    <span><a href=\"https://duelit.com/terms-and-conditions/\">TERMS &amp; CONDITIONS</a></span>\r\n    <span><a href=\"https://duelit.com/privacy-policy/\">PRIVACY POLICY</a></span>\r\n    <span><a href=\"https://duelit.com/faq/\">FAQ</a></span>\r\n  </div>\r\n\r\n  <div class=\"social-medias\">\r\n    <a href=\"https://bit.ly/2wPRRat\" target=\"_blank\"><fa-icon class=\"fa-lg\" [icon]=\"icons.facebook\"></fa-icon></a>\r\n    <a href=\"https://bit.ly/2iDzlvr\" target=\"_blank\"><fa-icon class=\"fa-lg\" [icon]=\"icons.twitter\"></fa-icon></a>\r\n    <a href=\"https://bit.ly/2vHjLjJ\" target=\"_blank\"><fa-icon class=\"fa-lg\" [icon]=\"icons.instagram\"></fa-icon></a>\r\n    <a href=\"mailto:contact@duelit.com?Subject=Website%20Feedback\" rel=\"nofollow\"><fa-icon class=\"fa-lg\" [icon]=\"icons.email\"></fa-icon></a>\r\n  </div>\r\n\r\n  <div class=\"copyright\">\r\n    © 2020 Play & Earn Inc. All rights reserved.\r\n  </div>\r\n</footer>\r\n","import { Component, EventEmitter, HostBinding, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { EnvironmentApplication, EnviromentApi } from '@shared/constants';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChangeEnvModalComponent } from '../change-env-modal/change-env-modal.component';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { ApiService } from '@core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'duelit-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() authenticated = false;\r\n  @Input() firstName: string;\r\n  @Output() readonly logout = new EventEmitter();\r\n  @Output() readonly logoClicked = new EventEmitter();\r\n  private _innerWidth: number;\r\n  menu = faBars;\r\n  // isMenuOpened = false;\r\n  readonly WIDE_SCREEN_LIMIT = 768;\r\n\r\n  _navList = [{\r\n    name: 'Redeem',\r\n    path: ['/redeem'],\r\n    env: EnvironmentApplication.Redeem\r\n  }, {\r\n    name: 'Dashboard',\r\n    path: ['/admin/dashboard'],\r\n    env: EnvironmentApplication.Admin\r\n  }, {\r\n    name: 'Users',\r\n    path: ['/admin/users'],\r\n    env: EnvironmentApplication.Admin\r\n  }, {\r\n    name: 'Tournaments',\r\n    path: ['/admin/tournaments'],\r\n    env: EnvironmentApplication.Admin\r\n  }, {\r\n    name: 'Countries',\r\n    path: ['/admin/countries'],\r\n    env: EnvironmentApplication.Admin\r\n  }];\r\n\r\n  get navList() {\r\n    if (environment.application === EnvironmentApplication.Dev) {\r\n      return this._navList;\r\n    }\r\n    return this._navList.filter(nav => nav.env === environment.application);\r\n  }\r\n\r\n  get innerWidth(): number {\r\n    return this._innerWidth;\r\n  }\r\n  set innerWidth(width) {\r\n    if (width >= this.WIDE_SCREEN_LIMIT) {\r\n      this.isMenuOpened = false;\r\n    }\r\n    this._innerWidth = width;\r\n  }\r\n  @HostBinding('class.opened-menu') isMenuOpened: boolean;\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize($event: number) {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private loginService: LoginService,\r\n    private api: ApiService\r\n  ) {\r\n    this.isMenuOpened = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  doLogout() {\r\n    this.logout.emit();\r\n  }\r\n\r\n  isEnvironmentAdmin(): boolean {\r\n    return environment.application === EnvironmentApplication.Admin || environment.application === EnvironmentApplication.Dev;\r\n  }\r\n\r\n  openChangeEnv() {\r\n    const modal = this.modalService.open(ChangeEnvModalComponent);\r\n\r\n    modal.result.then(({ action, environment: env }) => {\r\n      if (action === 'ok' && env !== this.api.selectedEnvApi) {\r\n        if (this.loginService.isAuthenticated) {\r\n          this.loginService.logout().subscribe(() => {\r\n            this.api.selectedEnvApi = env;\r\n          });\r\n        } else {\r\n          this.api.selectedEnvApi = env;\r\n        }\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      return;\r\n    });\r\n  }\r\n\r\n  isEnvirontmentApiProd(): boolean {\r\n    return this.api.selectedEnvApi === EnviromentApi.Prod;\r\n  }\r\n\r\n  getSelectedEnv(): EnviromentApi {\r\n    return this.api.selectedEnvApi;\r\n  }\r\n}\r\n","<header class=\"container\" [class.opened]=\"isMenuOpened\">\r\n  <div class=\"center-container flex-align-center\">\r\n    <div class=\"title-logo-container\">\r\n      <img src=\"assets/img/dingding-logo.png\" class=\"logo\" (click)=\"logoClicked.emit()\"/>\r\n      <span class=\"title\">Duelit</span>\r\n      <span class=\"title\" *ngIf=\"!isEnvirontmentApiProd()\" style=\"font-size: 1em;\">[{{getSelectedEnv()}}]</span>\r\n      <span class=\"title\" (click)=\"openChangeEnv()\" style=\"font-size: 1em; cursor: pointer\">Change Env</span>\r\n    </div>\r\n\r\n    <div class=\"flex-align-center\">\r\n      <ng-container *ngIf=\"innerWidth < WIDE_SCREEN_LIMIT; else wideScreen\">\r\n        <ng-container *ngIf=\"authenticated\">\r\n          <button class=\"welcome\" (click)=\"isMenuOpened = !isMenuOpened;\"><fa-icon class=\"fa-lg\" [icon]=\"menu\"></fa-icon></button>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <ng-template #wideScreen>\r\n        <ng-container *ngIf=\"authenticated; else login\">\r\n          <button class=\"welcome\" *ngFor=\"let navItem of navList\" [routerLink]=\"navItem.path\" routerLinkActive=\"active-route\">{{navItem.name}}</button>\r\n\r\n          <button class=\"welcome\" [matMenuTriggerFor]=\"menu\">\r\n            Welcome {{firstName}}\r\n            <span class=\"caret\"></span>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n            <!-- <button mat-menu-item>Profile</button> -->\r\n            <button mat-menu-item [routerLink]=\"['/admin/profile']\" *ngIf=\"isEnvironmentAdmin()\">Profile</button>\r\n            <button mat-menu-item [routerLink]=\"['/admin/users/create']\" *ngIf=\"isEnvironmentAdmin()\">Create User</button>\r\n            <button mat-menu-item [routerLink]=\"['/admin/app-control']\" *ngIf=\"isEnvironmentAdmin()\">Application Control</button>\r\n            <button mat-menu-item (click)=\"openChangeEnv()\" *ngIf=\"isEnvironmentAdmin()\">Change Env</button>\r\n            <button mat-menu-item (click)=\"doLogout()\">Logout</button>\r\n          </mat-menu>\r\n\r\n        </ng-container>\r\n        <ng-template #login>\r\n          <button class=\"welcome\" [routerLink]=\"['/login']\">Login</button>\r\n        </ng-template>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</header>\r\n<div *ngIf=\"innerWidth < WIDE_SCREEN_LIMIT && isMenuOpened\" class=\"menu-container\" (blur)=\"isMenuOpened=false\" tabindex=\"-1\" #menuContainer autofocus>\r\n  <ng-container *ngIf=\"authenticated; else mobileLogin\">\r\n    <div *ngFor=\"let navItem of navList\" class=\"menu-item\" [class.opened]=\"!isMenuOpened\" (click)=\"isMenuOpened = false\" [routerLink]=\"navItem.path\" routerLinkActive=\"active-route\">\r\n      {{navItem.name}}\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" [routerLink]=\"['/admin/profile']\" (click)=\"isMenuOpened = false\">\r\n      Profile\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" [routerLink]=\"['/admin/users/create']\" (click)=\"isMenuOpened = false\">\r\n      Create User\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" [routerLink]=\"['/admin/app-control']\" (click)=\"isMenuOpened = false\">\r\n      Application Control\r\n    </div>\r\n    <div class=\"menu-item logout\" *ngIf=\"isEnvironmentAdmin()\" [class.opened]=\"!isMenuOpened\" (click)=\"isMenuOpened = false; openChangeEnv()\">\r\n      Change Env\r\n    </div>\r\n    <div class=\"menu-item logout\" [class.opened]=\"!isMenuOpened\" (click)=\"doLogout(); isMenuOpened = false\">\r\n      Logout\r\n    </div>\r\n    <div class=\"menu-hidden\" (click)=\"isMenuOpened = false\"></div>\r\n  </ng-container>\r\n  <ng-template #mobileLogin>\r\n    <div class=\"menu-item logout\" [class.opened]=\"!isMenuOpened\" (click)=\"isMenuOpened = false\" [routerLink]=\"['/login']\">\r\n      Login\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n","export * from './core-container.component';\r\nexport * from './core-container.module';\r\n","export * from './panel.component';\r\nexport * from './panel.module';\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.scss']\r\n})\r\nexport class PanelComponent implements OnInit {\r\n  @Input() head?: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"head\">\r\n  <div class=\"panel-heading\">\r\n    {{head}}\r\n  </div>\r\n  <div class=\"divider\"></div>\r\n</ng-container>\r\n<div class=\"panel-body\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PanelComponent } from './panel.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PanelComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    PanelComponent\r\n  ]\r\n})\r\nexport class PanelModule { }\r\n","export enum UsersApi {\r\n  ValidateToken = '/api/v1/users/validate-token/:token:',\r\n  MyProfile = '/api/v1/users/me',\r\n  Login = '/api/v1/users/login',\r\n  Logout = '/api/v1/users/logout',\r\n  GetPaypalUserInfo = '/api/v1/users/login/paypal',\r\n  ResetPasswordRequest = '/api/v1/users/reset-password-request',\r\n  ResetPassword = '/api/v1/users/reset-password',\r\n  UsersCountByStatus = '/api/v1/admin/users-by-status/:userStatus:/count',\r\n  UsersByStatus = '/api/v1/admin/users-by-status/:userStatus:',\r\n  UsersByTransaction = '/api/v1/admin/users-by-transaction/:transactionType:',\r\n  UsersByConverted = '/api/v1/admin/users-by-converted/:convertedType:',\r\n  GetUserById = '/api/v1/users/:userId:',\r\n  UpdateUser = '/api/v1/users/update-user',\r\n  DeleteUserById = '/api/v1/admin/users/:userId:',\r\n  UserStats = '/api/v1/users/stats/:userId:',\r\n  SignupType = '/api/v1/users/stats/signup-type',\r\n  SignupCount = '/api/v1/users/stats/signup-count',\r\n  ActiveUsersStats = '/api/v1/users/stats/active-users',\r\n  CreateUser = '/api/v1/users/create-by-admin',\r\n  UnregisterDevice = '/api/v1/users/unregister-apple-device',\r\n}\r\n\r\nexport enum CreditsApi {\r\n  Credits = '/api/v1/credits',\r\n  CreditsByUser = '/api/v1/credits/:userId:',\r\n  CreditsHistoryByUser = '/api/v1/credits/history/:userId:',\r\n  CashoutRequest = '/api/v1/transactions/redeem-coins',\r\n  RedeemedCoins = '/api/v1/transactions/redeemedCoinsData',\r\n  TotalCredits = '/api/v1/credits/total',\r\n  PurchasedCoins = '/api/v1/credits/purchasedCoinsData',\r\n}\r\n\r\nexport enum TournamentsApi {\r\n  GetOccupiedOpenTournaments = '/api/v1/tournament/open/occupied',\r\n  GetOccupiedPublicTournaments = '/api/v1/tournament/public/occupied',\r\n  CreateTournament = '/api/v1/tournament/create',\r\n  ChallengeStats = '/api/v1/tournament/stats/challenge-stats',\r\n  TournamentPerHrStats = '/api/v1/tournament/stats/tournament-per-hour',\r\n  TournamentCountPerType = '/api/v1/tournament/stats/count-per-type',\r\n}\r\n\r\nexport enum ValuesApi {\r\n  Countries = '/api/v1/countries',\r\n  States = '/api/v1/states',\r\n  Games = '/api/v1/games',\r\n}\r\n\r\nexport enum CountriesApi {\r\n  CountriesPaginated = '/api/v1/countries/:page:/:limit:/:order:',\r\n  UpdateCountry = '/api/v1/country/update',\r\n}\r\n\r\nexport enum AdminFunctionsApi {\r\n  MaintenanceStatus = '/api/v1/maintenance',\r\n  RevenueStats = '/api/v1/revenueStats'\r\n}\r\n","export enum EnviromentApi {\r\n  Dev = 'Development',\r\n  Prod = 'Production',\r\n  Local = 'Local'\r\n}\r\n\r\nexport function isEvironmentApiValid(env: string | EnviromentApi): boolean {\r\n  return Object.keys(EnviromentApi).findIndex(key => EnviromentApi[key] === env) >= 0;\r\n}\r\n","export enum EnvironmentApplication {\r\n  Redeem = 'redeem',\r\n  Admin = 'admin',\r\n  Dev = 'local'\r\n}\r\n","export * from './environment-application.enum';\r\nexport * from './environment-api.enum';\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\r\n\r\nexport function EmailValidator(control: AbstractControl) {\r\n  if (control.value.length === 0) {\r\n    return null;\r\n  }\r\n  if (!emailRegex.test(control.value)) {\r\n    return {\r\n      email: true\r\n    };\r\n  }\r\n  return null;\r\n}\r\n","export * from './email.validator';\r\n","import { EnvironmentApplication, EnviromentApi } from 'src/app/shared/constants';\r\n\r\nimport { Environment } from './environment.interface';\r\n\r\n// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const DEFAULT_SECURITY = {\r\n  custom_uid: 'f6d28b7a-407f-4c11-aca4-56e6a2b72900',\r\n  device_type: 'site',\r\n  device_token: 'none'\r\n};\r\n\r\nexport const environmentDefault: Environment = {\r\n  production: false,\r\n  application: EnvironmentApplication.Dev,\r\n  api: [{\r\n    environment: EnviromentApi.Local,\r\n    host: 'http://localhost:3000',\r\n    security: DEFAULT_SECURITY\r\n  }, {\r\n    default: true,\r\n    environment: EnviromentApi.Dev,\r\n    host: 'https://dev.api.duelit.com',\r\n    security: DEFAULT_SECURITY\r\n  }, {\r\n    environment: EnviromentApi.Prod,\r\n    host: 'https://api-dot-duelit-1288.appspot.com',\r\n    // host: 'https://api.duelit.com'\r\n    security: DEFAULT_SECURITY\r\n  }],\r\n  paypal: {\r\n    returnUrl: 'http://127.0.0.1:4200/paypal/user-data',\r\n    apiId: 'Ac-2xq8OnqwFgZ4wJp7BUOADkOTCwHItSeJ4iTfZep7O8PHfiDFj4eW587SgxCpoGbsGi7dA0QXsuYHb', // JP Alvaro - Sandbox\r\n    environment: 'sandbox'\r\n  },\r\n  keenio: {\r\n    projectId: '576d9e9c07271955aad3c825',\r\n    // tslint:disable-next-line: max-line-length\r\n    readKey: '4801d9d377f9ea0aa63b7a72639c2a08aee27a5bf8a068bcc2c8df3b5538fcfac6b27f05709930eab29d2985336214f436548b58c538cfaa493fe2def65a56dc71771cce0ceaa5ab8f2a171337a8b9a4e702325afcec519b2bfbe6330c7f82bc',\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { EnvironmentApplication } from 'src/app/shared/constants';\r\n\r\nimport { environmentDefault } from './environment.default';\r\nimport { Environment } from './environment.interface';\r\n\r\n// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: Environment = {\r\n  ...environmentDefault,\r\n  production: false,\r\n  application: EnvironmentApplication.Admin,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}