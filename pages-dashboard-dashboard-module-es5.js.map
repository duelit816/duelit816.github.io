{"version":3,"sources":["webpack:///src/app/features/admin/components/keen/keen.component.ts","webpack:///src/app/features/admin/components/keen/keen.component.html","webpack:///src/app/features/admin/components/keen/keen.module.ts","webpack:///src/app/features/admin/directives/keen-data/keen-data.directive.ts","webpack:///src/app/features/admin/directives/keen-data/keen-data.module.ts","webpack:///src/app/features/admin/pages/dashboard/app-data/app-data.component.ts","webpack:///src/app/features/admin/pages/dashboard/app-data/app-data.component.html","webpack:///src/app/features/admin/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/features/admin/pages/dashboard/dashboard.component.ts","webpack:///src/app/features/admin/pages/dashboard/dashboard.component.html","webpack:///src/app/features/admin/pages/dashboard/dashboard.module.ts","webpack:///src/app/features/admin/pages/dashboard/finance/finance.component.ts","webpack:///src/app/features/admin/pages/dashboard/finance/finance.component.html","webpack:///src/app/features/admin/pages/dashboard/realtime/realtime.component.ts","webpack:///src/app/features/admin/pages/dashboard/realtime/realtime.component.html","webpack:///src/app/shared/components/table/table.component.ts","webpack:///src/app/shared/components/table/table.component.html","webpack:///src/app/shared/components/table/table.module.ts","webpack:///src/app/shared/directives/ngbd-sortable-header/ngbd-sortable-header.directive.ts","webpack:///src/app/shared/directives/ngbd-sortable-header/ngbd-sortable-header.module.ts"],"names":["KeenComponent","loading","viewInit","selector","templateUrl","styleUrls","KeenModule","declarations","imports","exports","KeenDataDirective","el","renderer","keen","addClass","nativeElement","query","innerHTML","doQuery","chart","container","duelitkeenname","title","viewType","type","legend","pagination","limit","labelMapping","eventCollection","Array","queryType","then","keenResult","setTimeout","isCombined","apiResult","result","find","x","subscribe","forEach","push","count","render","catch","error","message","queries","timeframe","timezone","run","response","chartData","KeenDataModule","START_DATE","subtract","format","END_DATE","AppDataComponent","api","dashboardDate","router","numberPipe","gamesQueries","keenname","groupBy","start","end","interval","filters","property_name","operator","property_value","engagement1Queries","engagement3Queries","engagement4Queries","signupRatioStats$","classSelector","challengeRatioStats$","txnOnInsufficientFundsRatio$","ngUnsubscribe","FAILED_TO_RETRIEVE","rangeDate","range","valueChanges","pipe","value","date$","from","to","startDate","year","month","date","day","endDate","getRevenueStats","getSignupTypeStats","getSignupCountStats","getSignupRatioStats","getActiveUsersStats","getChallengeStats","getTxnOnInsufficientFunds","getCreatedChallengePerHrStats","getCompletedChallengePerHrStats","getCompletedTournamentPerHrStats","getTournamentCountPerType","getChallengeRatioStats","getTxnOnInsufficientFundsRatio","getUserStats","updateQueries","next","complete","revenueStats$","get","RevenueStats","start_date","end_date","err","revenueData","data","length","duelitRevenue","reduce","r","i","duelit_revenue","playerRevenue","player_revenue","revenueByUserType","revenueByUserTypePercentage","revenueByGame","map","game","signupTypeStats$","SignupType","facebook","apple","email","Object","keys","key","charAt","toUpperCase","slice","signupType","signupCountStats$","SignupCount","name","subTitle","transform","signups","ActivatedSignupCount","activated","signupStats","pendingCount","replace","activeUsersStats$","ActiveUsersStats","active_users_count","challengeStats$","ChallengeStats","cancelled","completed","convertedUrl","buildPath","UsersByConverted","txnOnInsufficientFunds$","convertedResult","churnedUrl","churnedResult","totalCount","createdChallengePerHrStats$","TournamentPerHrStats","challengePerHr","xAxisLabel","yAxisLabel","completedChallengePerHrStats$","status","completedTournamentPerHrStats$","tournamentPerHr","tournamentCountPerType$","TournamentCountPerType","challengeStats","txnOnInsufficientFunds","bannedUsersCountApi","UsersCountByStatus","userStats$","text","q","details","getValue","navigate","queryParams","created_start_date","created_end_date","not_status","Banned","transaction","RedeemCoinsRequest","last_active_start_date","last_active_end_date","convertedType","updateDate","routes","path","component","DashboardRoutingModule","forChild","DashboardComponent","activeTab","DashboardModule","providers","FinanceComponent","toast","currencyPipe","totalCredits$","TotalCredits","totalCoins","giftedCoins","getRedeemedStats","getTotalProfitStats","productsSold$","PurchasedCoins","statusText","amount","res","PurchasedCount","Number","redeemedStats$","RedeemedCoins","totalAmount","playerCount","dollarFormat","coins","dollar","parseInt","Math","floor","e","console","log","RedeemCount","class","redeemDollar","redeemStats","productSold","totalDollarPurchase","accumulator","p","totalProfit","totalProfitStats$","Transaction","RealtimeComponent","POLL_INTERVAL","timer$","_stop","_start","tableHeadersMapping","t","openTournaments$","GetOccupiedOpenTournaments","restartTimer","tournaments","getTournamentListByStatus","mapTimeLeft","list","filter","tournamentId","startedTournamentId","tournamentList","now","startTime","timer","startAt","diff","minLeft","minutes","secLeft","seconds","totalSecs","time_left","compare","v1","v2","TableComponent","headerMapping","sort","sortDirection","tableName","temp","split","String","column","direction","headers","header","duelitSortable","sortColumn","row","getData","a","b","indexOfSortedCol","indexOf","TableModule","rotate","asc","desc","NgbdSortableHeaderDirective","emit","NgbdSortableHeaderModule"],"mappings":"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","file":"pages-dashboard-dashboard-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-keen',\r\n  templateUrl: './keen.component.html',\r\n  styleUrls: ['./keen.component.scss']\r\n})\r\nexport class KeenComponent implements OnInit  {\r\n  loading = true;\r\n  viewInit = false;\r\n  @Input() title: string;\r\n  @Input() keenName: string;\r\n  @Input() viewType: string;\r\n  @Input() queryType: string;\r\n  @Input() query: any;\r\n  @Input() subTitle?: string;\r\n  @Input() isCombined?: boolean;\r\n  @Input() apiResult?: any;\r\n\r\n  constructor(\r\n    // private el: ElementRef,\r\n    // private renderer: Renderer2,\r\n    // private keen: KeenIoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<h6>{{title}}</h6>\r\n<!-- <ng-container *ngIf=\"keenName\"> -->\r\n<div duelitKeenData\r\n  [duelitkeenname]=\"keenName\"\r\n  [viewType]=\"viewType\"\r\n  [queryType]=\"queryType\"\r\n  [query]=\"query\"\r\n  [title]=\"subTitle\"\r\n  class=\"duelit-keen-data\"\r\n  [ngClass]=\"keenName\"\r\n  [isCombined]=\"isCombined\"\r\n  [apiResult]=\"apiResult\"\r\n  [class.metric]=\"viewType === 'metric'\"></div>\r\n<!-- </ng-container> -->\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { KeenDataModule } from '../../directives/keen-data/keen-data.module';\r\nimport { KeenComponent } from './keen.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [KeenComponent],\r\n  imports: [\r\n    CommonModule,\r\n    KeenDataModule\r\n  ],\r\n  exports: [\r\n    KeenComponent\r\n  ]\r\n})\r\nexport class KeenModule { }\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnInit, Renderer2 } from '@angular/core';\r\nimport { Dataviz } from 'keen-dataviz';\r\n\r\nimport { KeenIoService } from '../../services/keen-io.service';\r\n\r\n@Directive({\r\n  selector: '[duelitKeenData]'\r\n})\r\nexport class KeenDataDirective implements OnChanges, OnInit, AfterViewInit {\r\n  viewInit = false;\r\n  loading = true;\r\n  @Input() duelitkeenname: string;\r\n  @Input() viewType: string;\r\n  @Input() queryType: string;\r\n  @Input() query: any;\r\n  @Input() title?: string;\r\n  @Input() isCombined?: any;\r\n  @Input() apiResult?: any;\r\n  chart;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private keen: KeenIoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.renderer.addClass(this.el.nativeElement, 'duelit-keen-data');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.query && this.viewInit) {\r\n      this.el.nativeElement.innerHTML = `<span class=\"duelit-keen-data loading\"></span>`;\r\n      this.doQuery();\r\n    }\r\n  }\r\n\r\n  doQuery() {\r\n    this.el.nativeElement.innerHTML = `<span class=\"duelit-keen-data loading\"></span>`;\r\n\r\n    this.chart = new Dataviz({\r\n      container: `.${this.duelitkeenname}`,\r\n      title: this.viewType === 'metric' ? this.title : false,\r\n      type: this.viewType,\r\n      legend: {\r\n        pagination: {\r\n          limit: 10\r\n        }\r\n      },\r\n      labelMapping: {\r\n        \"Regular\": \"Challenge\",\r\n        \"Open\": \"Tournament\",\r\n        \"Practice game\": \"Practice\",\r\n      }\r\n    });\r\n\r\n    if (!(this.query.eventCollection instanceof Array)) {\r\n      this.loading = true;\r\n      this.keen.query(this.queryType, this.query)\r\n        .then((keenResult) => {\r\n          setTimeout(() => {\r\n            if (this.isCombined && this.apiResult) {\r\n              keenResult[\"result\"] = [(keenResult as any).result.find((x) => x[\"Game.type\"] === \"Practice game\")];\r\n              this.apiResult.subscribe(apiResult => {\r\n                apiResult.forEach((x) => {\r\n                  keenResult[\"result\"].push({\"Game.type\": x.type, result: x.count})\r\n                });\r\n                this.chart.render(keenResult);\r\n              });\r\n            } else {\r\n              this.chart.render(keenResult);\r\n            }\r\n          });\r\n          this.loading = false;\r\n        })\r\n        .catch((error) => {\r\n          setTimeout(() => {\r\n            this.chart.message(error.message);\r\n          });\r\n          this.loading = false;\r\n        });\r\n    } else {\r\n      const queries = [];\r\n      this.query.eventCollection.forEach((eventCollection) => {\r\n        queries.push(this.keen.query(this.queryType, {\r\n          eventCollection,\r\n          timeframe: this.query.timeframe,\r\n          timezone: 'UTC',\r\n        }));\r\n      });\r\n      this.keen.run(queries).then((response) => {\r\n        const chartData = [];\r\n        chartData.push({\r\n          type: \"Accepted\",\r\n          result: response[1].result\r\n        }, {\r\n          type: \"Rejected\",\r\n          result: response[0].result - response[1].result\r\n        })\r\n        this.chart.render({\r\n          query: {\r\n            timeframe: this.query.timeframe,\r\n            timezone: 'UTC',\r\n          },\r\n          result: chartData\r\n        });\r\n      })\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.viewInit = true;\r\n    this.doQuery();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { KeenDataDirective } from './keen-data.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [KeenDataDirective],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [KeenDataDirective]\r\n})\r\nexport class KeenDataModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { DatePickerRangeModel } from '@shared/components/date-picker-range/date-picker-range.model';\r\nimport { UsersApi, AdminFunctionsApi } from '@shared/constants/api';\r\nimport * as moment from 'moment';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, takeUntil, mergeMap } from 'rxjs/operators';\r\n\r\nimport { KeenInput } from '../../../components/keen/keen-input.model';\r\nimport { MetricInputModel } from '../../../components/metric/metric.model';\r\nimport { DashboardDateService } from '../../../services/dashboard-date.service';\r\nimport { UserStatus, TransactionType, DATE_FORMAT, ChartName } from '@core/constants';\r\nimport { ngbDateToMoment } from '@shared/functions/date.util';\r\nimport { TournamentsApi } from '../../../../../shared/constants/api/index';\r\n\r\nconst START_DATE = moment().subtract(6, 'days').format(DATE_FORMAT);\r\nconst END_DATE = moment().format(DATE_FORMAT);\r\n\r\n@Component({\r\n  selector: 'duelit-app-data',\r\n  templateUrl: './app-data.component.html',\r\n  styleUrls: ['./app-data.component.scss']\r\n})\r\nexport class AppDataComponent implements OnInit, OnDestroy {\r\n  gamesQueries: KeenInput[] = [{\r\n    title: 'Daily Games',\r\n    keenname: 'daily-games',\r\n    viewType: 'line',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Game played',\r\n      groupBy: 'Game.name',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n      interval: 'daily',\r\n      filters: [{\r\n        property_name: 'Game.name',\r\n        operator: 'ne',\r\n        property_value: null,\r\n      }]\r\n    }\r\n  }, {\r\n    title: 'Games Per Type',\r\n    keenname: 'games-per-type',\r\n    viewType: 'pie',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Game played',\r\n      groupBy: 'Game.type',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    },\r\n    isCombined: true\r\n  }];\r\n\r\n  engagement1Queries: KeenInput[] = [{\r\n    title: 'Total Challenges',\r\n    keenname: 'challenges-total',\r\n    viewType: 'metric',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Challenge created',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }, {\r\n    title: 'Accepted Challenges',\r\n    keenname: 'challenges-accepted',\r\n    viewType: 'metric',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Challenge accepted',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }, {\r\n    title: 'Challenge Ratio',\r\n    keenname: 'challenge-ratio',\r\n    viewType: 'pie',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: ['Challenge created', 'Challenge accepted'],\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }];\r\n\r\n  engagement3Queries: KeenInput[] = [{\r\n    title: 'Total App Launched',\r\n    keenname: 'app-launced-total',\r\n    viewType: 'metric',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'App launched',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n    }\r\n  }];\r\n\r\n  engagement4Queries: KeenInput[] = [{\r\n    title: 'Games Per OS',\r\n    keenname: 'games-per-os',\r\n    viewType: 'pie',\r\n    queryType: 'count',\r\n    query: {\r\n      eventCollection: 'Game played',\r\n      groupBy: 'Device.OS',\r\n      timeframe: {\r\n        start: START_DATE,\r\n        end: END_DATE\r\n      },\r\n      filters: [{\r\n        property_name: 'Device.OS',\r\n        operator: 'exists',\r\n        property_value: true,\r\n      }]\r\n    }\r\n  }];\r\n\r\n  revenueStats$: Observable<any>;\r\n  signupTypeStats$: Observable<any>;\r\n  signupCountStats$: Observable<any>;\r\n  signupRatioStats$: any = {\r\n    title: \"Signup Ratio\",\r\n    classSelector: \"signup-ratio\",\r\n    viewType: \"pie\"\r\n  };\r\n  activeUsersStats$: Observable<any>;\r\n  challengeStats$: Observable<any>;\r\n  txnOnInsufficientFunds$: Observable<any>;\r\n  createdChallengePerHrStats$: Observable<any>;\r\n  completedChallengePerHrStats$: Observable<any>;\r\n  completedTournamentPerHrStats$: Observable<any>;\r\n  tournamentCountPerType$: Observable<any>;\r\n  challengeRatioStats$: any = {\r\n    title: \"Challenge Ratio\",\r\n    classSelector: \"challenge-ratio\",\r\n    viewType: \"pie\"\r\n  };\r\n  txnOnInsufficientFundsRatio$: any = {\r\n    title: \"Transaction on Insufficient Funds\",\r\n    classSelector: \"txn-on-insufficient-funds-ratio\",\r\n    viewType: \"pie\"\r\n  };\r\n  userStats$: Observable<MetricInputModel[]>;\r\n  rangeDate: FormControl;\r\n  date$: BehaviorSubject<DatePickerRangeModel>;\r\n  ngUnsubscribe = new Subject();\r\n  readonly FAILED_TO_RETRIEVE = '-';\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private dashboardDate: DashboardDateService,\r\n    private router: Router,\r\n    private numberPipe: DecimalPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rangeDate = new FormControl(this.dashboardDate.range);\r\n    this.rangeDate.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe((value) => {\r\n      this.dashboardDate.range = value;\r\n    });\r\n    this.date$ = new BehaviorSubject<DatePickerRangeModel>(this.dashboardDate.range);\r\n\r\n    this.date$.pipe(takeUntil(this.ngUnsubscribe)).subscribe(({ from, to }) => {\r\n      const startDate = moment().year(from.year).month(from.month - 1).date(from.day).format(DATE_FORMAT);\r\n      const endDate = moment().year(to.year).month(to.month - 1).date(to.day).format(DATE_FORMAT);\r\n\r\n      this.getRevenueStats(startDate, endDate);\r\n      this.getSignupTypeStats(startDate, endDate);\r\n      this.getSignupCountStats(startDate, endDate);\r\n      this.getSignupRatioStats();\r\n      this.getActiveUsersStats(startDate, endDate);\r\n      this.getChallengeStats(startDate, endDate);\r\n      this.getTxnOnInsufficientFunds(startDate, endDate);\r\n      this.getCreatedChallengePerHrStats(startDate, endDate);\r\n      this.getCompletedChallengePerHrStats(startDate, endDate);\r\n      this.getCompletedTournamentPerHrStats(startDate, endDate);\r\n      this.getTournamentCountPerType(startDate, endDate);\r\n      this.getChallengeRatioStats();\r\n      this.getTxnOnInsufficientFundsRatio();\r\n      this.getUserStats(startDate, endDate);\r\n      this.updateQueries(this.engagement1Queries, startDate, endDate);\r\n      this.updateQueries(this.engagement3Queries, startDate, endDate);\r\n      this.updateQueries(this.engagement4Queries, startDate, endDate);\r\n      this.updateQueries(this.gamesQueries, startDate, endDate);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n    this.date$.complete();\r\n  }\r\n\r\n  getRevenueStats(startDate, endDate) {\r\n    this.revenueStats$ = this.api.get(AdminFunctionsApi.RevenueStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: [{\r\n        game: string;\r\n        duelit_revenue: number;\r\n        player_revenue: number;\r\n      }]) => {\r\n        const revenueData = [];\r\n        let data = [];\r\n        if (result.length) {\r\n          const duelitRevenue = result.reduce((r, i) => {\r\n            r += i.duelit_revenue;\r\n            return r;\r\n          }, 0);\r\n          const playerRevenue = result.reduce((r, i) => {\r\n            r += i.player_revenue;\r\n            return r;\r\n          }, 0)\r\n          data = [\r\n            {\r\n              type: \"Duelit\",\r\n              result: duelitRevenue\r\n            }, {\r\n              type: \"Player\",\r\n              result: playerRevenue\r\n            }\r\n          ]\r\n        }\r\n        const revenueByUserType = {\r\n          title: \"Revenue Generated\",\r\n          classSelector: \"revenue1\",\r\n          viewType: \"bar\",\r\n          data\r\n        };\r\n        revenueData.push(revenueByUserType);\r\n\r\n        const revenueByUserTypePercentage = {\r\n          title: \"Revenue Generated (Percentage)\",\r\n          classSelector: \"revenue2\",\r\n          viewType: \"pie\",\r\n          data\r\n        };\r\n        revenueData.push(revenueByUserTypePercentage);\r\n\r\n        const revenueByGame = {\r\n          title: \"Revenue by Game (Duelit)\",\r\n          classSelector: \"revenue3\",\r\n          viewType: \"pie\",\r\n          data: result.map((i) => {\r\n            return { type: i.game, result: i.duelit_revenue };\r\n          })\r\n        };\r\n        revenueData.push(revenueByGame);\r\n        return revenueData;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSignupTypeStats(startDate, endDate) {\r\n    this.signupTypeStats$ = this.api.get(UsersApi.SignupType, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        facebook: string;\r\n        apple: string;\r\n        email: string;\r\n      }) => {\r\n        const data = [];\r\n        if (!(result.facebook === \"0\" && result.apple === \"0\" && result.email === \"0\")) {\r\n          Object.keys(result).forEach((key) => {\r\n            data.push({ type: key.charAt(0).toUpperCase() + key.slice(1), result: result[key] });\r\n          });\r\n        }\r\n        const signupType = {\r\n          title: \"Signup Type\",\r\n          classSelector: \"signup-type\",\r\n          viewType: \"pie\",\r\n          data\r\n        };\r\n        return [signupType];\r\n      })\r\n    );\r\n  }\r\n\r\n  getSignupCountStats(startDate, endDate) {\r\n    this.signupCountStats$ = this.api.get(UsersApi.SignupCount, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        signups: string;\r\n        activated: string;\r\n      }) => {\r\n        return [{\r\n          name: ChartName.SignupCount,\r\n          title: \"Total Sign Ups\",\r\n          subTitle: 'Count - Sign up',\r\n          data: this.numberPipe.transform(result.signups)\r\n        }, {\r\n          name: ChartName.ActivatedSignupCount,\r\n          title: \"Total Activated Sign Ups\",\r\n          subTitle: 'Count - Sign up activated',\r\n          data: this.numberPipe.transform(result.activated)\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getSignupRatioStats() {\r\n    this.signupCountStats$.subscribe(signupStats => {\r\n      let pendingCount = 0;\r\n      if (signupStats[0].data && signupStats[1].data) {\r\n        pendingCount = signupStats[0].data.replace(/,/g, \"\") - signupStats[1].data.replace(/,/g, \"\");\r\n      }\r\n      const data = [\r\n        {\r\n          type: \"Activated\",\r\n          result: signupStats[1].data ? signupStats[1].data.replace(/,/g, \"\") : 0\r\n        }, {\r\n          type: \"Pending\",\r\n          result: pendingCount\r\n        }\r\n      ]\r\n      this.signupRatioStats$ = {\r\n        title: \"Signup Ratio\",\r\n        classSelector: \"signup-ratio\",\r\n        viewType: \"pie\",\r\n        data\r\n      };\r\n    });\r\n  }\r\n\r\n  getActiveUsersStats(startDate, endDate) {\r\n    this.activeUsersStats$ = this.api.get(UsersApi.ActiveUsersStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        active_users_count: string;\r\n      }) => {\r\n        return [{\r\n          title: \"Active Users\",\r\n          subTitle: 'Count - Active Users',\r\n          data: result.active_users_count\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getChallengeStats(startDate, endDate) {\r\n    this.challengeStats$ = this.api.get(TournamentsApi.ChallengeStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result: {\r\n        cancelled: string;\r\n        completed: string;\r\n      }) => {\r\n        return [{\r\n          title: \"Cancelled\",\r\n          subTitle: 'Cancelled Challenges',\r\n          data: result.cancelled ? this.numberPipe.transform(result.cancelled) : 0\r\n        }, {\r\n          title: \"Completed\",\r\n          subTitle: 'Completed Challenges',\r\n          data: result.completed ? this.numberPipe.transform(result.completed) : 0\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getTxnOnInsufficientFunds(startDate, endDate) {\r\n    const convertedUrl = this.api.buildPath(UsersApi.UsersByConverted, ['converted'])\r\n    this.txnOnInsufficientFunds$ = this.api.get(convertedUrl, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      mergeMap((convertedResult: {\r\n        totalCount: number;\r\n      }) => {\r\n        const churnedUrl = this.api.buildPath(UsersApi.UsersByConverted, ['churned'])\r\n        return this.api.get(churnedUrl, {\r\n          query: {\r\n            start_date: moment(startDate).format(DATE_FORMAT),\r\n            end_date: moment(endDate).format(DATE_FORMAT)\r\n          }\r\n        }).pipe(\r\n          catchError(err => {\r\n            return of([]);\r\n          }),\r\n          map((churnedResult: {\r\n            totalCount: number;\r\n          }) => {\r\n            return [{\r\n              title: \"Users Converted when Coins Ran Out\",\r\n              subTitle: 'Count',\r\n              type: \"converted\",\r\n              data: convertedResult.totalCount ? this.numberPipe.transform(convertedResult.totalCount) : 0\r\n            }, {\r\n              title: \"Users Churned when Coins Ran Out\",\r\n              subTitle: 'Count',\r\n              type: \"churned\",\r\n              data: churnedResult.totalCount ? this.numberPipe.transform(churnedResult.totalCount) : 0\r\n            }];\r\n          })\r\n        )\r\n      })\r\n    );\r\n  }\r\n\r\n  getCreatedChallengePerHrStats(startDate, endDate) {\r\n    this.createdChallengePerHrStats$ = this.api.get(TournamentsApi.TournamentPerHrStats, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result) => {\r\n        const challengePerHr = [];\r\n        if (result && Object.keys(result) && Object.keys(result).length) {\r\n          for(let i=0; i<24; i++) {\r\n            challengePerHr.push({type: i, count: result[i] || 0});\r\n          }\r\n        }\r\n        return [{\r\n          title: \"Created Challenge\",\r\n          classSelector: \"total-challenge-sent\",\r\n          viewType: \"line\",\r\n          xAxisLabel: \"Hour of day (in UTC)\",\r\n          yAxisLabel: \"Count\",\r\n          data: challengePerHr\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getCompletedChallengePerHrStats(startDate, endDate) {\r\n    this.completedChallengePerHrStats$ = this.api.get(TournamentsApi.TournamentPerHrStats, {\r\n      query: {\r\n        status: \"Ended\",\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result) => {\r\n        const challengePerHr = [];\r\n        if (result && Object.keys(result) && Object.keys(result).length) {\r\n          for(let i=0; i<24; i++) {\r\n            challengePerHr.push({type: i, count: result[i] || 0});\r\n          }\r\n        }\r\n        return [{\r\n          title: \"Completed Challenge\",\r\n          classSelector: \"total-challenge-Completed\",\r\n          viewType: \"line\",\r\n          xAxisLabel: \"Hour of day (in UTC)\",\r\n          yAxisLabel: \"Count\",\r\n          data: challengePerHr\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getCompletedTournamentPerHrStats(startDate, endDate) {\r\n    this.completedTournamentPerHrStats$ = this.api.get(TournamentsApi.TournamentPerHrStats, {\r\n      query: {\r\n        type: \"open\",\r\n        status: \"Ended\",\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      }),\r\n      map((result) => {\r\n        const tournamentPerHr = [];\r\n        if (result && Object.keys(result) && Object.keys(result).length) {\r\n          for(let i=0; i<24; i++) {\r\n            tournamentPerHr.push({type: i, count: result[i] || 0});\r\n          }\r\n        }\r\n        return [{\r\n          title: \"Completed Tournament\",\r\n          classSelector: \"total-tournament-completed\",\r\n          viewType: \"line\",\r\n          xAxisLabel: \"Hour of day (in UTC)\",\r\n          yAxisLabel: \"Count\",\r\n          data: tournamentPerHr\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getTournamentCountPerType(startDate, endDate) {\r\n    this.tournamentCountPerType$ = this.api.get(TournamentsApi.TournamentCountPerType, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  getChallengeRatioStats() {\r\n    this.challengeStats$.subscribe(challengeStats => {\r\n      const data = [\r\n        {\r\n          type: \"Cancelled\",\r\n          result: challengeStats[0].data ? challengeStats[0].data.replace(/,/g, \"\") : 0\r\n        }, {\r\n          type: \"Completed\",\r\n          result: challengeStats[1].data ? challengeStats[1].data.replace(/,/g, \"\") : 0\r\n        }\r\n      ]\r\n      this.challengeRatioStats$ = {\r\n        title: \"Challenge Ratio\",\r\n        classSelector: \"challenge-ratio\",\r\n        viewType: \"pie\",\r\n        data\r\n      };\r\n    });\r\n  }\r\n\r\n  getTxnOnInsufficientFundsRatio() {\r\n    this.txnOnInsufficientFunds$.subscribe(txnOnInsufficientFunds => {\r\n      const data = [\r\n        {\r\n          type: \"Converted\",\r\n          result: txnOnInsufficientFunds[0].data ? txnOnInsufficientFunds[0].data.replace(/,/g, \"\") : 0\r\n        }, {\r\n          type: \"Churned\",\r\n          result: txnOnInsufficientFunds[1].data ? txnOnInsufficientFunds[1].data.replace(/,/g, \"\") : 0\r\n        }\r\n      ]\r\n      this.txnOnInsufficientFundsRatio$ = {\r\n        title: \"Total User that Ran Out of Coins\",\r\n        classSelector: \"transaction-ratio\",\r\n        viewType: \"pie\",\r\n        data\r\n      };\r\n    });\r\n  }\r\n\r\n  getUserStats(startDate, endDate) {\r\n    const bannedUsersCountApi = this.api.buildPath(UsersApi.UsersCountByStatus, ['banned']);\r\n    this.userStats$ = this.api.get(bannedUsersCountApi, {\r\n      query: {\r\n        start_date: moment(startDate).format(DATE_FORMAT),\r\n        end_date: moment(endDate).format(DATE_FORMAT)\r\n      },\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of(err.error.text || this.FAILED_TO_RETRIEVE);\r\n      }),\r\n      map((result) => {\r\n        return [{\r\n          title: 'Total Banned Users',\r\n          subTitle: 'Count - Banned Users',\r\n          data: result\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  updateQueries(queries, startDate, endDate) {\r\n    let timeframe;\r\n    if (startDate === endDate && startDate === moment().format(DATE_FORMAT)) {\r\n      timeframe = \"this_1_days\"\r\n    } else {\r\n      timeframe = {\r\n      start: startDate,\r\n      end: endDate\r\n    };\r\n    }\r\n    queries.forEach(q => {\r\n      if (typeof q.query.timeframe !== 'string') {\r\n        q.query = {\r\n          ...q.query,\r\n          timeframe\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDate() {\r\n    this.date$.next({ ...this.dashboardDate.range });\r\n  }\r\n\r\n  isDateRangeValid() {\r\n    const rangeDate = this.rangeDate.value;\r\n\r\n    return rangeDate.from && rangeDate.to;\r\n  }\r\n\r\n  openUsersSignup(details) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        created_start_date: startDate,\r\n        created_end_date: endDate,\r\n        not_status: details.name === ChartName.ActivatedSignupCount ? \"pending\" : \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  openUsersByBanned() {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        status: UserStatus.Banned,\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      }\r\n    });\r\n  }\r\n\r\n  openUsersByTransaction(details?) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        transaction: TransactionType.RedeemCoinsRequest,\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      }\r\n    });\r\n  }\r\n\r\n  openActiveUsers() {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        last_active_start_date: startDate,\r\n        last_active_end_date: endDate,\r\n      }\r\n    });\r\n  }\r\n\r\n  openConvertedUsers(convertedType) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams: {\r\n        convertedType,\r\n        start_date: startDate,\r\n        end_date: endDate,\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"date-filter\">\r\n  <duelit-date-picker-range [formControl]=\"rangeDate\"></duelit-date-picker-range>\r\n  <button class=\"btn custom primary\" (click)=\"updateDate()\" [disabled]=\"!isDateRangeValid()\">Filter</button>\r\n</div>\r\n\r\n<div>\r\n  <h4>Revenue</h4>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"revenueStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <h4>Games</h4>\r\n  <div class=\"row container\">\r\n    <duelit-keen *ngFor=\"let item of gamesQueries\"\r\n      [title]=\"item.title\" [keenName]=\"item.keenname\"\r\n      [viewType]=\"item.viewType\" [queryType]=\"item.queryType\" [query]=\"item.query\"\r\n      [isCombined]=\"item.isCombined\" [apiResult]=\"tournamentCountPerType$\"\r\n      class=\"col-6\"></duelit-keen>\r\n  </div>\r\n\r\n  <h4>Engagement</h4>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"createdChallengePerHrStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-12\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"completedChallengePerHrStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-12\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"completedTournamentPerHrStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-12\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"challengeStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"challengeStats$ | async; else loading; let items\">\r\n      <duelit-keen-api [keenApiInput]=\"challengeRatioStats$\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"signupCountStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openUsersSignup(item)\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"signupCountStats$ | async; else loading;\">\r\n      <duelit-keen-api [keenApiInput]=\"signupRatioStats$\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <duelit-keen *ngFor=\"let item of engagement3Queries\"\r\n      [title]=\"item.title\" [keenName]=\"item.keenname\"\r\n      [viewType]=\"item.viewType\" [queryType]=\"item.queryType\" [query]=\"item.query\"\r\n      class=\"col metric\"></duelit-keen>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <duelit-keen *ngFor=\"let item of engagement4Queries\"\r\n      [title]=\"item.title\" [keenName]=\"item.keenname\"\r\n      [viewType]=\"item.viewType\" [queryType]=\"item.queryType\" [query]=\"item.query\"\r\n      class=\"col-6 metric\"></duelit-keen>\r\n  </div>\r\n\r\n  <h4>User Statistics</h4>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"signupTypeStats$ | async; else loading; let items\">\r\n      <duelit-keen-api *ngFor=\"let item of items\" [keenApiInput]=\"item\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"activeUsersStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openActiveUsers()\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"userStats$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openUsersByBanned()\"></duelit-metric>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"row container\">\r\n    <ng-container *ngIf=\"txnOnInsufficientFunds$ | async; else loading; let items\">\r\n      <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-4 pointer\" (click)=\"openConvertedUsers(item.type)\"></duelit-metric>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"txnOnInsufficientFunds$ | async; else loading; let items\">\r\n      <duelit-keen-api [keenApiInput]=\"txnOnInsufficientFundsRatio$\" class=\"col-4\"></duelit-keen-api>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DashboardComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'duelit-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n  activeTab = 'Application Data';\r\n\r\n  constructor() { }\r\n}\r\n","<ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"activeTab\" class=\"nav-tabs\">\r\n  <li ngbNavItem=\"Application Data\">\r\n    <a ngbNavLink>App</a>\r\n    <ng-template ngbNavContent>\r\n      <duelit-app-data></duelit-app-data>\r\n    </ng-template>\r\n  </li>\r\n  <li ngbNavItem=\"Finance\">\r\n    <a ngbNavLink>Finance</a>\r\n    <ng-template ngbNavContent>\r\n      <duelit-finance></duelit-finance>\r\n    </ng-template>\r\n  </li>\r\n  <li ngbNavItem=\"Realtime Data\">\r\n    <a ngbNavLink>Realtime</a>\r\n    <ng-template ngbNavContent>\r\n      <duelit-realtime></duelit-realtime>\r\n    </ng-template>\r\n  </li>\r\n  <li class=\"timezone\">\r\n    <span>Timezone: UTC</span>\r\n  </li>\r\n</ul>\r\n\r\n<div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n","import { CommonModule, DecimalPipe, CurrencyPipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePickerRangeModule } from '@shared/components/date-picker-range/date-picker-range.module';\r\nimport { TableModule } from '@shared/components/table/table.module';\r\n\r\nimport { KeenModule } from '../../components/keen/keen.module';\r\nimport { MetricModule } from '../../components/metric/metric.module';\r\nimport { KeenApiModule } from '../../components/keen-api/keen-api.module';\r\nimport { KeenDataModule } from '../../directives/keen-data/keen-data.module';\r\nimport { AppDataComponent } from './app-data/app-data.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { FinanceComponent } from './finance/finance.component';\r\nimport { RealtimeComponent } from './realtime/realtime.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent, AppDataComponent, FinanceComponent, RealtimeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    NgbNavModule,\r\n    // NgbDatepickerModule\r\n    DatePickerRangeModule,\r\n    ReactiveFormsModule,\r\n    KeenDataModule,\r\n    KeenModule,\r\n    MetricModule,\r\n    KeenApiModule,\r\n    TableModule\r\n  ],\r\n  providers: [\r\n    DecimalPipe,\r\n    CurrencyPipe\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DecimalPipe, CurrencyPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { DatePickerRangeModel } from '@shared/components/date-picker-range/date-picker-range.model';\r\nimport { CreditsApi } from '@shared/constants/api';\r\nimport { TransactionType, DATE_FORMAT, FAILED_TO_RETRIEVE, ChartName } from '@core/constants';\r\nimport { ngbDateToMoment } from '@shared/functions/date.util';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, takeUntil, flatMap } from 'rxjs/operators';\r\n\r\nimport { MetricInputModel } from '../../../components/metric/metric.model';\r\nimport { DashboardDateService } from '../../../services/dashboard-date.service';\r\n\r\n@Component({\r\n  selector: 'duelit-finance',\r\n  templateUrl: './finance.component.html',\r\n  styleUrls: ['../app-data/app-data.component.scss', './finance.component.scss']\r\n})\r\nexport class FinanceComponent implements OnInit {\r\n  rangeDate: FormControl;\r\n  totalCredits$: Observable<MetricInputModel[]>;\r\n  productsSold$: Observable<MetricInputModel[]>;\r\n  redeemedStats$: Observable<MetricInputModel[]>;\r\n  totalProfitStats$: MetricInputModel;\r\n  date$: BehaviorSubject<DatePickerRangeModel>;\r\n  ngUnsubscribe = new Subject();\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private dashboardDate: DashboardDateService,\r\n    private toast: ToastService,\r\n    private router: Router,\r\n    private numberPipe: DecimalPipe,\r\n    private currencyPipe: CurrencyPipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rangeDate = new FormControl(this.dashboardDate.range);\r\n    this.rangeDate.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe((value) => {\r\n      this.dashboardDate.range = value;\r\n    });\r\n    this.date$ = new BehaviorSubject(this.dashboardDate.range);\r\n\r\n    this.totalCredits$ = this.api.get(CreditsApi.TotalCredits).pipe(\r\n      catchError(err => {\r\n        return of({\r\n          totalCoins: 0,\r\n          giftedCoins: 0\r\n        });\r\n      }),\r\n      map((result: { totalCoins: string; giftedCoins: string; }) => {\r\n        return [{\r\n          title: 'Total Coins',\r\n          subTitle: 'Count - Total In-game Coins',\r\n          data: result.totalCoins ? this.numberPipe.transform(result.totalCoins) : '0'\r\n        }, {\r\n          title: 'Total Gifted Coins',\r\n          subTitle: 'Count - Total Gifted Coins',\r\n          data: result.giftedCoins ? this.numberPipe.transform(result.giftedCoins) : '0'\r\n        }];\r\n      })\r\n    );\r\n\r\n    this.date$.subscribe(({ from, to }) => {\r\n      const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n      const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n\r\n      this.getRedeemedStats(startDate, endDate);\r\n      this.getTotalProfitStats();\r\n      this.productsSold$ = this.api.get(CreditsApi.PurchasedCoins, { query: { start_date: startDate, end_date: endDate } })\r\n        .pipe(\r\n          catchError(err => {\r\n            this.toast.error(err.error || err.statusText || err.message);\r\n\r\n            return of([{\r\n              amount: '4.99',\r\n              count: 0\r\n            }, {\r\n              amount: '9.99',\r\n              count: 0\r\n            }, {\r\n              amount: '25.99',\r\n              count: 0\r\n            }, {\r\n              amount: '49.99',\r\n              count: 0\r\n            }]);\r\n          }),\r\n          map((result: { amount: string; count: number }[]) => {\r\n            return result.map(res => {\r\n              return {\r\n                name: ChartName.PurchasedCount,\r\n                title: null,\r\n                subTitle: `Count - Total Purchased $${res.amount}`,\r\n                data: res.count,\r\n                amount: Number(res.amount)\r\n              };\r\n            });\r\n          })\r\n        );\r\n    });\r\n  }\r\n\r\n  updateDate() {\r\n    this.date$.next({ ...this.dashboardDate.range });\r\n  }\r\n\r\n  isDateRangeValid() {\r\n    const rangeDate = this.rangeDate.value;\r\n\r\n    return rangeDate.from && rangeDate.to;\r\n  }\r\n\r\n  getRedeemedStats(startDate, endDate) {\r\n    this.redeemedStats$ = this.api.get(CreditsApi.RedeemedCoins, {\r\n      query: {\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      }\r\n    }).pipe(\r\n      catchError(err => {\r\n        return of({\r\n          totalAmount: FAILED_TO_RETRIEVE,\r\n          playerCount: FAILED_TO_RETRIEVE\r\n        });\r\n      }),\r\n      map((result: {\r\n        totalAmount: string;\r\n        playerCount: string;\r\n      }) => {\r\n        const dollarFormat = '0.0';\r\n        let coins;\r\n        let dollar;\r\n        try {\r\n          coins = parseInt(result.totalAmount);\r\n          dollar = Math.floor(coins * 0.00825 * 100) / 100;\r\n        } catch(e) {\r\n          console.log(\"Invalid coin amount\", e);\r\n        }\r\n        let data = \"$0<br>0 coins\";\r\n        if (dollar && coins) {\r\n          data = `${this.currencyPipe.transform(dollar)}<br>${this.numberPipe.transform(coins)} coins`;\r\n        }\r\n        return [{\r\n          name: ChartName.RedeemCount,\r\n          title: 'Total Redeems',\r\n          subTitle: 'Redeem Stats',\r\n          data: data,\r\n          class: 'coin-dollar-metric',\r\n          amount: dollar\r\n        }, {\r\n          name: ChartName.RedeemCount,\r\n          title: 'Redeemed Players Count',\r\n          subTitle: 'Count - Players Count',\r\n          data: result.playerCount\r\n        }];\r\n      })\r\n    );\r\n  }\r\n\r\n  getTotalProfitStats() {\r\n    let redeemDollar;\r\n    this.redeemedStats$.pipe(\r\n      flatMap(redeemStats => {\r\n        redeemDollar = redeemStats[0].amount;\r\n        return this.productsSold$\r\n      })\r\n    ).subscribe(productSold => {\r\n      const totalDollarPurchase = productSold.reduce((accumulator, p) => {\r\n        accumulator += p.amount * Number(p.data);\r\n        return accumulator;\r\n      }, 0);\r\n      const totalProfit = totalDollarPurchase - redeemDollar;\r\n      let data = \"$0<br>0 coins\";\r\n      if (totalProfit) {\r\n        data = `${this.currencyPipe.transform(totalProfit)}<br>${this.numberPipe.transform(Math.floor(totalProfit / 0.00825))} coins`;\r\n      }\r\n      this.totalProfitStats$ = {\r\n        title: 'Total Profit',\r\n        subTitle: 'Total Profit Stats',\r\n        data,\r\n        class: 'coin-dollar-metric'\r\n      };\r\n    });\r\n  }\r\n\r\n  openUsersByTransaction(details?) {\r\n    const {from, to} = this.date$.getValue();\r\n    const startDate = ngbDateToMoment(from).format(DATE_FORMAT);\r\n    const endDate = ngbDateToMoment(to).format(DATE_FORMAT);\r\n    const queryParams = {\r\n      transaction: TransactionType.RedeemCoinsRequest,\r\n      start_date: startDate,\r\n      end_date: endDate\r\n    };\r\n    if (details.name === ChartName.PurchasedCount) {\r\n      queryParams[\"transaction\"] = TransactionType.Transaction;\r\n      queryParams[\"amount\"] = details.amount;\r\n    }\r\n\r\n    this.router.navigate(['/admin/users'], {\r\n      queryParams,\r\n    });\r\n  }\r\n}\r\n","<h4>Coins</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"totalCredits$ | async; else loading; let items\">\r\n    <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-6\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n\r\n<div class=\"divider\"></div>\r\n\r\n<div class=\"date-filter\">\r\n  <duelit-date-picker-range [formControl]=\"rangeDate\"></duelit-date-picker-range>\r\n  <button class=\"btn custom primary\" (click)=\"updateDate()\" [disabled]=\"!isDateRangeValid()\">Filter</button>\r\n</div>\r\n\r\n\r\n<h4>Purchased Product</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"productsSold$ | async; else loading; let items\">\r\n    <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-3 pointer\" (click)=\"openUsersByTransaction(item)\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n<h4>Redeemed Coins</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"redeemedStats$ | async; else loading; let items\">\r\n    <duelit-metric *ngFor=\"let item of items\" [metric]=\"item\" class=\"col-6 pointer\" (click)=\"openUsersByTransaction(item)\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n\r\n<h4>Total Profit</h4>\r\n<div class=\"row container\">\r\n  <ng-container *ngIf=\"redeemedStats$ | async; else loading;\">\r\n    <duelit-metric [metric]=\"totalProfitStats$\" class=\"col-12\"></duelit-metric>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { TableHeaderMapping } from '@shared/components/table/table.component';\r\nimport { TournamentsApi } from '@shared/constants/api';\r\nimport { Observable, of, Subject, timer, BehaviorSubject } from 'rxjs';\r\nimport { catchError, concatMap, map, takeUntil, repeatWhen } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'duelit-realtime',\r\n  templateUrl: './realtime.component.html',\r\n  styleUrls: ['./realtime.component.scss']\r\n})\r\nexport class RealtimeComponent implements OnInit, OnDestroy {\r\n  openTournaments$: Observable<Tournament[]>;\r\n  private ngUnsubscribe = new Subject();\r\n  private readonly POLL_INTERVAL = 10000;\r\n  timer$ = new BehaviorSubject(this.POLL_INTERVAL/1000);\r\n  private readonly _stop = new Subject<void>();\r\n  private readonly _start = new Subject<void>();\r\n\r\n  readonly tableHeadersMapping: TableHeaderMapping[] = [{\r\n    name: 'ID',\r\n    path: 'tournament_id'\r\n  }, {\r\n    name: 'Game Name',\r\n    path: 'game_name'\r\n  }, {\r\n    name: 'Joined Players',\r\n    path: 'total_players'\r\n  }, {\r\n    name: 'Real Players',\r\n    path: 'total_real_players'\r\n  }, {\r\n    name: 'Minimum Players',\r\n    path: 'minimum_players'\r\n  }, {\r\n    name: 'Status',\r\n    path: 'status'\r\n  }, {\r\n    name: 'Total Payout',\r\n    path: 'total_payout'\r\n  }, {\r\n    name: 'Level',\r\n    path: 'level'\r\n  }, {\r\n    name: 'Time Left',\r\n    path: 'time_left'\r\n  }];\r\n  constructor(\r\n    private api: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    timer(0, 1000).pipe(\r\n      map(t => this.POLL_INTERVAL/1000 - t),\r\n      takeUntil(this._stop),\r\n      repeatWhen(() => this._start)\r\n    ).subscribe((t) => {\r\n      this.timer$.next(t);\r\n    });\r\n\r\n    this.openTournaments$ = timer(0, this.POLL_INTERVAL).pipe(\r\n      concatMap(() => this.api.get(TournamentsApi.GetOccupiedOpenTournaments).pipe(\r\n        catchError(err => of({}))\r\n      )),\r\n      map((result: TournamentList = {}) => {\r\n        if (result === null) {\r\n          result = {};\r\n        }\r\n        this.restartTimer();\r\n        let tournaments = this.getTournamentListByStatus(result, 'Started');\r\n        tournaments = this.mapTimeLeft(tournaments);\r\n        return tournaments;\r\n      }),\r\n      takeUntil(this.ngUnsubscribe)\r\n    );\r\n  }\r\n\r\n  private getTournamentListByStatus(list: TournamentList, status: string): Tournament[] {\r\n    return Object.keys(list).filter(tournamentId => {\r\n      return list[tournamentId].status === status;\r\n    }).map(startedTournamentId => {\r\n      return list[startedTournamentId];\r\n    });\r\n  }\r\n\r\n  private mapTimeLeft(tournamentList: Tournament[]): Tournament[] {\r\n    const now  = moment();\r\n    const tournaments = tournamentList.filter((t) => {\r\n      const startTime = moment.utc(t.timer.startAt, \"DD/MM/YYYY h:mm:ss\");\r\n      return now.diff(startTime, \"hours\") === 0;\r\n    }).map((t) => {\r\n      const startTime = moment.utc(t.timer.startAt, \"DD/MM/YYYY h:mm:ss\");\r\n      const diff = moment.duration(now.diff(startTime));//.format(\"mm [mins] ss [seconds]\");\r\n      const minLeft = 10 - diff.minutes();\r\n      const secLeft = 60 - diff.seconds();\r\n      const totalSecs = minLeft * 60 + secLeft;\r\n      t.time_left = \"\";\r\n      if (minLeft > 0) {\r\n        t.time_left += `${minLeft} mins `;\r\n      }\r\n      t.time_left += `${secLeft} secs`;\r\n      return t;\r\n    })\r\n    return tournaments;\r\n  }\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  restartTimer(): void {\r\n    this._stop.next();\r\n    this._start.next();\r\n  }\r\n}\r\n\r\ninterface Tournament {\r\n  entry_fee: number;\r\n  game_id: number;\r\n  game_name: string;\r\n  instance_id: string;\r\n  minimum_players: number;\r\n  status: string;\r\n  timer: {\r\n    interval: number;\r\n    startAt: string;\r\n  };\r\n  total_payout: number;\r\n  total_players: number;\r\n  tournament_id: number;\r\n  time_left?: string;\r\n  winners: {\r\n    [player: string]: {\r\n      prize: number;\r\n      rank: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface TournamentList {\r\n  [tournamentId: string]: Tournament;\r\n}\r\n\r\n","<ng-template #loading>\r\n  <div class=\"col col-loading\">\r\n    <span class=\"metric loading\"></span>\r\n  </div>\r\n</ng-template>\r\n\r\n<h4 class=\"d-inline pr-1\">Active Tournaments</h4><span>(Refreshing in {{timer$ | async}} seconds)</span>\r\n<ng-container *ngIf=\"openTournaments$ | async; else loading; let tournaments\">\r\n  <duelit-table [data]=\"tournaments\" [headerMapping]=\"tableHeadersMapping\"></duelit-table>\r\n</ng-container>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport {\r\n  NgbdSortableHeaderDirective,\r\n  SortDirection,\r\n  SortEvent,\r\n} from '@shared/directives/ngbd-sortable-header/ngbd-sortable-header.directive';\r\n\r\nexport interface TableHeaderMapping {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface TableData {\r\n  [path: string]: any;\r\n}\r\n\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\n@Component({\r\n  selector: 'duelit-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Input() headerMapping: TableHeaderMapping[] = [];\r\n  @Input() data: TableData[] = [];\r\n  @Input() tableName?: string;\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  sortDirection: SortDirection = '';\r\n  sortColumn: TableHeaderMapping;\r\n\r\n  @ViewChildren(NgbdSortableHeaderDirective) headers: QueryList<NgbdSortableHeaderDirective>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tableName) {}\r\n  }\r\n\r\n  getData(path: string, data: TableData): string {\r\n    let temp = data;\r\n\r\n    path.split('.').forEach(p => temp = temp[p]);\r\n\r\n    return String(temp);\r\n  }\r\n\r\n  get tableData() {\r\n    return this.data.map(row => {\r\n      return this.headerMapping.map(header => {\r\n        return this.getData(header.path, row);\r\n      });\r\n    }).sort((a, b) => {\r\n      let indexOfSortedCol = this.headerMapping.indexOf(this.sortColumn);\r\n\r\n      if (indexOfSortedCol < 0) {\r\n        indexOfSortedCol = 0;\r\n      }\r\n      const result = compare(a[indexOfSortedCol], b[indexOfSortedCol]);\r\n      return this.sortDirection === 'desc' ? result * -1 : result;\r\n    });\r\n  }\r\n\r\n  onSort({column, direction}: SortEvent) {\r\n    // resetting other headers\r\n    this.headers.forEach(header => {\r\n      if (header.duelitSortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n\r\n    this.sortColumn = column;\r\n    this.sortDirection = direction;\r\n  }\r\n}\r\n","<table class=\"table table-striped\" *ngIf=\"data.length; else noData\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\" *ngFor=\"let item of headerMapping\" [duelitSortable]=\"item\" (sort)=\"onSort($event)\">{{ item.name }}</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let rowData of tableData\">\r\n    <ng-container *ngFor=\"let data of rowData; let i = index\">\r\n      <th scope=\"row\" *ngIf=\"i === 0; else td\">{{ data }}</th>\r\n      <ng-template #td>\r\n        <td>{{ data }}</td>\r\n      </ng-template>\r\n    </ng-container>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<ng-template #noData>\r\n  No data to show.\r\n</ng-template>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbdSortableHeaderModule } from '@shared/directives/ngbd-sortable-header/ngbd-sortable-header.module';\r\n\r\nimport { TableComponent } from './table.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgbdSortableHeaderModule\r\n  ],\r\n  exports: [TableComponent]\r\n})\r\nexport class TableModule { }\r\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nexport interface SortEvent {\r\n  column: any;\r\n  direction: SortDirection;\r\n}\r\nconst rotate: {[key: string]: SortDirection} = { asc: 'desc', desc: '', '': 'asc' };\r\n\r\n@Directive({\r\n  selector: 'th[duelitSortable]'\r\n})\r\nexport class NgbdSortableHeaderDirective {\r\n\r\n  @Input() duelitSortable: any = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Input() tableName = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  @HostBinding('class.pointer') get _t() { return true; }\r\n  @HostBinding('class.asc') get isAscending() {\r\n    return this.direction === 'asc';\r\n  }\r\n  @HostBinding('class.desc') get isDescending() {\r\n    return this.direction === 'desc';\r\n  }\r\n  @HostListener('click', ['$event']) rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.duelitSortable, direction: this.direction});\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NgbdSortableHeaderDirective } from './ngbd-sortable-header.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgbdSortableHeaderDirective],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [NgbdSortableHeaderDirective]\r\n})\r\nexport class NgbdSortableHeaderModule { }\r\n"]}