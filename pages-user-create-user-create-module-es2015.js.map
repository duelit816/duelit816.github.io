{"version":3,"sources":["./src/app/features/admin/pages/user-create/user-create-routing.module.ts","./src/app/features/admin/pages/user-create/user-create.component.ts","./src/app/features/admin/pages/user-create/user-create.component.html","./src/app/features/admin/pages/user-create/user-create.module.ts","./src/app/shared/functions/date.util.ts","./src/app/shared/validators/must-match.validator.ts"],"names":[],"mappings":"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","file":"pages-user-create-user-create-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserCreateComponent } from './user-create.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UserCreateComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserCreateRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UsersApi, ValuesApi } from '@shared/constants/api';\r\nimport { ngbDateToMoment } from '@shared/functions/date.util';\r\nimport { countDown } from '@shared/functions/timer.function';\r\nimport { EmailValidator } from '@shared/validators';\r\nimport { MustMatchValidator } from '@shared/validators/must-match.validator';\r\nimport * as moment from 'moment';\r\nimport { BehaviorSubject, NEVER, Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { CountryModel } from '../user-edit/models/country.model';\r\n\r\n@Component({\r\n  selector: 'duelit-user-create',\r\n  templateUrl: './user-create.component.html',\r\n  styleUrls: ['./user-create.component.scss']\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  countdown = 5;\r\n  calendarIcon = faCalendarAlt;\r\n  successIcon = faCheckCircle;\r\n  failedIcon = faTimesCircle;\r\n  userDetailsForm: FormGroup;\r\n  countries$: Observable<string[]>;\r\n  states$: Observable<string[]>;\r\n  isCreatingUser = false;\r\n  createError = null;\r\n  isCreatingDone = false;\r\n  maxDate: NgbDate;\r\n  minDate = new NgbDate(1900, 1, 1);\r\n  timer$ = new BehaviorSubject(this.countdown);\r\n  createdUser: { id?: string };\r\n\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private fb: FormBuilder,\r\n    private toast: ToastService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.countries$ = this.api.get(ValuesApi.Countries).pipe(\r\n      map((countries: CountryModel[] = []) => countries.map(country => country.name))\r\n    );\r\n    this.states$ = this.api.get(ValuesApi.States).pipe(\r\n      map((countries: CountryModel[] = []) => countries.map(country => country.name))\r\n    );\r\n\r\n    const today = moment();\r\n    this.maxDate = new NgbDate(today.year(), today.month() + 1, today.day());\r\n\r\n    this.userDetailsForm = this.fb.group({\r\n      firstName: new FormControl('', Validators.required),\r\n      lastName: new FormControl('', Validators.required),\r\n      email: new FormControl('', [EmailValidator, Validators.required]),\r\n      country: new FormControl('', Validators.required),\r\n      state: new FormControl(),\r\n      birthDate: new FormControl('', Validators.required),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      confirm: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n    }, {\r\n      validators: [ MustMatchValidator('password', 'confirm') ]\r\n    });\r\n  }\r\n\r\n  createUser() {\r\n    this.isCreatingUser = true;\r\n    this.createError = null;\r\n\r\n    const userDetails = {\r\n      ...this.userDetailsForm.value\r\n    };\r\n\r\n    const userToCreate = {\r\n      email: userDetails.email,\r\n      password: userDetails.password,\r\n      first_name: userDetails.firstName,\r\n      last_name: userDetails.lastName,\r\n      country: userDetails.country,\r\n      state: userDetails.state,\r\n      birth_date: ngbDateToMoment(userDetails.birthDate).format('YYYY-MM-DD')\r\n    };\r\n\r\n    this.api.post(UsersApi.CreateUser, {\r\n      body: userToCreate\r\n    })\r\n    .pipe(\r\n      catchError(err => {\r\n        this.isCreatingUser = false;\r\n        this.createError = err.error || err.statusText || err.message || 'Something went wrong on creating the user.';\r\n        this.toast.error(this.createError);\r\n        return NEVER;\r\n      })\r\n    )\r\n    .subscribe((createdUser) => {\r\n      this.createdUser = createdUser;\r\n      countDown(this.countdown).subscribe((t) => {\r\n        this.timer$.next(t);\r\n        if (t <= 0) {\r\n          this.timer$.complete();\r\n          this.navigateToUserProfile();\r\n        }\r\n      });\r\n      this.isCreatingUser = false;\r\n      this.isCreatingDone = true;\r\n    });\r\n  }\r\n\r\n  // createAnother() {\r\n  //   this.isCreatingDone = false;\r\n  //   this.userDetailsForm.reset({\r\n  //     firstName: '',\r\n  //     lastName: '',\r\n  //     email: '',\r\n  //     country: '',\r\n  //     state: null,\r\n  //     birthDate: '',\r\n  //     status: UserStatus.Active,\r\n  //     role: UserRole.Admin,\r\n  //     password: '',\r\n  //     confirm: '',\r\n  //   });\r\n  // }\r\n\r\n  navigateToUserProfile() {\r\n    this.router.navigate([`/admin/user`, this.createdUser.id]);\r\n  }\r\n\r\n  goBack() {\r\n    this.createError = null;\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <ng-container *ngIf=\"createError || isCreatingDone; else createUserTemplate\">\r\n    <ng-container *ngIf=\"createError\">\r\n      <div class=\"card-body result\">\r\n        <fa-icon [icon]=\"failedIcon\" class=\"fa-9x failed\"></fa-icon>\r\n        <label class=\"failed\">Failed to create user!</label>\r\n        <label class=\"failed\">Error: {{createError}}</label>\r\n        <button class=\"btn btn-primary custom col\" (click)=\"goBack()\">Go back to user details</button>\r\n        <button class=\"btn btn-primary custom col\" (click)=\"createUser()\">Retry</button>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"isCreatingDone\">\r\n      <div class=\"card-body result\">\r\n        <fa-icon [icon]=\"successIcon\" class=\"fa-9x success\"></fa-icon>\r\n        <label class=\"success\">Successfully Created User!</label>\r\n        <label class=\"success\">Redirecting to user profile in {{timer$ | async}}</label>\r\n        <button class=\"btn btn-primary custom col\" (click)=\"navigateToUserProfile()\">Redirect now</button>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #createUserTemplate>\r\n    <div class=\"card-header d-flex\">\r\n      <span>Create User</span>\r\n    </div>\r\n    <div class=\"card-body\" [formGroup]=\"userDetailsForm\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n          <label>First Name</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"firstName\">\r\n          <ng-container *ngIf=\"userDetailsForm.get('firstName').invalid && userDetailsForm.get('firstName').touched\">\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('firstName').errors.required\">This field is required.</span>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n          <label>Last Name</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"lastName\">\r\n          <ng-container *ngIf=\"userDetailsForm.get('lastName').invalid && userDetailsForm.get('lastName').touched\">\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('lastName').errors.required\">This field is required.</span>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"email\" class=\"form-control\" formControlName=\"email\">\r\n        <ng-container *ngIf=\"userDetailsForm.get('email').invalid && userDetailsForm.get('email').touched\">\r\n          <span class=\"error\" *ngIf=\"userDetailsForm.get('email').errors.required\">This field is required.</span>\r\n          <span class=\"error\" *ngIf=\"userDetailsForm.get('email').errors.email\">This field must be a valid email address.</span>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-6 form-group\">\r\n          <label>Country</label>\r\n          <select class=\"form-control\" formControlName=\"country\" aria-placeholder=\"Select Country\" *ngIf=\"countries$ | async; let countries; else loadingSelect\">\r\n            <option *ngFor=\"let country of countries\" [value]=\"country\">{{ country }}</option>\r\n          </select>\r\n          <ng-container *ngIf=\"userDetailsForm.get('country').invalid && userDetailsForm.get('country').touched\">\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('country').errors.required\">This field is required.</span>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"col-6 form-group\" *ngIf=\"userDetailsForm.get('country').value === 'United States'\">\r\n          <label>State / Province</label>\r\n          <select class=\"form-control\" formControlName=\"states\" aria-placeholder=\"Select States / Province\" *ngIf=\"states$ | async; let states; else loadingSelect\">\r\n            <option *ngFor=\"let state of states\" [value]=\"state\">{{ state }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <ng-template #loadingSelect>\r\n          <input readonly disabled class=\"form-control-plaintext\" type=\"text\" placeholder=\"Loading...\">\r\n        </ng-template>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col form-group\">\r\n          <label>Birthday</label>\r\n          <div class=\"input-group\">\r\n            <input class=\"form-control\" placeholder=\"YYYY-MM-DD\" formControlName=\"birthDate\" ngbDatepicker #d=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"minDate\">\r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\">\r\n                <fa-icon [icon]=\"calendarIcon\"></fa-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <ng-container *ngIf=\"userDetailsForm.get('birthDate').invalid && userDetailsForm.get('birthDate').touched\">\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('birthDate').errors.required\">This field is required.</span>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col form-group\">\r\n          <label>Password</label>\r\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n          <ng-container *ngIf=\"userDetailsForm.get('password').invalid && userDetailsForm.get('password').touched\">\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('password').errors.required\">This field is required.</span>\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('password').errors.minlength\">This field can not be less than {{userDetailsForm.get('password').errors.minlength.requiredLength}} characters.</span>\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('password').errors.maxlength\">This field can be at most {{userDetailsForm.get('password').errors.maxlength.requiredLength}} characters long.</span>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col form-group\">\r\n          <label>Confirm Password</label>\r\n          <input type=\"password\" class=\"form-control\" formControlName=\"confirm\">\r\n          <ng-container *ngIf=\"userDetailsForm.get('confirm').invalid && userDetailsForm.get('confirm').touched\">\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('confirm').errors.required\">This field is required.</span>\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('confirm').errors.minlength\">This field can not be less than {{userDetailsForm.get('confirm').errors.minlength.requiredLength}} characters.</span>\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('confirm').errors.maxlength\">This field can be at most {{userDetailsForm.get('confirm').errors.maxlength.requiredLength}} characters long.</span>\r\n            <span class=\"error\" *ngIf=\"userDetailsForm.get('confirm').errors.mustMatch\">Passwords do not match.</span>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n\r\n      <button class=\"btn btn-primary custom col\" [disabled]=\"userDetailsForm.invalid || isCreatingUser\" (click)=\"createUser()\">\r\n        <span *ngIf=\"isCreatingUser; else createButton\" class=\"loading\"></span>\r\n        <ng-template #createButton>Create</ng-template>\r\n      </button>\r\n\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UserCreateRoutingModule } from './user-create-routing.module';\r\nimport { UserCreateComponent } from './user-create.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserCreateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserCreateRoutingModule,\r\n    ReactiveFormsModule,\r\n    FontAwesomeModule,\r\n    NgbDatepickerModule\r\n  ],\r\n  exports: [\r\n    UserCreateComponent\r\n  ]\r\n})\r\nexport class UserCreateModule { }\r\n","import { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as moment from 'moment';\r\n\r\nexport function ngbDateToMoment(date: NgbDate): moment.Moment {\r\n  return moment().year(date.year).month(date.month - 1).date(date.day);\r\n}\r\n\r\nexport function momentToNgbDate(date: moment.Moment): NgbDate {\r\n  return new NgbDate(date.year(), date.month() + 1, date.date());\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatchValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"webpack:///"}