{"version":3,"sources":["webpack:///src/app/core/constants/chart-name.enum.ts","webpack:///src/app/core/constants/converted-type.enum.ts","webpack:///src/app/core/constants/index.ts","webpack:///src/app/core/constants/transaction-type.enum.ts","webpack:///src/app/core/constants/user-role.enum.ts","webpack:///src/app/core/constants/user-status.enum.ts","webpack:///src/app/features/paypal/paypal-routing.module.ts","webpack:///src/app/features/paypal/paypal.component.ts","webpack:///src/app/features/paypal/paypal.component.html","webpack:///src/app/features/paypal/paypal.module.ts"],"names":["ChartName","ConvertedType","isConvertedTypeValid","type","Object","keys","findIndex","key","CASHOUT_REQUEST_AMOUNT","DATE_FORMAT","FAILED_TO_RETRIEVE","TransactionType","isTransactionTypeValid","UserRole","UserStatus","routes","path","component","PaypalRoutingModule","forChild","imports","exports","PaypalComponent","route","router","toast","api","countdown","timer$","isProcessing","isSuccessful","queryParams","subscribe","result","error","redirectToRedeem","error_description","get","GetPaypalUserInfo","query","pipe","err","userDetails","cashoutRequestAmount","localStorage","getItem","post","CashoutRequest","body","email","amount","opts","addSecurity","data","JSON","stringify","show","textOrTpl","class","dismissible","delay","removeItem","t","next","complete","navigate","selector","templateUrl","styleUrls","PaypalModule","declarations"],"mappings":"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","file":"features-paypal-paypal-module-es5.js","sourcesContent":["export enum ChartName {\r\n  SignupCount = 'signupCount',\r\n  ActivatedSignupCount = 'activatedSignupCount',\r\n  PurchasedCount = 'purchasedCount',\r\n  RedeemCount = 'redeemCount'\r\n}\r\n","export enum ConvertedType {\r\n  Converted = 'converted',\r\n  Churned = 'churned',\r\n}\r\n\r\nexport function isConvertedTypeValid(type: string) {\r\n  return Object.keys(ConvertedType).findIndex(key => {\r\n    return ConvertedType[key] === type;\r\n  }) >= 0;\r\n}\r\n","export * from './user-role.enum';\r\nexport * from './user-status.enum';\r\nexport * from './transaction-type.enum';\r\nexport * from './chart-name.enum';\r\nexport * from './converted-type.enum';\r\n\r\nexport const CASHOUT_REQUEST_AMOUNT = 'cashout-request-amount';\r\nexport const DATE_FORMAT = 'YYYY-MM-DD';\r\nexport const FAILED_TO_RETRIEVE = '-';\r\n","export enum TransactionType {\r\n  Add = 'add',\r\n  AdminCredits = 'adminCredits',\r\n  Transaction = 'transaction',\r\n  RedeemCoinsRequest = 'redeemCoinsRequest'\r\n}\r\n\r\nexport function isTransactionTypeValid(type: string) {\r\n  return Object.keys(TransactionType).findIndex(key => {\r\n    return TransactionType[key] === type;\r\n  }) >= 0;\r\n}\r\n","export enum UserRole {\r\n  Admin = 'admin',\r\n  Developer = 'dev',\r\n  Player = 'player'\r\n}\r\n","export enum UserStatus {\r\n  Active = 'active',\r\n  Inactive = 'inactive',\r\n  Banned = 'banned',\r\n  Deactived = 'deactivated',\r\n  Pending = 'pending'\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaypalComponent } from './paypal.component';\r\n\r\nconst routes: Routes = [{ path: '', component: PaypalComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaypalRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CASHOUT_REQUEST_AMOUNT } from '@core/constants';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { CreditsApi, UsersApi } from '@shared/constants/api';\r\nimport { BehaviorSubject, NEVER, timer } from 'rxjs';\r\nimport { catchError, map, mergeMap, takeWhile } from 'rxjs/operators';\r\n\r\nimport { PaypalUserDetails } from './models/paypal-user-details.model';\r\n\r\n@Component({\r\n  selector: 'duelit-paypal',\r\n  templateUrl: './paypal.component.html',\r\n  styleUrls: ['./paypal.component.scss']\r\n})\r\nexport class PaypalComponent implements OnInit {\r\n  readonly countdown = 5;\r\n  timer$ = new BehaviorSubject(this.countdown);\r\n  isProcessing = true;\r\n  isSuccessful = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toast: ToastService,\r\n    private api: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((result) => {\r\n      if (result.error) {\r\n        // todo: toastr\r\n        this.redirectToRedeem();\r\n        this.toast.error(result.error_description || result.error || 'Error');\r\n\r\n        return;\r\n      }\r\n\r\n      this.api.get(UsersApi.GetPaypalUserInfo, {\r\n        query: result\r\n      }).pipe(\r\n        catchError(err => {\r\n          this.toast.error('Error on getting Paypal information.');\r\n          this.redirectToRedeem();\r\n          return NEVER;\r\n        }),\r\n        mergeMap((userDetails: PaypalUserDetails) => {\r\n          const cashoutRequestAmount = localStorage.getItem(CASHOUT_REQUEST_AMOUNT);\r\n\r\n          if (!cashoutRequestAmount) {\r\n            this.toast.error(`Couldn't fetch amount requested.`);\r\n            this.redirectToRedeem();\r\n            return NEVER;\r\n          }\r\n\r\n          return this.api.post(CreditsApi.CashoutRequest, {\r\n            body: {\r\n              email: userDetails.email,\r\n              amount: cashoutRequestAmount,\r\n            },\r\n            opts: {\r\n              addSecurity: false\r\n            }\r\n          });\r\n        }),\r\n        catchError(err => {\r\n          this.toast.error(`${err.data || err.error || (JSON.stringify(err))}`);\r\n          this.redirectToRedeem();\r\n          return NEVER;\r\n        })\r\n      ).subscribe(() => {\r\n        this.isSuccessful = true;\r\n        this.toast.show({\r\n          textOrTpl: 'Cash out request saved successfully, please check your email.',\r\n          class: 'success',\r\n          dismissible: true,\r\n          delay: 30000\r\n        });\r\n        localStorage.removeItem(CASHOUT_REQUEST_AMOUNT);\r\n        this.redirectToRedeem();\r\n      });\r\n    });\r\n  }\r\n\r\n  redirectToRedeem() {\r\n    this.isProcessing = false;\r\n    timer(0, 1000).pipe(\r\n      map(t => this.countdown - t),\r\n      takeWhile(t => t >= 0)\r\n    ).subscribe((t) => {\r\n      this.timer$.next(t);\r\n      if (t <= 0) {\r\n        this.timer$.complete();\r\n        this.router.navigate(['/redeem']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<ng-container *ngIf=\"isProcessing; else timer\">\r\n  <h3>Processing</h3>\r\n  <div class=\"spinner-container\">\r\n    <span class=\"loading\"></span>\r\n  </div>\r\n</ng-container>\r\n<ng-template #timer>\r\n  <h3 *ngIf=\"isSuccessful\">Cash out request saved successfully, please check your email.</h3>\r\n  <h3>Redirecting you to redeem page in {{timer$ | async}}</h3>\r\n</ng-template>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaypalRoutingModule } from './paypal-routing.module';\r\nimport { PaypalComponent } from './paypal.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PaypalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PaypalRoutingModule\r\n  ]\r\n})\r\nexport class PaypalModule { }\r\n"]}