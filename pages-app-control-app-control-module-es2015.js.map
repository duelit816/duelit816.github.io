{"version":3,"sources":["./src/app/features/admin/pages/app-control/app-control-routing.module.ts","./src/app/features/admin/pages/app-control/app-control.component.ts","./src/app/features/admin/pages/app-control/app-control.component.html","./src/app/features/admin/pages/app-control/app-control.module.ts","./src/app/features/admin/pages/app-control/maintenance-update-confirm-modal/maintenance-update-confirm-modal.component.ts","./src/app/features/admin/pages/app-control/maintenance-update-confirm-modal/maintenance-update-confirm-modal.component.html"],"names":[],"mappings":"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","file":"pages-app-control-app-control-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppControlComponent } from './app-control.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AppControlComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppControlRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminFunctionsApi } from '@shared/constants/api';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport {\r\n  MaintenanceUpdateConfirmModalComponent,\r\n} from './maintenance-update-confirm-modal/maintenance-update-confirm-modal.component';\r\n\r\n@Component({\r\n  selector: 'duelit-app-control',\r\n  templateUrl: './app-control.component.html',\r\n  styleUrls: ['./app-control.component.scss']\r\n})\r\nexport class AppControlComponent implements OnInit {\r\n  $maintenanceStatus: Observable<{status?: boolean}>;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private modalService: NgbModal,\r\n    private toast: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.$maintenanceStatus = this.api.get(AdminFunctionsApi.MaintenanceStatus).pipe(\r\n      map((result: {status: boolean}) => result)\r\n    );\r\n  }\r\n\r\n  confirm(status: boolean, event) {\r\n    event.preventDefault();\r\n    const maintenanceModalRef = this.modalService.open(MaintenanceUpdateConfirmModalComponent);\r\n\r\n    maintenanceModalRef.componentInstance.status = status;\r\n\r\n    maintenanceModalRef.result.then((action) => {\r\n      if (action === 'ok') {\r\n        this.$maintenanceStatus = this.api.post(AdminFunctionsApi.MaintenanceStatus, {\r\n          body: { status: !status }\r\n        }).pipe((\r\n          catchError(err => {\r\n            this.toast.error(err.error || err.statusText || err.message);\r\n            return of({status});\r\n          }),\r\n          map((result: {status: boolean}) => {\r\n            if (status !== result.status) {\r\n              this.toast.success('Successfully changed maintenance status.');\r\n            }\r\n            return result;\r\n          })\r\n        ));\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  Maintenance status&nbsp;\r\n  <ng-container>\r\n    <ng-container *ngIf=\"$maintenanceStatus | async; else loadingMaintenanceStatus; let maintenanceStatus\">\r\n      <label class=\"switch\" (click)=\"confirm(maintenanceStatus.status, $event)\">\r\n        <input type=\"checkbox\" [attr.checked]=\"maintenanceStatus.status ? true : undefined\">\r\n        <span class=\"slider round\"></span>\r\n      </label>\r\n      &nbsp;\r\n      <span><strong>{{ maintenanceStatus.status ? 'ON' : 'OFF'}}</strong></span>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-template #loadingMaintenanceStatus>\r\n    <span class=\"loading\"></span>\r\n  </ng-template>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppControlRoutingModule } from './app-control-routing.module';\r\nimport { AppControlComponent } from './app-control.component';\r\nimport {\r\n  MaintenanceUpdateConfirmModalComponent,\r\n} from './maintenance-update-confirm-modal/maintenance-update-confirm-modal.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppControlComponent, MaintenanceUpdateConfirmModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AppControlRoutingModule,\r\n    NgbModalModule\r\n  ]\r\n})\r\nexport class AppControlModule { }\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'duelit-maintenance-update-confirm-modal',\r\n  templateUrl: './maintenance-update-confirm-modal.component.html',\r\n  styleUrls: ['./maintenance-update-confirm-modal.component.scss']\r\n})\r\nexport class MaintenanceUpdateConfirmModalComponent {\r\n  status: boolean;\r\n  constructor(public modal: NgbActiveModal) { }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Maintenance Status Update</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>You are about to change the status of the Application from <strong>{{ status ? 'true' : 'false'}} </strong> to <strong>{{ status ? 'false' : 'true'}} </strong></p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\r\n  <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('ok')\">Ok</button>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}