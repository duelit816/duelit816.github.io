{"version":3,"sources":["webpack:///src/app/features/admin/pages/app-control/app-control-routing.module.ts","webpack:///src/app/features/admin/pages/app-control/app-control.component.ts","webpack:///src/app/features/admin/pages/app-control/app-control.component.html","webpack:///src/app/features/admin/pages/app-control/app-control.module.ts","webpack:///src/app/features/admin/pages/app-control/maintenance-update-confirm-modal/maintenance-update-confirm-modal.component.ts","webpack:///src/app/features/admin/pages/app-control/maintenance-update-confirm-modal/maintenance-update-confirm-modal.component.html"],"names":["routes","path","component","AppControlRoutingModule","forChild","imports","exports","AppControlComponent","api","modalService","toast","$maintenanceStatus","get","MaintenanceStatus","pipe","result","status","event","preventDefault","maintenanceModalRef","open","componentInstance","then","action","post","body","err","error","statusText","message","success","selector","templateUrl","styleUrls","AppControlModule","declarations","MaintenanceUpdateConfirmModalComponent","modal"],"mappings":"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","file":"pages-app-control-app-control-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppControlComponent } from './app-control.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AppControlComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppControlRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminFunctionsApi } from '@shared/constants/api';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport {\r\n  MaintenanceUpdateConfirmModalComponent,\r\n} from './maintenance-update-confirm-modal/maintenance-update-confirm-modal.component';\r\n\r\n@Component({\r\n  selector: 'duelit-app-control',\r\n  templateUrl: './app-control.component.html',\r\n  styleUrls: ['./app-control.component.scss']\r\n})\r\nexport class AppControlComponent implements OnInit {\r\n  $maintenanceStatus: Observable<{status?: boolean}>;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private modalService: NgbModal,\r\n    private toast: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.$maintenanceStatus = this.api.get(AdminFunctionsApi.MaintenanceStatus).pipe(\r\n      map((result: {status: boolean}) => result)\r\n    );\r\n  }\r\n\r\n  confirm(status: boolean, event) {\r\n    event.preventDefault();\r\n    const maintenanceModalRef = this.modalService.open(MaintenanceUpdateConfirmModalComponent);\r\n\r\n    maintenanceModalRef.componentInstance.status = status;\r\n\r\n    maintenanceModalRef.result.then((action) => {\r\n      if (action === 'ok') {\r\n        this.$maintenanceStatus = this.api.post(AdminFunctionsApi.MaintenanceStatus, {\r\n          body: { status: !status }\r\n        }).pipe((\r\n          catchError(err => {\r\n            this.toast.error(err.error || err.statusText || err.message);\r\n            return of({status});\r\n          }),\r\n          map((result: {status: boolean}) => {\r\n            if (status !== result.status) {\r\n              this.toast.success('Successfully changed maintenance status.');\r\n            }\r\n            return result;\r\n          })\r\n        ));\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  Maintenance status&nbsp;\r\n  <ng-container>\r\n    <ng-container *ngIf=\"$maintenanceStatus | async; else loadingMaintenanceStatus; let maintenanceStatus\">\r\n      <label class=\"switch\" (click)=\"confirm(maintenanceStatus.status, $event)\">\r\n        <input type=\"checkbox\" [attr.checked]=\"maintenanceStatus.status ? true : undefined\">\r\n        <span class=\"slider round\"></span>\r\n      </label>\r\n      &nbsp;\r\n      <span><strong>{{ maintenanceStatus.status ? 'ON' : 'OFF'}}</strong></span>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-template #loadingMaintenanceStatus>\r\n    <span class=\"loading\"></span>\r\n  </ng-template>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppControlRoutingModule } from './app-control-routing.module';\r\nimport { AppControlComponent } from './app-control.component';\r\nimport {\r\n  MaintenanceUpdateConfirmModalComponent,\r\n} from './maintenance-update-confirm-modal/maintenance-update-confirm-modal.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppControlComponent, MaintenanceUpdateConfirmModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AppControlRoutingModule,\r\n    NgbModalModule\r\n  ]\r\n})\r\nexport class AppControlModule { }\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'duelit-maintenance-update-confirm-modal',\r\n  templateUrl: './maintenance-update-confirm-modal.component.html',\r\n  styleUrls: ['./maintenance-update-confirm-modal.component.scss']\r\n})\r\nexport class MaintenanceUpdateConfirmModalComponent {\r\n  status: boolean;\r\n  constructor(public modal: NgbActiveModal) { }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Maintenance Status Update</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>You are about to change the status of the Application from <strong>{{ status ? 'true' : 'false'}} </strong> to <strong>{{ status ? 'false' : 'true'}} </strong></p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\r\n  <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('ok')\">Ok</button>\r\n</div>\r\n"]}