{"version":3,"sources":["webpack:///src/app/features/admin/pages/profile/profile-routing.module.ts","webpack:///src/app/features/admin/pages/profile/profile.component.ts","webpack:///src/app/features/admin/pages/profile/profile.component.html","webpack:///src/app/features/admin/pages/profile/profile.module.ts"],"names":["routes","path","component","ProfileRoutingModule","forChild","imports","exports","ProfileComponent","loginService","fb","calendarIcon","user","birthDate","ngbBirthDate","year","month","day","accountInfoForm","group","firstName","lastName","email","changePasswordForm","change","password","minLength","confirm","get","disable","valueChanges","subscribe","value","enable","passwords","selector","templateUrl","styleUrls","ProfileModule","declarations"],"mappings":"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","file":"pages-profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileComponent } from './profile.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ProfileComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { LoginService } from '@core/services/login.service';\r\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'duelit-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  accountInfoForm: FormGroup;\r\n  changePasswordForm: FormGroup;\r\n  calendarIcon = faCalendarAlt;\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const user = this.loginService.user;\r\n\r\n    const birthDate = moment(user.birthDate);\r\n    const ngbBirthDate = new NgbDate(birthDate.year(), birthDate.month() + 1, birthDate.day());\r\n\r\n\r\n    this.accountInfoForm = this.fb.group({\r\n      firstName: new FormControl(user.firstName),\r\n      lastName: new FormControl(user.lastName),\r\n      email: new FormControl(user.email),\r\n      birthDate: new FormControl(ngbBirthDate),\r\n    });\r\n\r\n    this.changePasswordForm = this.fb.group({\r\n      change: new FormControl(false),\r\n      password: new FormControl(null, [Validators.minLength(8)]),\r\n      confirm: new FormControl(null, [Validators.minLength(8)])\r\n    });\r\n\r\n    this.changePasswordForm.get('password').disable();\r\n    this.changePasswordForm.get('confirm').disable();\r\n    this.changePasswordForm.get('change').valueChanges.subscribe(value => {\r\n      if (value) {\r\n        this.changePasswordForm.get('password').enable();\r\n        this.changePasswordForm.get('confirm').enable();\r\n      } else {\r\n        this.changePasswordForm.get('password').disable();\r\n        this.changePasswordForm.get('confirm').disable();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  isConfirmPasswordCorrect(): boolean {\r\n    const passwords = this.changePasswordForm.value;\r\n    return passwords.password === passwords.confirm;\r\n  }\r\n}\r\n","<duelit-panel head=\"Account Information\">\r\n  <div class=\"row\" >\r\n    <div class=\"col-md-6\" [formGroup]=\"accountInfoForm\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"lastName\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Email Address</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Birthday</label>\r\n        <div class=\"form-group\">\r\n          <div class=\"input-group\">\r\n            <input class=\"form-control\" placeholder=\"YYYY-MM-DD\"\r\n                    formControlName=\"birthDate\" ngbDatepicker #d=\"ngbDatepicker\">\r\n            <div class=\"input-group-append\">\r\n              <button (click)=\"d.toggle()\" type=\"button\" class=\"btn btn-outline-secondary calendar\">\r\n                <fa-icon [icon]=\"calendarIcon\"></fa-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row justify-content-center\">\r\n        <button class=\"btn custom primary\">Update Information</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-md-6\" [formGroup]=\"changePasswordForm\">\r\n      <div class=\"form-group\">\r\n        <div>Change Password</div >\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" formControlName=\"change\">\r\n          <span class=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>New Password</label>\r\n        <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n        <span *ngIf=\"changePasswordForm.get('password').touched && changePasswordForm.get('password').invalid\" class=\"error\">Minimum length for password is 8.</span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Confirm Password</label>\r\n        <input type=\"password\" class=\"form-control\" formControlName=\"confirm\"\r\n          [class.invalid]=\"changePasswordForm.get('confirm').touched && !isConfirmPasswordCorrect()\">\r\n        <span *ngIf=\"changePasswordForm.get('confirm').touched && !isConfirmPasswordCorrect()\" class=\"error\">Passwords do not match!</span>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\" *ngIf=\"changePasswordForm.value.change\">\r\n        <button class=\"btn custom primary\">Update Password</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</duelit-panel>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PanelModule } from '@shared/components/panel';\r\n\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ProfileComponent } from './profile.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    PanelModule,\r\n    ReactiveFormsModule,\r\n    NgbDatepickerModule,\r\n    FontAwesomeModule,\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n"]}