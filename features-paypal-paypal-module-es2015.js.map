{"version":3,"sources":["./src/app/core/constants/chart-name.enum.ts","./src/app/core/constants/converted-type.enum.ts","./src/app/core/constants/index.ts","./src/app/core/constants/transaction-type.enum.ts","./src/app/core/constants/user-role.enum.ts","./src/app/core/constants/user-status.enum.ts","./src/app/features/paypal/paypal-routing.module.ts","./src/app/features/paypal/paypal.component.ts","./src/app/features/paypal/paypal.component.html","./src/app/features/paypal/paypal.module.ts"],"names":[],"mappings":"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","file":"features-paypal-paypal-module-es2015.js","sourcesContent":["export enum ChartName {\r\n  SignupCount = 'signupCount',\r\n  ActivatedSignupCount = 'activatedSignupCount',\r\n  PurchasedCount = 'purchasedCount',\r\n  RedeemCount = 'redeemCount'\r\n}\r\n","export enum ConvertedType {\r\n  Converted = 'converted',\r\n  Churned = 'churned',\r\n}\r\n\r\nexport function isConvertedTypeValid(type: string) {\r\n  return Object.keys(ConvertedType).findIndex(key => {\r\n    return ConvertedType[key] === type;\r\n  }) >= 0;\r\n}\r\n","export * from './user-role.enum';\r\nexport * from './user-status.enum';\r\nexport * from './transaction-type.enum';\r\nexport * from './chart-name.enum';\r\nexport * from './converted-type.enum';\r\n\r\nexport const CASHOUT_REQUEST_AMOUNT = 'cashout-request-amount';\r\nexport const DATE_FORMAT = 'YYYY-MM-DD';\r\nexport const FAILED_TO_RETRIEVE = '-';\r\n","export enum TransactionType {\r\n  Add = 'add',\r\n  AdminCredits = 'adminCredits',\r\n  Transaction = 'transaction',\r\n  RedeemCoinsRequest = 'redeemCoinsRequest'\r\n}\r\n\r\nexport function isTransactionTypeValid(type: string) {\r\n  return Object.keys(TransactionType).findIndex(key => {\r\n    return TransactionType[key] === type;\r\n  }) >= 0;\r\n}\r\n","export enum UserRole {\r\n  Admin = 'admin',\r\n  Developer = 'dev',\r\n  Player = 'player'\r\n}\r\n","export enum UserStatus {\r\n  Active = 'active',\r\n  Inactive = 'inactive',\r\n  Banned = 'banned',\r\n  Deactived = 'deactivated',\r\n  Pending = 'pending'\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaypalComponent } from './paypal.component';\r\n\r\nconst routes: Routes = [{ path: '', component: PaypalComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaypalRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CASHOUT_REQUEST_AMOUNT } from '@core/constants';\r\nimport { ApiService } from '@core/services/api.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\nimport { CreditsApi, UsersApi } from '@shared/constants/api';\r\nimport { BehaviorSubject, NEVER, timer } from 'rxjs';\r\nimport { catchError, map, mergeMap, takeWhile } from 'rxjs/operators';\r\n\r\nimport { PaypalUserDetails } from './models/paypal-user-details.model';\r\n\r\n@Component({\r\n  selector: 'duelit-paypal',\r\n  templateUrl: './paypal.component.html',\r\n  styleUrls: ['./paypal.component.scss']\r\n})\r\nexport class PaypalComponent implements OnInit {\r\n  readonly countdown = 5;\r\n  timer$ = new BehaviorSubject(this.countdown);\r\n  isProcessing = true;\r\n  isSuccessful = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toast: ToastService,\r\n    private api: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((result) => {\r\n      if (result.error) {\r\n        // todo: toastr\r\n        this.redirectToRedeem();\r\n        this.toast.error(result.error_description || result.error || 'Error');\r\n\r\n        return;\r\n      }\r\n\r\n      this.api.get(UsersApi.GetPaypalUserInfo, {\r\n        query: result\r\n      }).pipe(\r\n        catchError(err => {\r\n          this.toast.error('Error on getting Paypal information.');\r\n          this.redirectToRedeem();\r\n          return NEVER;\r\n        }),\r\n        mergeMap((userDetails: PaypalUserDetails) => {\r\n          const cashoutRequestAmount = localStorage.getItem(CASHOUT_REQUEST_AMOUNT);\r\n\r\n          if (!cashoutRequestAmount) {\r\n            this.toast.error(`Couldn't fetch amount requested.`);\r\n            this.redirectToRedeem();\r\n            return NEVER;\r\n          }\r\n\r\n          return this.api.post(CreditsApi.CashoutRequest, {\r\n            body: {\r\n              email: userDetails.email,\r\n              amount: cashoutRequestAmount,\r\n            },\r\n            opts: {\r\n              addSecurity: false\r\n            }\r\n          });\r\n        }),\r\n        catchError(err => {\r\n          this.toast.error(`${err.data || err.error || (JSON.stringify(err))}`);\r\n          this.redirectToRedeem();\r\n          return NEVER;\r\n        })\r\n      ).subscribe(() => {\r\n        this.isSuccessful = true;\r\n        this.toast.show({\r\n          textOrTpl: 'Cash out request saved successfully, please check your email.',\r\n          class: 'success',\r\n          dismissible: true,\r\n          delay: 30000\r\n        });\r\n        localStorage.removeItem(CASHOUT_REQUEST_AMOUNT);\r\n        this.redirectToRedeem();\r\n      });\r\n    });\r\n  }\r\n\r\n  redirectToRedeem() {\r\n    this.isProcessing = false;\r\n    timer(0, 1000).pipe(\r\n      map(t => this.countdown - t),\r\n      takeWhile(t => t >= 0)\r\n    ).subscribe((t) => {\r\n      this.timer$.next(t);\r\n      if (t <= 0) {\r\n        this.timer$.complete();\r\n        this.router.navigate(['/redeem']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<ng-container *ngIf=\"isProcessing; else timer\">\r\n  <h3>Processing</h3>\r\n  <div class=\"spinner-container\">\r\n    <span class=\"loading\"></span>\r\n  </div>\r\n</ng-container>\r\n<ng-template #timer>\r\n  <h3 *ngIf=\"isSuccessful\">Cash out request saved successfully, please check your email.</h3>\r\n  <h3>Redirecting you to redeem page in {{timer$ | async}}</h3>\r\n</ng-template>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaypalRoutingModule } from './paypal-routing.module';\r\nimport { PaypalComponent } from './paypal.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PaypalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PaypalRoutingModule\r\n  ]\r\n})\r\nexport class PaypalModule { }\r\n"],"sourceRoot":"webpack:///"}